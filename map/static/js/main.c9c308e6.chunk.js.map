{"version":3,"sources":["images/wifi.svg","images/toilet.svg","images/socket.svg","images/user.svg","images/empty-landmark.svg","redux/middlewares/const.js","redux/shared/actions.js","config/map.js","redux/shared/reducer.js","redux/shared/selectors.js","redux/shared/index.js","redux/middlewares/globalErrorHandler.js","redux/actions/ui/feedback-sidebar.js","redux/reducers/ui/feedback-sidebar.js","redux/reducers/ui/index.js","redux/markers/toilets/actions.js","redux/markers/toilets/reducer.js","services/api.js","services/feedback.js","services/markers.js","services/routing.js","redux/markers/toilets/thunks.js","redux/markers/toilets/index.js","redux/markers/wifi/actions.js","redux/markers/wifi/reducer.js","redux/markers/wifi/thunks.js","redux/markers/wifi/index.js","redux/markers/sockets/actions.js","redux/markers/sockets/reducer.js","redux/markers/sockets/thunks.js","redux/markers/sockets/index.js","redux/markers/actions.js","redux/markers/reducer.js","redux/user/actions.js","redux/user/selectors.js","redux/user/reducer.js","redux/user/index.js","redux/markers/selectors.js","redux/markers/thunks.js","redux/markers/index.js","redux/feedback/actions.js","redux/feedback/reducer.js","redux/feedback/thunks.js","redux/feedback/index.js","redux/routing/actions.js","redux/routing/reducer.js","redux/routing/selectors.js","redux/routing/helpers.js","redux/routing/thunks.js","redux/rootReducer.js","redux/routing/index.js","redux/store.js","config/notification.js","styles/theme.js","styles/sizes.js","components/ToiletMarker/icon.js","components/ToiletMarker/index.js","components/ToiletMarker/marker.jsx","components/ToiletMarker/styles.js","components/WifiMarker/icon.js","components/WifiMarker/index.js","components/WifiMarker/marker.jsx","components/WifiMarker/styles.js","components/UserMarker/icon.js","components/UserMarker/index.js","components/UserMarker/marker.jsx","components/UserLocationButton/index.js","components/UserLocationButton/button.jsx","components/FilterButton/styles.js","components/FilterButton/option.jsx","components/FilterButton/filters.js","components/FilterButton/icons.jsx","components/FilterButton/button.jsx","components/FilterButton/index.js","views/FeedbackSidebar/helpers.js","views/FeedbackSidebar/styles.js","views/FeedbackSidebar/sidebar.jsx","views/FeedbackSidebar/container.jsx","views/FeedbackSidebar/index.js","views/Map/helpers.js","components/NewMarker/icon.js","components/SocketMarker/icon.js","components/SocketMarker/marker.jsx","components/SocketMarker/styles.js","views/Map/map.jsx","views/Map/styles.js","views/Map/container.jsx","views/Map/index.js","views/RouteInformationPanel/panel.jsx","views/RouteInformationPanel/helpers.js","views/RouteInformationPanel/index.js","views/RouteInformationPanel/styles.js","views/MapPage/page.jsx","views/MapPage/styles.js","views/MapPage/container.jsx","views/MapPage/index.js","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","GEOLOCATION_ERRORS","_GEOLOCATION_ERRORS","Object","defineProperty","createActions","SHARED","SET_ERROR","errorMessage","errorId","shortId","generate","SET_MAP_MODE","mode","SET_MAP_VIEWPORT","viewport","shared","setError","setMapMode","setMapViewport","MAP_MODES","READ","CREATE","defaultState","errorList","mapMode","mapViewport","zoom","center","reducer","handleActions","_handleActions","state","_ref","_ref$payload","payload","update","$push","_ref2","$set","_ref3","selectLastError","createSelector","list","length","selectMapMode","middleware","store","next","action","error","_","get","message","dispatch","sharedActions","geolocationErrorCode","open","createAction","concat","close","feedbackSidebarActions","feedback_sidebar_handleActions","toString","objectSpread","combineReducers","feedbackSidebar","MARKERS","TOILETS","GET_MARKERS_REQUEST","GET_MARKERS_SUCCESS","toilets","GET_MARKERS_ERROR","markers","getMarkersRequest","getMarkersSuccess","getMarkersError","reducer_handleActions","isFetching","toiletsToUpdate","map","w","location","rest","objectWithoutProperties","newLocation","coordinates","baseHereRoutingApi","process","buildApiUrl","root","url","buildBackendApiUrl","buildHereRoutingApiUrl","feedbackApi","wifiApi","toiletsApi","socketsApi","markersApi","routingApi","createFeedback","feedback","axios","post","type","getWifi","getToilets","getSockets","getMarkerTypes","MODE_COMPONENTS","transportModes","trafficMode","getRoute","point0","point1","waypoint0","join","waypoint1","values","params","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","markersService","sent","t0","console","stop","this","_x","apply","arguments","WIFI","wifi","wifi_reducer_handleActions","wifiToUpdate","SOCKETS","sockets","sockets_reducer_handleActions","socketsToUpdate","socket","SET_FILTER","filter","SET_NEW_MARKER_POSITION","position","GET_TYPES_REQUEST","GET_TYPES_SUCCESS","types","GET_TYPES_ERROR","setFilter","setNewMarkerPosition","getTypesRequest","getTypesSuccess","getTypesError","markersActions","selected","newMarkerPosition","markerTypes","isMarkerTypesFetching","markerTypesError","markers_reducer_handleActions","_ref4","user","USER","SET_CURRENT_LOCATION","locationOrError","currentLocation","code","selectUserCurrentLocation","selectUserCurrentLocationError","locationError","setCurrentLocation","actions","rootSelector","selectWifi","selectToilets","selectSockets","selectIsAllMarkersFetching","selectFilter","selectNewMarkerPositionInGeoJSON","userSelectors","userPosition","getMarkers","Promise","all","wifiThunks","toiletsThunks","socketsThunks","_callee2","_context2","_x2","FEEDBACK","CREATE_FEEDBACK_REQUEST","CREATE_FEEDBACK_SUCCESS","CREATE_FEEDBACK_ERROR","createFeedbackRequest","createFeedbackSuccess","createFeedbackError","feedback_reducer_handleActions","isLoading","feedbackService","ROUTING","GET_ROUTE_REQUEST","marker","GET_ROUTE_SUCCESS","route","GET_ROUTE_ERROR","RESET_ROUTE","routing","getRouteRequest","getRouteSuccess","getRouteError","resetRoute","routing_reducer_handleActions","selectRouting","selectRoute","leg","selectRouteSummary","summary","getFormattedRoute","_route$","response","userLocation","routingService","reducers","ui","redux_store","applyMiddleware","thunk","globalErrorHandler","enhancer","composeWithDevTools","composeEnhancers","createStore","rootReducer","MAX_SNACK","ANCHOR","vertical","horizontal","theme","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","markerIcon","options","iconUrl","toilet","iconSize","icon","L","Icon","Marker","withStyles","routeButton","paddingTop","paddingBottom","&:hover","backgroundColor","content","width","fontSize","point","fontWeight","title","classes","buildRoute","react","onDblclick","Popup","autoPan","className","index_es","disableRipple","onClick","icons_index_es","address","description","userMarker","zIndexOffset","Button","react_default","createElement","color","styles","drop","display","flexDirection","alignItems","button","mainButton","optionButton","marginTop","@media only screen and (min-width: 768px)","top","left","isSelected","cc","size","MARKER_FILTERS","label","value","WcOptionIcon","SocketOptionIcon","WifiOptionIcon","ClearAllOptionIcon","FilterButton","onFilterClick","_this","props","toggle","setState","prevState","_this$props","selectedFilter","FilterButton_option","Component","validateFeedback","errors","author","trim","push","hasErrors","contrastText","sidebarRoot","overflowX","sidebarTitle","padding","sidebarTitleContent","fontFamily","fieldsContainer","margin","formField","buttonsContainer","justifyContent","breakpoints","up","freebieTypes","isOpen","cancel","submit","handleFieldChange","isValidField","field","includes","getFieldValidationChecker","onClose","onOpen","anchor","paper","container","item","xs","variant","gutterBottom","align","spacing","required","fullWidth","onChange","InputLabelProps","shrink","placeholder","htmlFor","inputProps","id","name","key","multiline","FeedbackSidebarContainer","e","target","handleSubmit","closeSidebar","sendFeedback","setReadMapMode","_this$state","then","enqueueSnackbar","catch","handleCancel","_this$props2","_this$props3","openSidebar","_this$state2","sidebar","mapDispatch","thunks","FeedbackSidebar","connect","markersSelectors","withSnackbar","getFlatPosition","latitude","longitude","getPositionsForPolyline","buildedRoutes","maneuver","startPosition","start","originalPosition","endPosition","end","toConsumableArray","newMarker","FreeOpportunitiesMap","refNewMarker","createRef","setMapRef","element","handleViewportChanged","current","leafletElement","setLatLng","buildRouteToMarker","prevProps","panTo","_this2","Map","onViewportChanged","zoomControl","ref","maxZoom","TileLayer","attribution","FeatureGroup","components_UserMarker","components_WifiMarker","components_ToiletMarker","SocketMarker_marker","Polyline","positions","defaultProps","height","MapContainer","getUserLocation","navigator","geolocation","getCurrentPosition","_position$coords","coords","currentUserLocation","routingThunks","userActions","selectors","routingSelectors","markerActions","RoutePanel","_this$props$summary","time","minutes","travelTime","Math","ceil","hours","getTimeFromSummary","distance","getDistanceFromSummary","header","closeButtonRoot","closeButton","disableGutters","PureComponent","Panel","marginBottom","progress","zIndex","filterButton","routePanel","userLocationButton","contactUsWrapper","bottom","contactUs","borderRadius","contactUsDesktop","right","@media only screen and (max-width: 768px)","openFeedbackSidebar","setCreationMapMode","setUserLocation","routeSummary","isMarkersFetching","isReadMode","views_Map","components_FilterButton","components_UserLocationButton","views_FeedbackSidebar","RouteInformationPanel","MapPageContainer","setNewMarkerPositionOnMapViewport","lastGlobalError","oldErrorId","newErrorId","page","assign","MapPage","sharedSelectors","setUserCurrentLocation","markersThunks","routingActions","propsFromState","propsFromDispatch","slice","lat","lng","App","es","build","maxSnack","notification","anchorOrigin","BrowserRouter","basename","Fragment","Switch","Route","path","component","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.c9c308e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wifi.a5113c91.svg\";","module.exports = __webpack_public_path__ + \"static/media/toilet.26830feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/socket.22e24f5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c45c2ef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-landmark.76edbd6f.svg\";","export const NETWORK_ERROR_MESSAGE = 'Network Error';\r\nexport const NETWORK_ERROR_MESSAGE_RU = 'Ошибка подключения к интернету.';\r\n\r\nexport const LOCATION_ACCESS_DENIED_CODE = 1;\r\nexport const LOCATION_ACCESS_DENIED_MESSAGE_RU = 'Для работы приложения необходимо включить геолокацию.';\r\n\r\nexport const LOCATION_UNAVAILABLE_CODE = 2;\r\nexport const LOCATION_UNAVAILABLE_MESSAGE_RU = 'Ошибка при определении месторасположения.';\r\n\r\nexport const LOCATION_TIMEOUT_CODE = 3;\r\nexport const LOCATION_TIMEOUT_MESSAGE_RU = 'Время ожидания вышло.';\r\n\r\nexport const GEOLOCATION_ERRORS = {\r\n  [LOCATION_ACCESS_DENIED_CODE]: LOCATION_ACCESS_DENIED_MESSAGE_RU,\r\n  [LOCATION_UNAVAILABLE_CODE]: LOCATION_UNAVAILABLE_MESSAGE_RU,\r\n  [LOCATION_TIMEOUT_CODE]: LOCATION_TIMEOUT_MESSAGE_RU,\r\n};\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\nimport shortId from 'shortid';\r\n\r\nconst {\r\n  shared: {\r\n    setError,\r\n    setMapMode,\r\n    setMapViewport,\r\n  },\r\n} = createActions({\r\n  SHARED: {\r\n    SET_ERROR: errorMessage => ({ errorId: shortId.generate(), errorMessage }),\r\n    SET_MAP_MODE: mode => ({ mode }),\r\n    SET_MAP_VIEWPORT: viewport => ({ viewport }),\r\n  },\r\n});\r\n\r\nexport {\r\n  setError,\r\n  setMapMode,\r\n  setMapViewport,\r\n};\r\n","/* @flow */\r\nexport const TILE_LAYER_URL = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\nexport const MAP_ATTRIBUTION = '&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\r\n\r\nexport const MAP_MODES = {\r\n  READ: 'read',\r\n  CREATE: 'create',\r\n};\r\n\r\nexport const DEFAULT_MAP_CENTER = [53.9017, 27.5429];\r\n\r\nexport const DEFAULT_MAP_ZOOM = 12;\r\nexport const MAX_ZOOM = 19;\r\n","// @flow\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport { setError, setMapMode, setMapViewport } from './actions';\r\nimport { DEFAULT_MAP_CENTER, DEFAULT_MAP_ZOOM, MAP_MODES } from '../../config/map';\r\n\r\nconst defaultState = {\r\n  errorList: [],\r\n\r\n  mapMode: MAP_MODES.READ,\r\n\r\n  mapViewport: {\r\n    zoom: DEFAULT_MAP_ZOOM,\r\n    center: DEFAULT_MAP_CENTER,\r\n  },\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setError]: (state, { payload: { errorMessage, errorId } }) => {\r\n    return update(state, {\r\n      errorList: {\r\n        $push: [{\r\n          errorId,\r\n          errorMessage,\r\n        }],\r\n      },\r\n    });\r\n  },\r\n  [setMapMode]: (state, { payload: { mode } }) => {\r\n    return update(state, {\r\n      mapMode: {\r\n        $set: mode,\r\n      },\r\n    });\r\n  },\r\n  [setMapViewport]: (state, { payload: { viewport } }) => {\r\n    return update(state, {\r\n      mapViewport: {\r\n        $set: viewport,\r\n      },\r\n    });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectErrorsList = state => state.shared.errorList;\r\n\r\nexport const selectLastError = createSelector(\r\n  selectErrorsList,\r\n  (list) => {\r\n    return list.length > 0 ? list[list.length - 1] : null;\r\n  },\r\n);\r\n\r\nexport const selectMapMode = state => state.shared.mapMode;\r\n","/* @flow */\r\n\r\nimport * as sharedActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  sharedActions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","// @flow\r\nimport _ from 'lodash';\r\nimport {\r\n  NETWORK_ERROR_MESSAGE, NETWORK_ERROR_MESSAGE_RU,\r\n  GEOLOCATION_ERRORS,\r\n} from './const';\r\nimport { sharedActions } from '../shared';\r\n\r\nconst middleware = store => next => (action) => {\r\n  const hasError = action.error\r\n    || _.get(action, 'payload.error', false);\r\n  if (hasError) {\r\n    const { payload } = action;\r\n    if (payload.message && payload.message === NETWORK_ERROR_MESSAGE) {\r\n      store.dispatch(sharedActions.setError(NETWORK_ERROR_MESSAGE_RU));\r\n    }\r\n    if (payload.geolocationErrorCode) {\r\n      const errorMessage = GEOLOCATION_ERRORS[payload.geolocationErrorCode];\r\n      store.dispatch(sharedActions.setError(errorMessage));\r\n    }\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default middleware;\r\n","/* @flow */\r\n\r\nimport { createAction } from 'redux-actions';\r\n\r\nconst prefix = 'FEEDBACK_SIDEBAR';\r\n\r\nconst open = createAction(`${prefix}/OPEN`);\r\nconst close = createAction(`${prefix}/CLOSE`);\r\n\r\nexport {\r\n  open,\r\n  close,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport { feedbackSidebarActions } from '../../actions/ui';\r\n\r\ntype State = {\r\n  +open: boolean,\r\n};\r\n\r\nconst { open, close } = feedbackSidebarActions;\r\n\r\nconst defaultState: State = {\r\n  open: false,\r\n};\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [open.toString()]: (state: State) => ({\r\n      ...state,\r\n      open: true,\r\n    }),\r\n    [close.toString()]: (state: State) => ({\r\n      ...state,\r\n      open: false,\r\n    }),\r\n  },\r\n  defaultState,\r\n);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport feedbackSidebar from './feedback-sidebar';\r\n\r\nexport default combineReducers({\r\n  feedbackSidebar,\r\n});\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  markers: {\r\n    toilets: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    TOILETS: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: toilets => ({ toilets }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { toilets } }) => {\r\n    const toiletsToUpdate = toilets.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: toiletsToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nconst baseApi: string = process.env.REACT_APP_API;\r\nconst baseHereRoutingApi = `\r\n${process.env.REACT_APP_HERE_ROUTE_API}\r\n?app_id=${process.env.REACT_APP_HERE_APP_ID}\r\n&app_code=${process.env.REACT_APP_HERE_APP_CODE}`;\r\n\r\nconst buildApiUrl = (root: string) => (url: string) => `${root}${url}`;\r\nconst buildBackendApiUrl: (url: string) => string = buildApiUrl(baseApi);\r\nconst buildHereRoutingApiUrl: (url: string) => string = buildApiUrl(baseHereRoutingApi);\r\n\r\nexport const feedbackApi = {\r\n  create: () => buildBackendApiUrl('/feedback'),\r\n};\r\n\r\nexport const wifiApi = {\r\n  get: () => buildBackendApiUrl('/wifi'),\r\n};\r\n\r\nexport const toiletsApi = {\r\n  get: () => buildBackendApiUrl('/toilets'),\r\n};\r\n\r\nexport const socketsApi = {\r\n  get: () => buildBackendApiUrl('/sockets'),\r\n};\r\n\r\nexport const markersApi = {\r\n  getTypes: () => buildBackendApiUrl('/markers/types'),\r\n};\r\n\r\nexport const routingApi = {\r\n  getRoute: () => buildHereRoutingApiUrl(''),\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport { feedbackApi } from './api';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const createFeedback = (feedback: any) => {\r\n  return axios.post(feedbackApi.create(), {\r\n    ...feedback,\r\n    type: [feedback.type],\r\n  });\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport {\r\n  markersApi,\r\n  wifiApi,\r\n  toiletsApi,\r\n  socketsApi,\r\n} from './api';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getWifi = () => axios.get(wifiApi.get());\r\n\r\nexport const getToilets = () => axios.get(toiletsApi.get());\r\n\r\nexport const getSockets = () => axios.get(socketsApi.get());\r\n\r\nexport const getMarkerTypes = () => axios.get(markersApi.getTypes());\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport { routingApi } from './api';\r\n\r\nconst PREFIX = 'geo!';\r\nconst MODE_COMPONENTS = {\r\n  type: 'balanced',\r\n  transportModes: 'pedestrian',\r\n  trafficMode: 'traffic:disabled',\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getRoute = (point0: number[], point1: number[]) => {\r\n  const waypoint0 = `${PREFIX}${point0.join(',')}`;\r\n  const waypoint1 = `${PREFIX}${point1.join(',')}`;\r\n\r\n  const mode = Object.values(MODE_COMPONENTS).join(';');\r\n\r\n  return axios.get(routingApi.getRoute(), {\r\n    params: {\r\n      waypoint0,\r\n      waypoint1,\r\n      mode,\r\n    },\r\n  });\r\n};\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getToilets = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getToilets();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError());\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getToilets,\r\n};\r\n","/* @flow */\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    wifi: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    WIFI: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: wifi => ({ wifi }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { wifi } }) => {\r\n    const wifiToUpdate = wifi.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: wifiToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getWifi = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getWifi();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getWifi,\r\n};\r\n","/* @flow */\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    sockets: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    SOCKETS: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: sockets => ({ sockets }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { sockets } }) => {\r\n    const socketsToUpdate = sockets.map((socket) => {\r\n      const { location, ...rest } = socket;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: socketsToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getSockets = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getSockets();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getSockets,\r\n};\r\n","/* @flow */\r\nimport * as socketsActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as socketsThunks from './thunks';\r\n\r\nexport {\r\n  socketsActions,\r\n  reducer,\r\n  socketsThunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\nimport { actions as toiletsActions } from './toilets';\r\nimport { actions as wifiActions } from './wifi';\r\nimport { socketsActions } from './sockets';\r\n\r\nconst {\r\n  markers: {\r\n    setFilter,\r\n    setNewMarkerPosition,\r\n\r\n    getTypesRequest,\r\n    getTypesSuccess,\r\n    getTypesError,\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    SET_FILTER: (filter: string | null): {} => ({ filter }),\r\n    SET_NEW_MARKER_POSITION: (position: any) => {\r\n      return { location: position };\r\n    },\r\n\r\n    GET_TYPES_REQUEST: () => {},\r\n    GET_TYPES_SUCCESS: types => ({ types }),\r\n    GET_TYPES_ERROR: error => ({ error }),\r\n  },\r\n});\r\n\r\nexport {\r\n  setFilter,\r\n  setNewMarkerPosition,\r\n\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n\r\n  toiletsActions,\r\n  wifiActions,\r\n  socketsActions,\r\n};\r\n","/* @flow */\r\nimport { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport * as markersActions from './actions';\r\nimport toilets from './toilets';\r\nimport wifi from './wifi';\r\nimport sockets from './sockets';\r\n\r\nexport type State = {\r\n  +selected: string | null,\r\n  newMarkerPosition: number[] | null,\r\n\r\n  markerTypes: [],\r\n  isMarkerTypesFetching: boolean,\r\n  markerTypesError: any,\r\n};\r\n\r\nconst {\r\n  setFilter,\r\n  setNewMarkerPosition,\r\n\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n} = markersActions;\r\n\r\nconst defaultState: State = {\r\n  selected: null,\r\n  newMarkerPosition: null,\r\n\r\n  markerTypes: [],\r\n  isMarkerTypesFetching: false,\r\n  markerTypesError: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setFilter]: (state: State, { payload: { filter } }) => ({\r\n    ...state,\r\n    selected: filter,\r\n  }),\r\n  [setNewMarkerPosition]: (state: State, { payload: { location } }) => ({\r\n    ...state,\r\n    newMarkerPosition: location,\r\n  }),\r\n\r\n  [getTypesRequest]: (state: State) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: true,\r\n    markerTypesError: defaultState.markerTypesError,\r\n  }),\r\n  [getTypesSuccess]: (state: State, { payload: { types } }) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: false,\r\n    markerTypes: types,\r\n  }),\r\n  [getTypesError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: false,\r\n    markerTypesError: error,\r\n  }),\r\n}, defaultState);\r\n\r\n\r\nexport default combineReducers({\r\n  shared: reducer,\r\n  toilets,\r\n  wifi,\r\n  sockets,\r\n});\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\ntype Actions = {\r\n  user: {\r\n    setCurrentLocation: (locationOrError: [] | {}) => void,\r\n  },\r\n};\r\n\r\nconst { user }: Actions = createActions({\r\n  USER: {\r\n    SET_CURRENT_LOCATION: (locationOrError: [] | {}) => {\r\n      if (!locationOrError.length) {\r\n        return {\r\n          error: true,\r\n          geolocationErrorCode: locationOrError.code,\r\n          currentLocation: null,\r\n        };\r\n      }\r\n      return { currentLocation: locationOrError };\r\n    },\r\n  },\r\n});\r\n\r\nexport default user;\r\n","/* @flow */\r\nexport const selectUserCurrentLocation = (state: any) => state.user.currentLocation;\r\n\r\nexport const selectUserCurrentLocationError = (state: any) => state.user.locationError;\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport actions from './actions';\r\n\r\nconst {\r\n  setCurrentLocation,\r\n} = actions;\r\n\r\ntype State = {\r\n  currentLocation: [] | null,\r\n  locationError: string | null,\r\n}\r\n\r\nconst defaultState: State = {\r\n  currentLocation: null,\r\n  locationError: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setCurrentLocation.toString()]: (state: State, { payload: { currentLocation } }) => {\r\n    return update(state, {\r\n      currentLocation: {\r\n        $set: currentLocation,\r\n      },\r\n    });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import userActions from './actions';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\nimport reducer from './reducer';\r\n\r\nexport {\r\n  userActions,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\nimport { selectors as userSelectors } from '../user';\r\nimport type { Wifi } from '../../types/models';\r\nimport type { State } from './reducer';\r\n\r\ntype Selector = (state: {}) => any;\r\n\r\nconst rootSelector: Selector = (state): State => state.markers;\r\n\r\nexport const selectWifi: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State): Wifi[] => markers.wifi.markers,\r\n);\r\n\r\nexport const selectToilets: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.toilets.markers,\r\n);\r\n\r\nexport const selectSockets: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.sockets.markers,\r\n);\r\n\r\nexport const selectIsAllMarkersFetching: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State): boolean => {\r\n    return (\r\n      markers.wifi.isFetching\r\n    || markers.toilets.isFetching\r\n    || markers.sockets.isFetching\r\n    );\r\n  },\r\n);\r\n\r\nexport const selectFilter: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.shared.selected,\r\n);\r\n\r\nconst selectNewMarkerPosition = state => state.markers.shared.newMarkerPosition;\r\n\r\nexport const selectNewMarkerPositionInGeoJSON = createSelector(\r\n  [selectNewMarkerPosition, userSelectors.selectUserCurrentLocation],\r\n  (position, userPosition) => {\r\n    return !position ? userPosition : position;\r\n  },\r\n);\r\n","import {\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n} from './actions';\r\nimport { thunks as toiletsThunks } from './toilets';\r\nimport { thunks as wifiThunks } from './wifi';\r\nimport { socketsThunks } from './sockets';\r\nimport { markersService } from '../../services';\r\n\r\nexport const getMarkers = () => async (dispatch) => {\r\n  await Promise.all([\r\n    dispatch(wifiThunks.getWifi()),\r\n    dispatch(toiletsThunks.getToilets()),\r\n    dispatch(socketsThunks.getSockets()),\r\n  ]);\r\n};\r\n\r\nexport const getMarkerTypes = () => async (dispatch) => {\r\n  dispatch(getTypesRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getMarkerTypes();\r\n    dispatch(getTypesSuccess(data));\r\n  } catch (e) {\r\n    console.error(e);\r\n    dispatch(getTypesError(e));\r\n  }\r\n};\r\n\r\nexport {\r\n  wifiThunks,\r\n  toiletsThunks,\r\n  socketsThunks,\r\n};\r\n","/* @flow */\r\n\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  feedback: {\r\n    createFeedbackRequest,\r\n    createFeedbackSuccess,\r\n    createFeedbackError,\r\n  },\r\n} = createActions({\r\n  FEEDBACK: {\r\n    CREATE_FEEDBACK_REQUEST: (): void => {},\r\n    CREATE_FEEDBACK_SUCCESS: (): void => {},\r\n    CREATE_FEEDBACK_ERROR: (error: any): { error: any } => ({ error }),\r\n  },\r\n});\r\n\r\nexport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n} from './actions';\r\n\r\ntype State = {\r\n  isLoading: boolean,\r\n  error?: {},\r\n};\r\n\r\nconst defaultState: State = {\r\n  feedback: [],\r\n  error: {},\r\n  isLoading: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [createFeedbackRequest]: (state: State) => ({\r\n    ...state,\r\n    isLoading: true,\r\n  }),\r\n  [createFeedbackSuccess]: (state: State) => ({\r\n    ...state,\r\n    isLoading: false,\r\n  }),\r\n  [createFeedbackError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error,\r\n  }),\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { feedbackService } from '../../services';\r\nimport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n} from './actions';\r\nimport type { Feedback } from '../../types/models';\r\n\r\nexport const createFeedback = (feedback: Feedback) => async (dispatch) => {\r\n  dispatch(createFeedbackRequest());\r\n\r\n  try {\r\n    await feedbackService.createFeedback(feedback);\r\n    dispatch(createFeedbackSuccess());\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(createFeedbackError(error));\r\n\r\n    throw error;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  routing: {\r\n    getRouteRequest,\r\n    getRouteSuccess,\r\n    getRouteError,\r\n\r\n    resetRoute,\r\n  },\r\n} = createActions({\r\n  ROUTING: {\r\n    GET_ROUTE_REQUEST: marker => ({ marker }),\r\n    GET_ROUTE_SUCCESS: route => ({ route }),\r\n    GET_ROUTE_ERROR: error => ({ error }),\r\n\r\n    RESET_ROUTE: () => {},\r\n  },\r\n});\r\n\r\nexport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n\r\n  resetRoute,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n  resetRoute,\r\n} from './actions';\r\nimport { actions as markersActions } from '../markers';\r\n\r\ntype State = {\r\n  selectedMarker: any,\r\n  route: any,\r\n  isFetching: boolean,\r\n  error: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  marker: null,\r\n  route: null,\r\n  isFetching: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getRouteRequest]: (state: State, { payload: { marker } }) => update(state, {\r\n    marker: { $set: marker },\r\n    isFetching: { $set: true },\r\n    error: { $set: defaultState.error },\r\n  }),\r\n  [getRouteSuccess]: (state: State, { payload: { route } }) => update(state, {\r\n    isFetching: { $set: false },\r\n    route: { $set: route },\r\n  }),\r\n  [getRouteError]: (state: State, { payload: { error } }) => update(state, {\r\n    isFetching: { $set: false },\r\n    error: { $set: error },\r\n  }),\r\n  [resetRoute]: (state: State) => update(state, { route: { $set: null } }),\r\n  [markersActions.setFilter]: (state: State, { payload: { filter } }) => {\r\n    return !filter\r\n      ? state\r\n      : update(state, {\r\n        error: {\r\n          $set: null,\r\n        },\r\n        route: {\r\n          $set: null,\r\n        },\r\n      });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectRouting = state => state.routing.route;\r\nconst selectMarkerForRouting = state => state.routing.marker;\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const selectRoute = createSelector(\r\n  selectRouting,\r\n  (route) => {\r\n    return route ? route.leg : null;\r\n  },\r\n);\r\n\r\nexport const selectRouteSummary = createSelector(\r\n  [selectRouting, selectMarkerForRouting],\r\n  (route, marker) => (route ? { summary: route.summary, marker } : null),\r\n);\r\n","/* @flow */\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getFormattedRoute = ({ response }) => {\r\n  const { route } = response;\r\n  const { leg, summary } = route[0];\r\n\r\n  return { leg: leg[0], summary };\r\n};\r\n","/* @flow */\r\nimport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n} from './actions';\r\nimport { routingService } from '../../services';\r\nimport { getFormattedRoute } from './helpers';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getRoute = (userLocation, marker) => async (dispatch) => {\r\n  const { location } = marker;\r\n  dispatch(getRouteRequest(marker));\r\n\r\n  try {\r\n    const data = await routingService.getRoute(userLocation, location);\r\n    const route = getFormattedRoute(data.data);\r\n\r\n    dispatch(getRouteSuccess(route));\r\n  } catch (error) {\r\n    dispatch(getRouteError(error));\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport ui from './reducers/ui';\r\nimport markers from './markers';\r\nimport feedback from './feedback';\r\nimport user from './user';\r\nimport routing from './routing';\r\nimport shared from './shared';\r\n\r\ntype State = {\r\n  user: any,\r\n  ui: any,\r\n  markers: any,\r\n  feedback: any,\r\n  routing: any,\r\n  errors: any,\r\n};\r\n\r\nconst reducers: State = {\r\n  user,\r\n  ui,\r\n  markers,\r\n  feedback,\r\n  routing,\r\n  shared,\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","/* @flow */\r\n\r\nimport * as routingActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  routingActions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\n\r\nimport {\r\n  createStore,\r\n  applyMiddleware,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { globalErrorHandler } from './middlewares';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nexport default () => {\r\n  const middleware = applyMiddleware(\r\n    thunk,\r\n    globalErrorHandler,\r\n  );\r\n\r\n  const composeEnhancers = composeWithDevTools({});\r\n  const enhancer = composeEnhancers(\r\n    middleware,\r\n  );\r\n\r\n  return createStore(rootReducer, enhancer);\r\n};\r\n","export const MAX_SNACK = 3;\r\nexport const ANCHOR = {\r\n  vertical: 'bottom',\r\n  horizontal: 'right',\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#f4c844',\r\n    },\r\n    secondary: {\r\n      main: '#e53935',\r\n    },\r\n  },\r\n  typography: { useNextVariants: true },\r\n});\r\n\r\nexport default theme;\r\n","/* @flow */\r\n\r\nexport const markerIcon: number[] = [25, 37];\r\n\r\nexport const userMarkerIcon: number[] = [25, 25];\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { toilet } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: toilet,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Toilet } from '../../types/models';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  toilet: Toilet,\r\n  buildRoute: (any) => void,\r\n};\r\n\r\nconst ToiletMarker = ({ toilet, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={toilet.location}\r\n      onDblclick={() => { buildRoute(toilet)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Туалет</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(toilet)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{toilet.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{toilet.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ToiletMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { wifi } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: wifi,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Wifi } from '../../types/models';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  wifi: Wifi,\r\n  buildRoute: (location: number[]) => void,\r\n};\r\n\r\nconst WifiMarker = ({ wifi, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={wifi.location}\r\n      onDblclick={() => { buildRoute(wifi)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.point}>Название: </span>\r\n          <span className={classes.title}>\r\n            {wifi.title}\r\n          </span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(wifi)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>\r\n            {wifi.address}\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>\r\n            {wifi.description}\r\n          </span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(WifiMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { userMarker } from '../../styles/images';\r\nimport { userMarkerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: userMarker,\r\n  iconSize: userMarkerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker } from 'react-leaflet';\r\nimport icon from './icon';\r\n\r\ntype Props = {\r\n  location: [],\r\n};\r\n\r\nconst UserMarker = ({ location }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      zIndexOffset={10000}\r\n      position={location}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserMarker;\r\n","import Button from './button';\r\n\r\nexport default Button;\r\n","/* @flow */\r\nimport React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\nimport { MyLocation as MyLocationIcon } from '@material-ui/icons';\r\n\r\ntype Props = {\r\n  onClick: () => void,\r\n};\r\n\r\nconst UserLocationButton = ({ onClick }: Props) => {\r\n  return (\r\n    <Fab\r\n      color=\"primary\"\r\n      onClick={onClick}\r\n    >\r\n      <MyLocationIcon color=\"inherit\" />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default UserLocationButton;\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nconst styles = (theme: any): Styles => ({\r\n  filter: {\r\n  },\r\n  drop: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n  },\r\n  open: {\r\n    display: 'flex',\r\n  },\r\n  close: {\r\n    display: 'none',\r\n  },\r\n  mainButton: {\r\n  },\r\n  optionButton: {\r\n    marginTop: 15,\r\n  },\r\n  '@media only screen and (min-width: 768px)': {\r\n    filter: {\r\n      top: '2%',\r\n      left: '2%',\r\n    },\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport type { ElementType } from 'react';\r\nimport cc from 'classcat';\r\nimport { Fab, withStyles } from '@material-ui/core';\r\nimport styles from './styles';\r\n\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  filter: string | null,\r\n  onClick: (filter: string | null) => () => void,\r\n  classes: Classes,\r\n  Icon: ElementType,\r\n  isSelected: boolean,\r\n};\r\n\r\nconst Option = ({\r\n  Icon,\r\n  filter,\r\n  onClick,\r\n  classes,\r\n  isSelected,\r\n}: Props) => {\r\n  return (\r\n    <Fab\r\n      className={cc([classes.button, classes.optionButton])}\r\n      color={isSelected ? 'primary' : 'default'}\r\n      onClick={onClick(filter)}\r\n      size=\"small\"\r\n    >\r\n      <Icon />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Option);\r\n","export const MARKER_FILTERS = {\r\n  all: { label: 'all', value: null },\r\n  wifi: { label: 'wifi', value: 1 },\r\n  toilet: { label: 'toilet', value: 2 },\r\n  socket: { label: 'socket', value: 3 },\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Wc as WcIcon,\r\n  Wifi as WifiIcon,\r\n  ClearAll as ClearAllIcon,\r\n  Power as PowerIcon,\r\n} from '@material-ui/icons';\r\n\r\nexport const WcOptionIcon = () => <WcIcon color=\"inherit\" />;\r\nexport const SocketOptionIcon = () => <PowerIcon color=\"inherit\" />;\r\nexport const WifiOptionIcon = () => <WifiIcon color=\"inherit\" />;\r\nexport const ClearAllOptionIcon = () => <ClearAllIcon color=\"inherit\" />;\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Fab } from '@material-ui/core';\r\nimport { FilterList } from '@material-ui/icons';\r\nimport cc from 'classcat';\r\nimport Option from './option';\r\nimport { MARKER_FILTERS } from './filters';\r\nimport {\r\n  ClearAllOptionIcon,\r\n  SocketOptionIcon,\r\n  WcOptionIcon,\r\n  WifiOptionIcon,\r\n} from './icons';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  selectedFilter: string,\r\n  setFilter: (filter: string | null) => void,\r\n};\r\n\r\ntype State = {\r\n  open: boolean,\r\n};\r\n\r\nclass FilterButton extends Component<Props, State> {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  onFilterClick = (filter: string | null) => () => {\r\n    const { setFilter } = this.props;\r\n\r\n    setFilter(filter);\r\n  };\r\n\r\n  toggle = () => this.setState((prevState: State) => ({ open: !prevState.open }));\r\n\r\n  render() {\r\n    const { classes, selectedFilter } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={cc([classes.filter])}>\r\n        <Fab\r\n          className={cc([classes.button, classes.mainButton])}\r\n          color=\"primary\"\r\n          onClick={this.toggle}\r\n        >\r\n          <FilterList color=\"inherit\" />\r\n        </Fab>\r\n        <div className={cc([(open ? classes.open : classes.close), classes.drop])}>\r\n          <Option\r\n            isSelected={selectedFilter === null}\r\n            filter={MARKER_FILTERS.all.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={ClearAllOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.toilet.value}\r\n            filter={MARKER_FILTERS.toilet.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WcOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.wifi.value}\r\n            filter={MARKER_FILTERS.wifi.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WifiOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.socket.value}\r\n            filter={MARKER_FILTERS.socket.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={SocketOptionIcon}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FilterButton);\r\n","import Button from './button';\r\nimport { MARKER_FILTERS } from './filters';\r\n\r\nexport default Button;\r\n\r\nexport {\r\n  MARKER_FILTERS,\r\n};\r\n","export const validateFeedback = (feedback) => {\r\n  const errors = [];\r\n\r\n  if (!feedback.author) {\r\n    errors.push('author');\r\n  } else if (!feedback.author.trim()) {\r\n    errors.push('author');\r\n  }\r\n\r\n  if (!feedback.address) {\r\n    errors.push('address');\r\n  } else if (!feedback.address.trim()) {\r\n    errors.push('address');\r\n  }\r\n\r\n  return { errors, hasErrors: errors.length !== 0 };\r\n};\r\n\r\nexport const getFieldValidationChecker = errors => (field) => {\r\n  return errors.includes(field);\r\n};\r\n","/* @flow */\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport type { Theme } from '@material-ui/core';\r\nimport type { Styles } from '../../types/styles';\r\n\r\nconst sideMargin = 12;\r\nconst sidebarDesctopSize = 340;\r\n\r\nexport default (theme: Theme): Styles => ({\r\n  sidebarRoot: {\r\n    width: '100%',\r\n    overflowX: 'hidden',\r\n  },\r\n  sidebarTitle: {\r\n    padding: 16,\r\n    paddingBottom: 0,\r\n  },\r\n  sidebarTitleContent: {\r\n    fontFamily: \"'Roboto Condensed', Arial, Helvetica, sans-serif\",\r\n    fontWeight: 'bold',\r\n  },\r\n  fieldsContainer: {\r\n    margin: 0,\r\n  },\r\n  formField: {\r\n    margin: sideMargin,\r\n    width: '93%',\r\n  },\r\n  buttonsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    sidebarRoot: {\r\n      width: sidebarDesctopSize,\r\n    },\r\n  },\r\n});\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#4caf50',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: '#d14942',\r\n    },\r\n  },\r\n});\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport {\r\n  withStyles, SwipeableDrawer, Grid,\r\n  Button, TextField, Select, MenuItem,\r\n  FormControl, InputLabel, Typography,\r\n  MuiThemeProvider,\r\n} from '@material-ui/core';\r\nimport { getFieldValidationChecker } from './helpers';\r\nimport styles, { theme } from './styles';\r\nimport type { Classes } from '../../types/styles';\r\nimport type { Feedback } from '../../types/models';\r\n\r\ntype Props = {\r\n  +isOpen: boolean,\r\n  feedback: Feedback,\r\n  freebieTypes: [],\r\n  errors: String[],\r\n  +classes: Classes,\r\n  open: () => void,\r\n  close: () => void,\r\n  +cancel: () => void,\r\n  +submit: () => void,\r\n  handleFieldChange: (fields: string) => void,\r\n};\r\n\r\nconst FeedbackSidebar = ({\r\n  feedback, freebieTypes,\r\n  errors,\r\n  open, isOpen, close,\r\n  cancel, submit, handleFieldChange,\r\n  classes,\r\n}: Props) => {\r\n  const isValidField = getFieldValidationChecker(errors);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <SwipeableDrawer\r\n        open={isOpen}\r\n        onClose={close}\r\n        onOpen={open}\r\n        anchor=\"left\"\r\n        classes={{\r\n          paper: classes.sidebarRoot,\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <div className={classes.sidebarTitle}>\r\n              <Typography\r\n                className={classes.sidebarTitleContent}\r\n                variant=\"headline\"\r\n                gutterBottom\r\n                align=\"center\"\r\n              >\r\n                {'Поделитесь халявой с другими!'}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid className={classes.fieldsContainer} container spacing={24}>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('address')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <TextField\r\n                  error={isValidField('address')}\r\n                  required\r\n                  onChange={handleFieldChange('address')}\r\n                  value={feedback.address}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  placeholder=\"ул. Халявина, 7\"\r\n                  label=\"Место халявы\"\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('type')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <InputLabel\r\n                  required\r\n                  error={isValidField('type')}\r\n                  htmlFor=\"freebieType\"\r\n                >\r\n                  {'Вид халявы'}\r\n                </InputLabel>\r\n                <Select\r\n                  error={isValidField('type')}\r\n                  onChange={handleFieldChange('type')}\r\n                  value={feedback.type}\r\n                  inputProps={{\r\n                    id: 'freebieType',\r\n                    name: 'freebieType',\r\n                  }}\r\n                  fullWidth\r\n                >\r\n                  {freebieTypes.map(type => (\r\n                    <MenuItem key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('author')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <TextField\r\n                  error={isValidField('author')}\r\n                  required\r\n                  onChange={handleFieldChange('author')}\r\n                  value={feedback.author}\r\n                  placeholder=\"Автор\"\r\n                  label=\"Freebee\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth className={classes.formField}>\r\n                <TextField\r\n                  onChange={handleFieldChange('description')}\r\n                  value={feedback.description}\r\n                  multiline\r\n                  placeholder=\"Описание найденной халявы\"\r\n                  label=\"Описание\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container className={classes.buttonsContainer}>\r\n                <Button onClick={cancel} variant=\"contained\" color=\"secondary\">Отменить</Button>\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={submit}>Отправить</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </SwipeableDrawer>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\n\r\nexport default withStyles(styles)(FeedbackSidebar);\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport FeedbackSidebar from './sidebar';\r\nimport { MAP_MODES } from '../../config/map';\r\nimport { validateFeedback } from './helpers';\r\nimport { close, open } from '../../redux/actions/ui/feedback-sidebar';\r\nimport { thunks } from '../../redux/feedback';\r\nimport { selectors as markersSelectors } from '../../redux/markers';\r\nimport { sharedActions } from '../../redux/shared';\r\n\r\nimport type { Feedback } from '../../types/models';\r\n\r\ntype Props = {\r\n  closeSidebar: () => void,\r\n  setReadMapMode: () => void,\r\n  openSidebar: () => void,\r\n  sendFeedback: () => void,\r\n  enqueueSnackbar: (message: string, options: any) => void,\r\n  isOpen: boolean,\r\n  location: any,\r\n  freebieTypes: [],\r\n};\r\n\r\ntype State = {\r\n  address: string,\r\n  type: string[],\r\n  author: string,\r\n  description?: string,\r\n};\r\n\r\nconst defaultState = {\r\n  address: '',\r\n  type: [''],\r\n  author: '',\r\n  description: '',\r\n  errors: [],\r\n};\r\n\r\nclass FeedbackSidebarContainer extends Component<Props, State> {\r\n  state = defaultState;\r\n\r\n  componentDidUpdate() {\r\n    const { type } = this.state;\r\n    const { freebieTypes } = this.props;\r\n    if (type === defaultState.type && freebieTypes.length !== 0) {\r\n      this.setState({ type: freebieTypes[0].value });\r\n    }\r\n  }\r\n\r\n  handleFieldChange = (name: string) => (e: Event) => {\r\n    this.setState({\r\n      [name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (): void => {\r\n    const {\r\n      closeSidebar,\r\n      sendFeedback,\r\n      setReadMapMode,\r\n      location,\r\n    } = this.props;\r\n\r\n    const {\r\n      type,\r\n      address,\r\n      author,\r\n      description,\r\n    } = this.state;\r\n\r\n    const feedback: Feedback = {\r\n      location,\r\n      address,\r\n      type: type.toString(),\r\n      author,\r\n      description,\r\n    };\r\n\r\n    const state = validateFeedback(feedback);\r\n\r\n    if (state.hasErrors) {\r\n      this.setState({\r\n        errors: state.errors,\r\n      });\r\n    } else {\r\n      sendFeedback(feedback)\r\n        .then(() => {\r\n          this.props.enqueueSnackbar('Халява успешно отправлена!', {\r\n            variant: 'success',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.props.enqueueSnackbar('Ошибка при отправке халявы!', {\r\n            variant: 'error',\r\n          });\r\n        });\r\n      setReadMapMode();\r\n      closeSidebar();\r\n      this.setState({ ...defaultState });\r\n    }\r\n  };\r\n\r\n  handleCancel = (): void => {\r\n    const { closeSidebar, setReadMapMode } = this.props;\r\n\r\n    setReadMapMode();\r\n    closeSidebar();\r\n    this.setState({ ...defaultState });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isOpen,\r\n      closeSidebar, openSidebar,\r\n      freebieTypes,\r\n    } = this.props;\r\n\r\n    const {\r\n      address,\r\n      author,\r\n      type,\r\n      description,\r\n      errors,\r\n    } = this.state;\r\n\r\n    if (freebieTypes.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const feedback: Feedback = {\r\n      address,\r\n      author,\r\n      type,\r\n      description,\r\n    };\r\n\r\n    return (\r\n      <FeedbackSidebar\r\n        feedback={feedback}\r\n        errors={errors}\r\n        freebieTypes={freebieTypes}\r\n        isOpen={isOpen}\r\n        close={closeSidebar}\r\n        open={openSidebar}\r\n        submit={this.handleSubmit}\r\n        cancel={this.handleCancel}\r\n        handleFieldChange={this.handleFieldChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst { createFeedback } = thunks;\r\n\r\nconst mapState = state => ({\r\n  isOpen: state.ui.feedbackSidebar.open,\r\n  location: markersSelectors.selectNewMarkerPositionInGeoJSON(state),\r\n  freebieTypes: state.markers.shared.markerTypes,\r\n});\r\n\r\nconst mapDispatch = {\r\n  closeSidebar: close,\r\n  openSidebar: open,\r\n  sendFeedback: createFeedback,\r\n  setReadMapMode: () => sharedActions.setMapMode(MAP_MODES.READ),\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(withSnackbar(FeedbackSidebarContainer));\r\n","import FeedbackSidebar from './container';\r\n\r\nexport default FeedbackSidebar;\r\n","/* @flow */\r\n\r\nconst getFlatPosition = (location) => {\r\n  const { latitude, longitude } = location;\r\n\r\n  return [latitude, longitude];\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getPositionsForPolyline = (route: any): Array<number[]> => {\r\n  if (!route) {\r\n    return [];\r\n  }\r\n\r\n  const buildedRoutes: Array<number[]> = route.maneuver.map(\r\n    ({ position }) => getFlatPosition(position),\r\n  );\r\n\r\n  const startPosition = getFlatPosition(route.start.originalPosition);\r\n  const endPosition = getFlatPosition(route.end.originalPosition);\r\n\r\n  return [startPosition, ...buildedRoutes, endPosition];\r\n};\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { newMarker } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: newMarker,\r\n  iconSize: markerIcon,\r\n  className: 'NewMarkerIcon',\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { socket } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: socket,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  socket: any,\r\n  buildRoute: (any) => void,\r\n};\r\n\r\nconst SocketMarker = ({ socket, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={socket.location}\r\n      onDblclick={() => { buildRoute(socket)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Розетка</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(socket)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{socket.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{socket.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SocketMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport React, { Component, createRef } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  FeatureGroup,\r\n  Polyline,\r\n  Marker,\r\n} from 'react-leaflet';\r\nimport {\r\n  ToiletMarker, WifiMarker, UserMarker,\r\n} from '../../components';\r\n\r\nimport { getPositionsForPolyline } from './helpers';\r\nimport {\r\n  MAP_MODES,\r\n  TILE_LAYER_URL,\r\n  MAP_ATTRIBUTION,\r\n  MAX_ZOOM,\r\n} from '../../config/map';\r\n\r\nimport styles, { ROUTE_COLOR } from './styles';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport type { Classes } from '../../types/styles';\r\nimport type { Wifi, Toilet } from '../../types/models';\r\nimport icon from '../../components/NewMarker/icon';\r\nimport SocketMarker from '../../components/SocketMarker/marker';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  wifi?: Wifi[],\r\n  sockets?: [],\r\n  toilets?: Toilet[],\r\n  userLocation: number[] | null,\r\n  route: any,\r\n  mapMode: string,\r\n  mapViewport: { center: number[], zoom: number },\r\n  buildRoute: (location: number[]) => void,\r\n  setNewMarkerPosition: (position: number[]) => void,\r\n  setMapViewport: (viewport: any) => void,\r\n};\r\n\r\ntype State = {\r\n  viewport: any,\r\n};\r\n\r\nclass FreeOpportunitiesMap extends Component<Props, State> {\r\n  static defaultProps = {\r\n    wifi: [],\r\n    toilets: [],\r\n    sockets: [],\r\n  };\r\n\r\n  refNewMarker = createRef();\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { userLocation } = this.props;\r\n    const map = this.map.leafletElement;\r\n\r\n    if (userLocation !== null\r\n    && prevProps.userLocation !== userLocation\r\n    ) {\r\n      map.panTo(userLocation);\r\n    }\r\n  }\r\n\r\n  setMapRef = (element) => {\r\n    this.map = element;\r\n  };\r\n\r\n  handleViewportChanged = (viewport) => {\r\n    const {\r\n      setMapViewport, setNewMarkerPosition,\r\n      mapMode,\r\n    } = this.props;\r\n\r\n    setMapViewport(viewport);\r\n    if (mapMode === MAP_MODES.CREATE) {\r\n      const marker = this.refNewMarker.current;\r\n      if (marker) {\r\n        setNewMarkerPosition(viewport.center);\r\n        marker.leafletElement.setLatLng(viewport.center);\r\n      }\r\n    }\r\n  };\r\n\r\n  buildRouteToMarker = (location: number[]) => () => {\r\n    const { buildRoute } = this.props;\r\n\r\n    buildRoute(location);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      wifi, toilets, sockets,\r\n      userLocation, route, mapMode,\r\n      mapViewport,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        className={classes.map}\r\n        viewport={mapViewport}\r\n        onViewportChanged={this.handleViewportChanged}\r\n        zoomControl={false}\r\n        ref={this.setMapRef}\r\n        maxZoom={MAX_ZOOM}\r\n      >\r\n        <TileLayer\r\n          attribution={MAP_ATTRIBUTION}\r\n          url={TILE_LAYER_URL}\r\n        />\r\n        {\r\n          mapMode === MAP_MODES.CREATE && (\r\n            <FeatureGroup>\r\n              <Marker\r\n                zIndexOffset={1100}\r\n                icon={icon}\r\n                position={mapViewport.center}\r\n                ref={this.refNewMarker}\r\n              />\r\n            </FeatureGroup>\r\n          )\r\n        }\r\n        <FeatureGroup>\r\n          {userLocation && <UserMarker key={userLocation.toString()} location={userLocation} />}\r\n        </FeatureGroup>\r\n        <FeatureGroup>\r\n          {wifi.map(marker => (\r\n            <WifiMarker key={marker.id} buildRoute={this.buildRouteToMarker} wifi={marker} />\r\n          ))}\r\n          {toilets.map(marker => (\r\n            <ToiletMarker key={marker.id} buildRoute={this.buildRouteToMarker} toilet={marker} />\r\n          ))}\r\n          {sockets.map(marker => (\r\n            <SocketMarker key={marker.id} buildRoute={this.buildRouteToMarker} socket={marker} />\r\n          ))}\r\n        </FeatureGroup>\r\n        <FeatureGroup>\r\n          <Polyline\r\n            color={ROUTE_COLOR}\r\n            positions={getPositionsForPolyline(route)}\r\n          />\r\n        </FeatureGroup>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FreeOpportunitiesMap);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  map: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n  },\r\n});\r\n\r\nexport const ROUTE_COLOR = '#3f51b5';\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Map from './map';\r\nimport { MARKER_FILTERS } from '../../components/FilterButton';\r\n\r\nimport { actions as markerActions, selectors, thunks } from '../../redux/markers';\r\nimport { sharedActions } from '../../redux/shared';\r\nimport { userActions } from '../../redux/user';\r\nimport {\r\n  thunks as routingThunks,\r\n  selectors as routingSelectors,\r\n} from '../../redux/routing';\r\n\r\nimport type { Wifi, Toilet } from '../../types/models';\r\n\r\ntype Props = {\r\n  wifi?: Wifi[],\r\n  toilets?: Toilet[],\r\n  sockets?: [],\r\n  mapMode: string,\r\n  route: any,\r\n  getMarkers: () => void,\r\n  getRoute: (number[], any) => void,\r\n  setCurrentLocation: (position: number[] | string) => void,\r\n  setNewMarkerPosition: (position: number[] | string) => void,\r\n  currentUserLocation: number[] | null,\r\n};\r\n\r\nclass MapContainer extends Component<Props> {\r\n  static defaultProps = {\r\n    wifi: [],\r\n    toilets: [],\r\n    sockets: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { getMarkers } = this.props;\r\n\r\n    getMarkers();\r\n    this.getUserLocation();\r\n  }\r\n\r\n  getUserLocation = () => {\r\n    const { setCurrentLocation } = this.props;\r\n    const nativeGeolocation = navigator.geolocation;\r\n    const successCallback = (position) => {\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      setCurrentLocation([latitude, longitude]);\r\n    };\r\n    const errorCallback = (error) => {\r\n      console.error(error);\r\n      setCurrentLocation(error);\r\n    };\r\n\r\n    nativeGeolocation.getCurrentPosition(successCallback, errorCallback);\r\n  };\r\n\r\n  buildRoute = (marker) => {\r\n    const { getRoute, currentUserLocation } = this.props;\r\n\r\n    if (currentUserLocation !== null) {\r\n      getRoute(currentUserLocation, marker);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      wifi, toilets, sockets,\r\n      currentUserLocation, route,\r\n      mapMode,\r\n      setNewMarkerPosition,\r\n      mapViewport, setMapViewport,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        wifi={wifi}\r\n        toilets={toilets}\r\n        sockets={sockets}\r\n        route={route}\r\n        userLocation={currentUserLocation}\r\n        mapMode={mapMode}\r\n        buildRoute={this.buildRoute}\r\n        setNewMarkerPosition={setNewMarkerPosition}\r\n        setMapViewport={setMapViewport}\r\n        mapViewport={mapViewport}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  const filter = selectors.selectFilter(state);\r\n  let wifi = [];\r\n  let toilets = [];\r\n  let sockets = [];\r\n\r\n  if (filter === MARKER_FILTERS.all.value) {\r\n    wifi = selectors.selectWifi(state);\r\n    toilets = selectors.selectToilets(state);\r\n    sockets = selectors.selectSockets(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.wifi.value) {\r\n    wifi = selectors.selectWifi(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.toilet.value) {\r\n    toilets = selectors.selectToilets(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.socket.value) {\r\n    sockets = selectors.selectSockets(state);\r\n  }\r\n\r\n  return {\r\n    wifi,\r\n    toilets,\r\n    sockets,\r\n    filter,\r\n    route: routingSelectors.selectRoute(state),\r\n    mapViewport: state.shared.mapViewport,\r\n    newMarkerPosition: state.markers.shared.newMarkerPosition,\r\n  };\r\n};\r\n\r\nconst { getMarkers } = thunks;\r\nconst { getRoute } = routingThunks;\r\nconst { setCurrentLocation } = userActions;\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMarkers: () => dispatch(getMarkers()),\r\n  getRoute: (point0, point1) => dispatch(getRoute(point0, point1)),\r\n  setCurrentLocation: (position: [] | string) => dispatch(setCurrentLocation(position)),\r\n  setNewMarkerPosition: position => dispatch(markerActions.setNewMarkerPosition(position)),\r\n  setMapViewport: viewport => dispatch(sharedActions.setMapViewport(viewport)),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(MapContainer);\r\n","import Map from './container';\r\n\r\nexport default Map;\r\n","// @flow\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  IconButton,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport {\r\n  DirectionsWalk as DirectionsWalkIcon,\r\n  Place as PlaceIcon,\r\n  Close as CloseIcon,\r\n} from '@material-ui/icons';\r\nimport { getTimeFromSummary, getDistanceFromSummary } from './helpers';\r\n\r\nimport styles from './styles';\r\n\r\nclass RoutePanel extends PureComponent {\r\n  render() {\r\n    const { classes, summary: { summary, marker }, resetRoute } = this.props;\r\n    const time = getTimeFromSummary(summary);\r\n    const distance = getDistanceFromSummary(summary);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {`Адрес: ${marker.address}`}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={resetRoute}\r\n            classes={{ root: classes.closeButtonRoot }}\r\n            className={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem disableGutters>\r\n            <ListItemIcon>\r\n              <PlaceIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {distance}\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem disableGutters>\r\n            <ListItemIcon>\r\n              <DirectionsWalkIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {time}\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoutePanel);\r\n","/* @flow */\r\nexport const getTimeFromSummary = (summary) => {\r\n  const { travelTime } = summary;\r\n\r\n  const minutes = travelTime / 60;\r\n  if (minutes <= 60) {\r\n    return `${Math.ceil(minutes)} минут`;\r\n  }\r\n\r\n  const hours = minutes / 60;\r\n\r\n  return `${Math.ceil(hours)} часов`;\r\n};\r\n\r\nexport const getDistanceFromSummary = (summary) => {\r\n  const { distance } = summary;\r\n\r\n  if (distance < 1000) {\r\n    return `${distance} м`;\r\n  }\r\n\r\n  return `${Math.ceil(distance / 1000)} км`;\r\n};\r\n","import Panel from './panel';\r\n\r\nexport default Panel;\r\n","export default () => ({\r\n  root: {\r\n    height: '100%',\r\n    padding: '1em 1.5em',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  closeButton: {\r\n    color: 'red',\r\n    marginBottom: '0.35em',\r\n  },\r\n  closeButtonRoot: {\r\n    padding: 0,\r\n    height: 25,\r\n  },\r\n});\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { withStyles, Button, LinearProgress } from '@material-ui/core';\r\nimport { UserLocationButton, FilterButton } from '../../components';\r\nimport FeedbackSidebar from '../FeedbackSidebar';\r\nimport Map from '../Map';\r\nimport RoutePanel from '../RouteInformationPanel';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\nimport { MAP_MODES } from '../../config/map';\r\n\r\ntype Props = {\r\n  openFeedbackSidebar: () => void,\r\n  setUserLocation: () => void,\r\n  setFilter: () => void,\r\n  resetRoute: () => void,\r\n  isMarkersFetching: boolean,\r\n  setCreationMapMode: () => void,\r\n  setReadMapMode: () => void,\r\n  mapMode: string,\r\n  routeSummary: any,\r\n  selectedFilter: string | null,\r\n  currentUserLocation: number[] | null,\r\n  classes: Classes,\r\n  route: any,\r\n};\r\n\r\nconst MapPage = ({\r\n  openFeedbackSidebar,\r\n  setCreationMapMode,\r\n  mapMode,\r\n\r\n  setUserLocation,\r\n  currentUserLocation,\r\n\r\n  setFilter,\r\n  selectedFilter,\r\n\r\n  routeSummary,\r\n  resetRoute,\r\n\r\n  isMarkersFetching,\r\n  classes,\r\n}: Props) => {\r\n  const isReadMode = mapMode === MAP_MODES.READ;\r\n\r\n  return (\r\n    <>\r\n      {isMarkersFetching\r\n        ? <LinearProgress className={classes.progress} />\r\n        : null\r\n      }\r\n      <Map mapMode={mapMode} currentUserLocation={currentUserLocation} />\r\n      <div className={classes.filterButton}>\r\n        <FilterButton selectedFilter={selectedFilter} setFilter={setFilter} />\r\n      </div>\r\n\r\n      <div className={classes.userLocationButton}>\r\n        <UserLocationButton onClick={setUserLocation} />\r\n      </div>\r\n\r\n      {!isMarkersFetching && <FeedbackSidebar />}\r\n\r\n      {routeSummary && (\r\n        <div className={classes.routePanel}>\r\n          <RoutePanel summary={routeSummary} resetRoute={resetRoute} />\r\n        </div>\r\n      )}\r\n\r\n      <div className={classes.contactUsWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={isReadMode ? setCreationMapMode : openFeedbackSidebar}\r\n          className={classes.contactUs}\r\n        >\r\n          { isReadMode ? 'Нашли халяву?' : 'Подтвердить' }\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={isReadMode ? setCreationMapMode : openFeedbackSidebar}\r\n        className={classes.contactUsDesktop}\r\n      >\r\n        { isReadMode ? 'Нашли халяву?' : 'Подтвердить' }\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MapPage);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  progress: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: 1005,\r\n  },\r\n  filterButton: {\r\n    position: 'absolute',\r\n    zIndex: 1001,\r\n  },\r\n  routePanel: {\r\n    position: 'absolute',\r\n    height: 'auto',\r\n    zIndex: 1001,\r\n  },\r\n  userLocationButton: {\r\n    position: 'absolute',\r\n    zIndex: 1002,\r\n  },\r\n  contactUsWrapper: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%',\r\n    zIndex: 1000,\r\n  },\r\n  contactUs: {\r\n    width: '100%',\r\n    borderRadius: 0,\r\n    fontFamily: '\\'Roboto Condensed\\', Arial, Helvetica, sans-serif',\r\n    fontWeight: 'bold',\r\n  },\r\n  contactUsDesktop: {\r\n    display: 'none',\r\n  },\r\n  '@media only screen and (min-width: 768px)': {\r\n    contactUs: {\r\n      display: 'none',\r\n    },\r\n    userLocationButton: {\r\n      right: '2%',\r\n      bottom: '4%',\r\n    },\r\n    filterButton: {\r\n      top: '2%',\r\n      right: '2%',\r\n    },\r\n    contactUsDesktop: {\r\n      display: 'inline-flex',\r\n      position: 'absolute',\r\n      zIndex: 1001,\r\n      left: '2%',\r\n      bottom: '4%',\r\n      color: 'black',\r\n      fontFamily: \"'Roboto Condensed', Arial, Helvetica, sans-serif\",\r\n      fontWeight: 'bold',\r\n    },\r\n    routePanel: {\r\n      left: '2%',\r\n      top: '2%',\r\n      width: '15em',\r\n    },\r\n  },\r\n  '@media only screen and (max-width: 768px)': {\r\n    userLocationButton: {\r\n      right: '4%',\r\n      top: '2%',\r\n    },\r\n    filterButton: {\r\n      left: '4%',\r\n      top: '2%',\r\n    },\r\n    routePanel: {\r\n      bottom: '0',\r\n      width: '100%',\r\n    },\r\n  },\r\n});\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport _ from 'lodash';\r\nimport { MAP_MODES } from '../../config/map';\r\nimport MapPage from './page';\r\n\r\nimport { open } from '../../redux/actions/ui/feedback-sidebar';\r\nimport { LOCATION_ACCESS_DENIED_CODE } from '../../redux/middlewares/const';\r\nimport { selectors as routingSelectors, routingActions } from '../../redux/routing';\r\nimport { userActions, selectors as userSelectors } from '../../redux/user';\r\nimport { sharedActions, selectors as sharedSelectors } from '../../redux/shared';\r\nimport {\r\n  actions as markerActions,\r\n  selectors as markersSelectors,\r\n  thunks as markersThunks,\r\n} from '../../redux/markers';\r\n\r\ntype Props = {\r\n  locationError: string,\r\n  setMapMode: (mode: string) => void,\r\n  getMarkerTypes: (mode: string) => void,\r\n  enqueueSnackbar: (message: string) => void,\r\n  setNewMarkerPositionOnMapViewport: () => void,\r\n  lastGlobalError: any,\r\n};\r\n\r\ntype State = {\r\n  errorSnackbarIsOpen: boolean,\r\n};\r\n\r\nclass MapPageContainer extends Component<Props, State> {\r\n  componentDidMount() {\r\n    const { getMarkerTypes } = this.props;\r\n\r\n    getMarkerTypes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps): void {\r\n    const { lastGlobalError, enqueueSnackbar } = this.props;\r\n\r\n    const oldErrorId = _.get(prevProps.lastGlobalError, 'errorId', null);\r\n    const newErrorId = _.get(lastGlobalError, 'errorId', null);\r\n\r\n    if (oldErrorId !== newErrorId && newErrorId !== null) {\r\n      const { errorMessage } = lastGlobalError;\r\n      enqueueSnackbar(errorMessage, { variant: 'error' });\r\n    }\r\n  }\r\n\r\n  setCreationMapMode = () => {\r\n    const { setMapMode, setNewMarkerPositionOnMapViewport } = this.props;\r\n\r\n    setNewMarkerPositionOnMapViewport();\r\n    setMapMode(MAP_MODES.CREATE);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MapPage\r\n        {...this.props}\r\n        setCreationMapMode={this.setCreationMapMode}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  isMarkersFetching: markersSelectors.selectIsAllMarkersFetching(state),\r\n  currentUserLocation: userSelectors.selectUserCurrentLocation(state),\r\n  locationError: userSelectors.selectUserCurrentLocationError(state),\r\n  selectedFilter: markersSelectors.selectFilter(state),\r\n  routeSummary: routingSelectors.selectRouteSummary(state),\r\n  lastGlobalError: sharedSelectors.selectLastError(state),\r\n  mapViewport: state.shared.mapViewport,\r\n  mapMode: sharedSelectors.selectMapMode(state),\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  openFeedbackSidebar: () => dispatch(open()),\r\n  setUserCurrentLocation: location => dispatch(userActions.setCurrentLocation(location)),\r\n  setFilter: filter => dispatch(markerActions.setFilter(filter)),\r\n  setNewMarkerPosition: position => dispatch(markerActions.setNewMarkerPosition(position)),\r\n  getMarkerTypes: () => dispatch(markersThunks.getMarkerTypes()),\r\n  resetRoute: () => dispatch(routingActions.resetRoute()),\r\n  setMapMode: mode => dispatch(sharedActions.setMapMode(mode)),\r\n});\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch) => {\r\n  const { currentUserLocation, mapViewport } = propsFromState;\r\n  const setUserLocation = () => {\r\n    if (currentUserLocation) {\r\n      propsFromDispatch.setUserCurrentLocation(currentUserLocation.slice());\r\n    } else {\r\n      propsFromDispatch.setUserCurrentLocation({\r\n        code: LOCATION_ACCESS_DENIED_CODE,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setNewMarkerPositionOnMapViewport = () => {\r\n    propsFromDispatch.setNewMarkerPosition({\r\n      lat: mapViewport.center[0],\r\n      lng: mapViewport.center[1]\r\n    });\r\n  };\r\n\r\n  return {\r\n    ...propsFromState,\r\n    ...propsFromDispatch,\r\n    setUserLocation,\r\n    setNewMarkerPositionOnMapViewport,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch, mergeProps)(withSnackbar(MapPageContainer));\r\n","import MapPage from './container';\r\n\r\nexport default MapPage;\r\n","/* @flow */\r\n\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { createStore } from './redux';\r\nimport { notification } from './config';\r\nimport theme from './styles/theme';\r\nimport MapPage from './views/MapPage';\r\n\r\nconst App = () => (\r\n  <Provider store={createStore()}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <SnackbarProvider\r\n        maxSnack={notification.MAX_SNACK}\r\n        anchorOrigin={notification.ANCHOR}\r\n      >\r\n        <BrowserRouter basename=\"/map\">\r\n          <>\r\n            <Switch>\r\n              <Route path=\"/\" component={MapPage} />\r\n            </Switch>\r\n          </>\r\n        </BrowserRouter>\r\n      </SnackbarProvider>\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","/* @flow */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './styles/reset.css';\r\nimport './styles/global.css';\r\n\r\nconst root: ?Element = document.getElementById('root');\r\n\r\nif (root) {\r\n  // eslint-disable-next-line\r\n  ReactDOM.render(<App />, root);\r\n}\r\n"],"sourceRoot":""}