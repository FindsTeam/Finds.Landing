{"version":3,"sources":["images/wifi.svg","images/toilet.svg","images/socket.svg","images/water.svg","images/user.svg","images/empty-landmark.svg","redux/middlewares/const.js","redux/shared/actions.js","config/map.js","redux/shared/reducer.js","redux/shared/selectors.js","redux/shared/index.js","redux/middlewares/globalErrorHandler.js","redux/actions/ui/feedback-sidebar.js","redux/reducers/ui/feedback-sidebar.js","redux/reducers/ui/index.js","redux/markers/toilets/actions.js","redux/markers/toilets/reducer.js","services/api.js","services/feedback.js","services/markers.js","services/routing.js","services/location.js","redux/markers/toilets/thunks.js","redux/markers/toilets/index.js","redux/markers/wifi/actions.js","redux/markers/wifi/reducer.js","redux/markers/wifi/thunks.js","redux/markers/wifi/index.js","redux/markers/sockets/actions.js","redux/markers/sockets/reducer.js","redux/markers/sockets/thunks.js","redux/markers/sockets/index.js","redux/markers/water/actions.js","redux/markers/water/reducer.js","redux/markers/water/thunks.js","redux/markers/water/index.js","redux/markers/actions.js","redux/markers/reducer.js","redux/user/actions.js","redux/user/selectors.js","redux/user/reducer.js","redux/user/index.js","redux/markers/selectors.js","redux/markers/thunks.js","redux/markers/index.js","redux/feedback/actions.js","redux/feedback/reducer/feedback.js","redux/feedback/reducer/address.js","redux/feedback/reducer/index.js","redux/feedback/thunks.js","redux/feedback/index.js","redux/routing/actions.js","redux/routing/reducer.js","redux/routing/selectors.js","redux/routing/helpers.js","redux/routing/thunks.js","redux/rootReducer.js","redux/routing/index.js","redux/store.js","config/notification.js","styles/theme.js","styles/sizes.js","components/ToiletMarker/icon.js","components/ToiletMarker/index.js","components/ToiletMarker/marker.jsx","components/ToiletMarker/styles.js","components/WifiMarker/icon.js","components/WifiMarker/index.js","components/WifiMarker/marker.jsx","components/WifiMarker/styles.js","components/SocketMarker/icon.js","components/SocketMarker/index.js","components/SocketMarker/marker.jsx","components/SocketMarker/styles.js","components/WaterMarker/icon.js","components/WaterMarker/index.js","components/WaterMarker/marker.jsx","components/WaterMarker/styles.js","components/UserMarker/icon.js","components/UserMarker/index.js","components/UserMarker/marker.jsx","components/UserLocationButton/index.js","components/UserLocationButton/button.jsx","components/FilterButton/styles.js","components/FilterButton/option.jsx","components/FilterButton/filters.js","components/FilterButton/icons.jsx","components/FilterButton/button.jsx","components/FilterButton/index.js","views/FeedbackSidebar/helpers.js","views/FeedbackSidebar/styles.js","views/FeedbackSidebar/sidebar.jsx","views/FeedbackSidebar/container.jsx","views/FeedbackSidebar/index.js","views/Map/helpers.js","components/NewMarker/icon.js","views/Map/map.jsx","views/Map/styles.js","views/Map/container.jsx","views/Map/index.js","views/RouteInformationPanel/panel.jsx","views/RouteInformationPanel/helpers.js","views/RouteInformationPanel/index.js","views/RouteInformationPanel/styles.js","views/MapPage/page.jsx","views/MapPage/styles.js","views/MapPage/container.jsx","views/MapPage/index.js","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","GEOLOCATION_ERRORS","_GEOLOCATION_ERRORS","Object","defineProperty","createActions","SHARED","SET_ERROR","errorMessage","errorId","shortId","generate","SET_MAP_MODE","mode","SET_MAP_VIEWPORT","viewport","shared","setError","setMapMode","setMapViewport","MAP_MODES","READ","CREATE","defaultState","errorList","mapMode","mapViewport","zoom","center","reducer","handleActions","_handleActions","state","_ref","_ref$payload","payload","update","$push","_ref2","$set","_ref3","selectLastError","createSelector","list","length","selectMapMode","middleware","store","next","action","error","_","get","message","dispatch","sharedActions","geolocationErrorCode","open","createAction","concat","close","feedbackSidebarActions","feedback_sidebar_handleActions","toString","objectSpread","combineReducers","feedbackSidebar","MARKERS","TOILETS","GET_MARKERS_REQUEST","GET_MARKERS_SUCCESS","toilets","GET_MARKERS_ERROR","markers","getMarkersRequest","getMarkersSuccess","getMarkersError","reducer_handleActions","isFetching","toiletsToUpdate","map","w","location","rest","objectWithoutProperties","newLocation","coordinates","buildBackendApiUrl","root","url","buildApiUrl","process","feedbackApi","wifiApi","toiletsApi","socketsApi","waterApi","markersApi","routingApi","geocodingApi","lat","lng","createFeedback","feedback","type","feedbackData","axios","post","getWifi","getToilets","getSockets","getWater","getMarkerTypes","getRoute","point0","point1","data","getAddress","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","markersService","sent","t0","console","stop","this","_x","apply","arguments","WIFI","wifi","wifi_reducer_handleActions","wifiToUpdate","SOCKETS","sockets","sockets_reducer_handleActions","socketsToUpdate","socket","WATER","water","water_reducer_handleActions","waterToUpdate","SET_FILTER","filter","SET_NEW_MARKER_POSITION","position","GET_TYPES_REQUEST","GET_TYPES_SUCCESS","types","GET_TYPES_ERROR","setFilter","setNewMarkerPosition","getTypesRequest","getTypesSuccess","getTypesError","markersActions","selected","newMarkerPosition","markerTypes","isMarkerTypesFetching","markerTypesError","markers_reducer_handleActions","_ref4","user","USER","SET_CURRENT_LOCATION","locationOrError","currentLocation","code","selectUserCurrentLocation","selectUserCurrentLocationError","locationError","setCurrentLocation","actions","rootSelector","selectWifi","selectToilets","selectSockets","selectWater","selectIsAllMarkersFetching","selectFilter","selectNewMarkerPositionInGeoJSON","userSelectors","userPosition","getMarkers","Promise","all","wifiThunks","toiletsThunks","socketsThunks","waterThunks","_callee2","_context2","_x2","FEEDBACK","CREATE_FEEDBACK_REQUEST","CREATE_FEEDBACK_SUCCESS","CREATE_FEEDBACK_ERROR","GET_ADDRESS_REQUEST","GET_ADDRESS_SUCCESS","address","GET_ADDRESS_ERROR","RESET_ADDRESS","createFeedbackRequest","createFeedbackSuccess","createFeedbackError","getAddressRequest","getAddressSuccess","getAddressError","resetAddress","feedback_handleActions","isLoading","suggestedAddress","feedbackAddressError","isFeedbackAddressLoading","address_handleActions","feedbackAddress","feedbackService","getAddressFromCoordinates","locationService","ROUTING","GET_ROUTE_REQUEST","marker","GET_ROUTE_SUCCESS","route","GET_ROUTE_ERROR","RESET_ROUTE","routing","getRouteRequest","getRouteSuccess","getRouteError","resetRoute","routing_reducer_handleActions","selectRouting","selectRoute","leg","selectRouteSummary","summary","getFormattedRoute","_route$","response","userLocation","routingService","reducers","ui","redux_store","applyMiddleware","thunk","globalErrorHandler","enhancer","composeWithDevTools","composeEnhancers","createStore","rootReducer","MAX_SNACK","ANCHOR","vertical","horizontal","theme","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","markerIcon","options","iconUrl","toilet","iconSize","icon","L","Icon","Marker","withStyles","routeButton","paddingTop","paddingBottom","&:hover","backgroundColor","content","width","fontSize","point","fontWeight","title","classes","buildRoute","react","onDblclick","Popup","autoPan","className","index_es","disableRipple","onClick","icons_index_es","description","userMarker","zIndexOffset","Button","react_default","createElement","color","styles","drop","display","flexDirection","alignItems","button","mainButton","optionButton","marginTop","@media only screen and (min-width: 768px)","top","left","isSelected","cc","size","MARKER_FILTERS","label","value","WcOptionIcon","SocketOptionIcon","WaterOptionIcon","WifiOptionIcon","ClearAllOptionIcon","FilterButton","onFilterClick","_this","props","toggle","setState","prevState","_this$props","selectedFilter","FilterButton_option","Component","validateFeedback","errors","author","trim","push","hasErrors","formatAddress","street","house","city","log","contrastText","sidebarRoot","overflowX","sidebarTitle","padding","sidebarTitleContent","fontFamily","fieldsContainer","margin","formField","buttonsContainer","justifyContent","breakpoints","up","freebieTypes","isOpen","cancel","submit","handleFieldChange","isValidField","field","includes","getFieldValidationChecker","onClose","onOpen","anchor","paper","container","item","xs","variant","gutterBottom","align","spacing","required","fullWidth","onChange","InputLabelProps","shrink","placeholder","htmlFor","inputProps","id","name","key","multiline","FeedbackSidebarContainer","e","target","handleSubmit","closeSidebar","sendFeedback","setReadMapMode","_this$state","then","enqueueSnackbar","catch","handleCancel","_this$props2","resetSuggestedAddress","_this$state2","_this$props3","_this$props4","openSidebar","_this$state3","sidebar","thunks","mapDispatch","feedbackActions","FeedbackSidebar","connect","markersSelectors","withSnackbar","getFlatPosition","latitude","longitude","getPositionsForPolyline","buildedRoutes","maneuver","startPosition","start","originalPosition","endPosition","end","toConsumableArray","newMarker","FreeOpportunitiesMap","refNewMarker","createRef","setMapRef","element","handleViewportChanged","current","leafletElement","setLatLng","buildRouteToMarker","prevProps","panTo","_this2","Map","onViewportChanged","zoomControl","ref","maxZoom","TileLayer","attribution","FeatureGroup","components_UserMarker","components_WifiMarker","components_ToiletMarker","components_SocketMarker","components_WaterMarker","Polyline","positions","defaultProps","height","MapContainer","getUserLocation","navigator","geolocation","getCurrentPosition","_position$coords","coords","currentUserLocation","routingThunks","userActions","selectors","routingSelectors","markerActions","RoutePanel","_this$props$summary","time","minutes","travelTime","Math","ceil","hours","getTimeFromSummary","distance","getDistanceFromSummary","header","closeButtonRoot","closeButton","disableGutters","PureComponent","Panel","marginBottom","progress","zIndex","filterButton","routePanel","userLocationButton","contactUsWrapper","bottom","contactUs","borderRadius","contactUsDesktop","right","@media only screen and (max-width: 768px)","submitFeedbackLocation","setCreationMapMode","setUserLocation","routeSummary","isMarkersFetching","isReadMode","views_Map","components_FilterButton","components_UserLocationButton","views_FeedbackSidebar","RouteInformationPanel","MapPageContainer","setNewMarkerPositionOnMapViewport","openFeedbackSidebar","lastGlobalError","oldErrorId","newErrorId","page","assign","MapPage","sharedSelectors","setUserCurrentLocation","markersThunks","routingActions","feedbackThunks","propsFromState","propsFromDispatch","slice","App","es","build","maxSnack","notification","anchorOrigin","react_router_dom","basename","Fragment","react_router","path","component","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.7ded3bd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wifi.a5113c91.svg\";","module.exports = __webpack_public_path__ + \"static/media/toilet.26830feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/socket.b9333000.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.b07a9540.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c45c2ef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-landmark.76edbd6f.svg\";","export const NETWORK_ERROR_MESSAGE = 'Network Error';\r\nexport const NETWORK_ERROR_MESSAGE_RU = 'Ошибка подключения к интернету.';\r\n\r\nexport const LOCATION_ACCESS_DENIED_CODE = 1;\r\nexport const LOCATION_ACCESS_DENIED_MESSAGE_RU = 'Для работы приложения необходимо включить геолокацию.';\r\n\r\nexport const LOCATION_UNAVAILABLE_CODE = 2;\r\nexport const LOCATION_UNAVAILABLE_MESSAGE_RU = 'Ошибка при определении месторасположения.';\r\n\r\nexport const LOCATION_TIMEOUT_CODE = 3;\r\nexport const LOCATION_TIMEOUT_MESSAGE_RU = 'Время ожидания вышло.';\r\n\r\nexport const GEOLOCATION_ERRORS = {\r\n  [LOCATION_ACCESS_DENIED_CODE]: LOCATION_ACCESS_DENIED_MESSAGE_RU,\r\n  [LOCATION_UNAVAILABLE_CODE]: LOCATION_UNAVAILABLE_MESSAGE_RU,\r\n  [LOCATION_TIMEOUT_CODE]: LOCATION_TIMEOUT_MESSAGE_RU,\r\n};\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\nimport shortId from 'shortid';\r\n\r\nconst {\r\n  shared: {\r\n    setError,\r\n    setMapMode,\r\n    setMapViewport,\r\n  },\r\n} = createActions({\r\n  SHARED: {\r\n    SET_ERROR: errorMessage => ({ errorId: shortId.generate(), errorMessage }),\r\n    SET_MAP_MODE: mode => ({ mode }),\r\n    SET_MAP_VIEWPORT: viewport => ({ viewport }),\r\n  },\r\n});\r\n\r\nexport {\r\n  setError,\r\n  setMapMode,\r\n  setMapViewport,\r\n};\r\n","/* @flow */\r\nexport const TILE_LAYER_URL: string = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\nexport const MAP_ATTRIBUTION: string = '&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\r\n\r\nexport type MapMode = {\r\n  READ: string,\r\n  CREATE: string,\r\n};\r\n\r\nexport const MAP_MODES: MapMode = {\r\n  READ: 'read',\r\n  CREATE: 'create',\r\n};\r\n\r\nexport const DEFAULT_MAP_CENTER: number[] = [53.9017, 27.5429];\r\n\r\nexport const DEFAULT_MAP_ZOOM: number = 12;\r\nexport const MAX_ZOOM: number = 19;\r\n","// @flow\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport { setError, setMapMode, setMapViewport } from './actions';\r\nimport { DEFAULT_MAP_CENTER, DEFAULT_MAP_ZOOM, MAP_MODES } from '../../config/map';\r\n\r\nconst defaultState = {\r\n  errorList: [],\r\n\r\n  mapMode: MAP_MODES.READ,\r\n\r\n  mapViewport: {\r\n    zoom: DEFAULT_MAP_ZOOM,\r\n    center: DEFAULT_MAP_CENTER,\r\n  },\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setError]: (state, { payload: { errorMessage, errorId } }) => {\r\n    return update(state, {\r\n      errorList: {\r\n        $push: [{\r\n          errorId,\r\n          errorMessage,\r\n        }],\r\n      },\r\n    });\r\n  },\r\n  [setMapMode]: (state, { payload: { mode } }) => {\r\n    return update(state, {\r\n      mapMode: {\r\n        $set: mode,\r\n      },\r\n    });\r\n  },\r\n  [setMapViewport]: (state, { payload: { viewport } }) => {\r\n    return update(state, {\r\n      mapViewport: {\r\n        $set: viewport,\r\n      },\r\n    });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectErrorsList = state => state.shared.errorList;\r\n\r\nexport const selectLastError = createSelector(\r\n  selectErrorsList,\r\n  (list) => {\r\n    return list.length > 0 ? list[list.length - 1] : null;\r\n  },\r\n);\r\n\r\nexport const selectMapMode = state => state.shared.mapMode;\r\n","/* @flow */\r\n\r\nimport * as sharedActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  sharedActions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","// @flow\r\nimport _ from 'lodash';\r\nimport {\r\n  NETWORK_ERROR_MESSAGE, NETWORK_ERROR_MESSAGE_RU,\r\n  GEOLOCATION_ERRORS,\r\n} from './const';\r\nimport { sharedActions } from '../shared';\r\n\r\nconst middleware = store => next => (action) => {\r\n  const hasError = action.error\r\n    || _.get(action, 'payload.error', false);\r\n  if (hasError) {\r\n    const { payload } = action;\r\n    if (payload.message && payload.message === NETWORK_ERROR_MESSAGE) {\r\n      store.dispatch(sharedActions.setError(NETWORK_ERROR_MESSAGE_RU));\r\n    }\r\n    if (payload.geolocationErrorCode) {\r\n      const errorMessage = GEOLOCATION_ERRORS[payload.geolocationErrorCode];\r\n      store.dispatch(sharedActions.setError(errorMessage));\r\n    }\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default middleware;\r\n","/* @flow */\r\n\r\nimport { createAction } from 'redux-actions';\r\n\r\nconst prefix = 'FEEDBACK_SIDEBAR';\r\n\r\nconst open = createAction(`${prefix}/OPEN`);\r\nconst close = createAction(`${prefix}/CLOSE`);\r\n\r\nexport {\r\n  open,\r\n  close,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport { feedbackSidebarActions } from '../../actions/ui';\r\n\r\ntype State = {\r\n  +open: boolean,\r\n};\r\n\r\nconst { open, close } = feedbackSidebarActions;\r\n\r\nconst defaultState: State = {\r\n  open: false,\r\n};\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [open.toString()]: (state: State) => ({\r\n      ...state,\r\n      open: true,\r\n    }),\r\n    [close.toString()]: (state: State) => ({\r\n      ...state,\r\n      open: false,\r\n    }),\r\n  },\r\n  defaultState,\r\n);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport feedbackSidebar from './feedback-sidebar';\r\n\r\nexport default combineReducers({\r\n  feedbackSidebar,\r\n});\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  markers: {\r\n    toilets: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    TOILETS: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: toilets => ({ toilets }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { toilets } }) => {\r\n    const toiletsToUpdate = toilets.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: toiletsToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nconst baseApi: string = process.env.REACT_APP_API || '';\r\n\r\nconst buildApiUrl = (root: string) => (url: string) => `${root}${url}`;\r\nconst buildBackendApiUrl: (url: string) => string = buildApiUrl(baseApi);\r\n\r\nexport const feedbackApi = {\r\n  create: (): string => buildBackendApiUrl('/feedback'),\r\n};\r\n\r\nexport const wifiApi = {\r\n  get: () => buildBackendApiUrl('/wifi'),\r\n};\r\n\r\nexport const toiletsApi = {\r\n  get: () => buildBackendApiUrl('/toilets'),\r\n};\r\n\r\nexport const socketsApi = {\r\n  get: () => buildBackendApiUrl('/sockets'),\r\n};\r\n\r\nexport const waterApi = {\r\n  get: () => buildBackendApiUrl('/water'),\r\n};\r\n\r\nexport const markersApi = {\r\n  getTypes: () => buildBackendApiUrl('/markers/types'),\r\n};\r\n\r\nexport const routingApi = {\r\n  getRoute: () => buildBackendApiUrl('/route'),\r\n};\r\n\r\nexport const geocodingApi = {\r\n  getAddressFromCoordinates: (lat: number, lng: number) => buildBackendApiUrl(\r\n    `/location/geocoding/reverse/${lat}/${lng}`,\r\n  ),\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport { feedbackApi } from './api';\r\nimport type { HttpResponse, LocationGeoJSON } from './types';\r\n\r\nexport type Feedback = {\r\n  title?: string | null,\r\n  location: number[],\r\n  author: string,\r\n  address: string,\r\n  type: number,\r\n  password?: string | null,\r\n  description?: string | null,\r\n};\r\n\r\nexport type FeedbackRequestData = {\r\n  title?: string | null,\r\n  location: number[],\r\n  author: string,\r\n  address: string,\r\n  type: number[],\r\n  password?: string | null,\r\n  description?: string | null,\r\n};\r\n\r\nexport type FeedbackResponseData = {\r\n  id: string,\r\n  title?: string | null,\r\n  location: LocationGeoJSON,\r\n  author: string,\r\n  address: string,\r\n  type: number[],\r\n  password?: string | null,\r\n  description?: string | null,\r\n  creationDate: string,\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const createFeedback = (feedback: Feedback): Promise<HttpResponse<FeedbackResponseData>> => {\r\n  const { type, ...rest } = feedback;\r\n  const feedbackData: FeedbackRequestData = {\r\n    ...rest,\r\n    type: [type],\r\n  };\r\n\r\n  return axios.post(feedbackApi.create(), feedbackData);\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport {\r\n  markersApi,\r\n  wifiApi,\r\n  toiletsApi,\r\n  socketsApi,\r\n  waterApi,\r\n} from './api';\r\n\r\nexport const getWifi = (): Promise<any> => {\r\n  return axios.get(wifiApi.get());\r\n};\r\n\r\nexport const getToilets = (): Promise<any> => {\r\n  return axios.get(toiletsApi.get());\r\n};\r\n\r\nexport const getSockets = (): Promise<any> => {\r\n  return axios.get(socketsApi.get());\r\n};\r\n\r\nexport const getWater = (): Promise<any> => {\r\n  return axios.get(waterApi.get());\r\n};\r\n\r\nexport const getMarkerTypes = (): Promise<any> => {\r\n  return axios.get(markersApi.getTypes());\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport { routingApi } from './api';\r\n\r\ntype GetRouteRequestData = {\r\n  point0: number[],\r\n  point1: number[],\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getRoute = (point0: number[], point1: number[]): Promise<any> => {\r\n  const data: GetRouteRequestData = {\r\n    point0,\r\n    point1,\r\n  };\r\n\r\n  return axios.post(routingApi.getRoute(), data);\r\n};\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { geocodingApi } from './api';\r\nimport type { HttpResponse, LocationGeoJSON } from './types';\r\n\r\ntype SuggestedAddressComponents = {\r\n  city: string,\r\n  district: string | null,\r\n  suburb: string | null,\r\n  street: string | null,\r\n  house: string | null,\r\n  name: string | null,\r\n};\r\n\r\nexport type SuggestedAddress = {\r\n  point: LocationGeoJSON,\r\n  address: SuggestedAddressComponents,\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getAddress = (lat: number, lng: number): Promise<HttpResponse<SuggestedAddress>> => {\r\n  return axios.get(geocodingApi.getAddressFromCoordinates(lat, lng));\r\n};\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getToilets = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getToilets();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError());\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getToilets,\r\n};\r\n","/* @flow */\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    wifi: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    WIFI: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: wifi => ({ wifi }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { wifi } }) => {\r\n    const wifiToUpdate = wifi.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: wifiToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getWifi = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getWifi();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getWifi,\r\n};\r\n","/* @flow */\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    sockets: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    SOCKETS: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: sockets => ({ sockets }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { sockets } }) => {\r\n    const socketsToUpdate = sockets.map((socket) => {\r\n      const { location, ...rest } = socket;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: socketsToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getSockets = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getSockets();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getSockets,\r\n};\r\n","/* @flow */\r\nimport * as socketsActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as socketsThunks from './thunks';\r\n\r\nexport {\r\n  socketsActions,\r\n  reducer,\r\n  socketsThunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    water: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    WATER: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: water => ({ water }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { water } }) => {\r\n    const waterToUpdate = water.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: waterToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getWater = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getWater();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getWater,\r\n};\r\n","/* @flow */\r\nimport * as waterActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as waterThunks from './thunks';\r\n\r\nexport {\r\n  waterActions,\r\n  reducer,\r\n  waterThunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\nimport { actions as toiletsActions } from './toilets';\r\nimport { actions as wifiActions } from './wifi';\r\nimport { socketsActions } from './sockets';\r\nimport { waterActions } from './water';\r\n\r\nconst {\r\n  markers: {\r\n    setFilter,\r\n    setNewMarkerPosition,\r\n\r\n    getTypesRequest,\r\n    getTypesSuccess,\r\n    getTypesError,\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    SET_FILTER: (filter: string | null): {} => ({ filter }),\r\n    SET_NEW_MARKER_POSITION: (position: any) => {\r\n      return { location: position };\r\n    },\r\n\r\n    GET_TYPES_REQUEST: () => {},\r\n    GET_TYPES_SUCCESS: types => ({ types }),\r\n    GET_TYPES_ERROR: error => ({ error }),\r\n  },\r\n});\r\n\r\nexport {\r\n  setFilter,\r\n  setNewMarkerPosition,\r\n\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n\r\n  toiletsActions,\r\n  wifiActions,\r\n  socketsActions,\r\n  waterActions,\r\n};\r\n","/* @flow */\r\nimport { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport * as markersActions from './actions';\r\nimport toilets from './toilets';\r\nimport wifi from './wifi';\r\nimport sockets from './sockets';\r\nimport water from './water';\r\n\r\nexport type State = {\r\n  +selected: string | null,\r\n  newMarkerPosition: number[] | null,\r\n\r\n  markerTypes: [],\r\n  isMarkerTypesFetching: boolean,\r\n  markerTypesError: any,\r\n};\r\n\r\nconst {\r\n  setFilter,\r\n  setNewMarkerPosition,\r\n\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n} = markersActions;\r\n\r\nconst defaultState: State = {\r\n  selected: null,\r\n  newMarkerPosition: null,\r\n\r\n  markerTypes: [],\r\n  isMarkerTypesFetching: false,\r\n  markerTypesError: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setFilter]: (state: State, { payload: { filter } }) => ({\r\n    ...state,\r\n    selected: filter,\r\n  }),\r\n  [setNewMarkerPosition]: (state: State, { payload: { location } }) => ({\r\n    ...state,\r\n    newMarkerPosition: location,\r\n  }),\r\n\r\n  [getTypesRequest]: (state: State) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: true,\r\n    markerTypesError: defaultState.markerTypesError,\r\n  }),\r\n  [getTypesSuccess]: (state: State, { payload: { types } }) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: false,\r\n    markerTypes: types,\r\n  }),\r\n  [getTypesError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: false,\r\n    markerTypesError: error,\r\n  }),\r\n}, defaultState);\r\n\r\n\r\nexport default combineReducers({\r\n  shared: reducer,\r\n  toilets,\r\n  wifi,\r\n  sockets,\r\n  water,\r\n});\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\ntype Actions = {\r\n  user: {\r\n    setCurrentLocation: (locationOrError: [] | {}) => void,\r\n  },\r\n};\r\n\r\nconst { user }: Actions = createActions({\r\n  USER: {\r\n    SET_CURRENT_LOCATION: (locationOrError: [] | {}) => {\r\n      if (!locationOrError.length) {\r\n        return {\r\n          error: true,\r\n          geolocationErrorCode: locationOrError.code,\r\n          currentLocation: null,\r\n        };\r\n      }\r\n      return { currentLocation: locationOrError };\r\n    },\r\n  },\r\n});\r\n\r\nexport default user;\r\n","/* @flow */\r\nexport const selectUserCurrentLocation = (state: any) => state.user.currentLocation;\r\n\r\nexport const selectUserCurrentLocationError = (state: any) => state.user.locationError;\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport actions from './actions';\r\n\r\nconst {\r\n  setCurrentLocation,\r\n} = actions;\r\n\r\ntype State = {\r\n  currentLocation: [] | null,\r\n  locationError: string | null,\r\n}\r\n\r\nconst defaultState: State = {\r\n  currentLocation: null,\r\n  locationError: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setCurrentLocation.toString()]: (state: State, { payload: { currentLocation } }) => {\r\n    return update(state, {\r\n      currentLocation: {\r\n        $set: currentLocation,\r\n      },\r\n    });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import userActions from './actions';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\nimport reducer from './reducer';\r\n\r\nexport {\r\n  userActions,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\nimport { selectors as userSelectors } from '../user';\r\nimport type { Wifi } from '../../types/models';\r\nimport type { State } from './reducer';\r\n\r\ntype Selector = (state: {}) => any;\r\n\r\nconst rootSelector: Selector = (state): State => state.markers;\r\n\r\nexport const selectWifi: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State): Wifi[] => markers.wifi.markers,\r\n);\r\n\r\nexport const selectToilets: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.toilets.markers,\r\n);\r\n\r\nexport const selectSockets: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.sockets.markers,\r\n);\r\n\r\nexport const selectWater: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.water.markers,\r\n);\r\n\r\nexport const selectIsAllMarkersFetching: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State): boolean => {\r\n    return (\r\n      markers.wifi.isFetching\r\n    || markers.toilets.isFetching\r\n    || markers.sockets.isFetching\r\n    || markers.water.isFetching\r\n    );\r\n  },\r\n);\r\n\r\nexport const selectFilter: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.shared.selected,\r\n);\r\n\r\nconst selectNewMarkerPosition = state => state.markers.shared.newMarkerPosition;\r\n\r\nexport const selectNewMarkerPositionInGeoJSON = createSelector(\r\n  [selectNewMarkerPosition, userSelectors.selectUserCurrentLocation],\r\n  (position, userPosition) => {\r\n    return !position ? userPosition : position;\r\n  },\r\n);\r\n","import {\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n} from './actions';\r\nimport { thunks as toiletsThunks } from './toilets';\r\nimport { thunks as wifiThunks } from './wifi';\r\nimport { socketsThunks } from './sockets';\r\nimport { waterThunks } from './water';\r\nimport { markersService } from '../../services';\r\n\r\nexport const getMarkers = () => async (dispatch) => {\r\n  await Promise.all([\r\n    dispatch(wifiThunks.getWifi()),\r\n    dispatch(toiletsThunks.getToilets()),\r\n    dispatch(socketsThunks.getSockets()),\r\n    dispatch(waterThunks.getWater()),\r\n  ]);\r\n};\r\n\r\nexport const getMarkerTypes = () => async (dispatch) => {\r\n  dispatch(getTypesRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getMarkerTypes();\r\n    dispatch(getTypesSuccess(data));\r\n  } catch (e) {\r\n    console.error(e);\r\n    dispatch(getTypesError(e));\r\n  }\r\n};\r\n\r\nexport {\r\n  wifiThunks,\r\n  toiletsThunks,\r\n  socketsThunks,\r\n  waterThunks,\r\n};\r\n","/* @flow */\r\n\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  feedback: {\r\n    createFeedbackRequest,\r\n    createFeedbackSuccess,\r\n    createFeedbackError,\r\n\r\n    getAddressRequest,\r\n    getAddressSuccess,\r\n    getAddressError,\r\n\r\n    resetAddress,\r\n  },\r\n} = createActions({\r\n  FEEDBACK: {\r\n    CREATE_FEEDBACK_REQUEST: (): void => {},\r\n    CREATE_FEEDBACK_SUCCESS: (): void => {},\r\n    CREATE_FEEDBACK_ERROR: (error: any): { error: any } => ({ error }),\r\n\r\n    GET_ADDRESS_REQUEST: (): void => {},\r\n    GET_ADDRESS_SUCCESS: address => ({ address }),\r\n    GET_ADDRESS_ERROR: (error: any) => ({ error }),\r\n\r\n    RESET_ADDRESS: () => {},\r\n  },\r\n});\r\n\r\nexport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n\r\n  getAddressRequest,\r\n  getAddressSuccess,\r\n  getAddressError,\r\n\r\n  resetAddress,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n} from '../actions';\r\n\r\ntype State = {\r\n  isLoading: boolean,\r\n  error?: {},\r\n  feedback: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  feedback: null,\r\n  error: {},\r\n  isLoading: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [createFeedbackRequest]: (state: State) => update(state, {\r\n    isLoading: {\r\n      $set: true,\r\n    },\r\n  }),\r\n  [createFeedbackSuccess]: (state: State) => update(state, {\r\n    isLoading: {\r\n      $set: false,\r\n    },\r\n  }),\r\n  [createFeedbackError]: (state: State, { payload: { error } }) => update(state, {\r\n    isLoading: {\r\n      $set: false,\r\n    },\r\n    error: {\r\n      $set: error,\r\n    },\r\n  }),\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  getAddressRequest,\r\n  getAddressSuccess,\r\n  getAddressError,\r\n\r\n  resetAddress,\r\n} from '../actions';\r\n\r\ntype State = {\r\n  isFeedbackAddressLoading: boolean,\r\n  feedbackAddressError?: any,\r\n  suggestedAddress: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  suggestedAddress: null,\r\n  feedbackAddressError: null,\r\n  isFeedbackAddressLoading: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getAddressRequest]: (state: State) => update(state, {\r\n    isFeedbackAddressLoading: {\r\n      $set: true,\r\n    },\r\n    feedbackAddressError: {\r\n      $set: defaultState.feedbackAddressError,\r\n    },\r\n  }),\r\n  [getAddressSuccess]: (state: State, { payload: { address } }) => update(state, {\r\n    suggestedAddress: {\r\n      $set: address,\r\n    },\r\n    isFeedbackAddressLoading: {\r\n      $set: false,\r\n    },\r\n  }),\r\n  [getAddressError]: (state: State, { payload: { error } }) => update(state, {\r\n    isFeedbackAddressLoading: {\r\n      $set: false,\r\n    },\r\n    feedbackAddressError: {\r\n      $set: error,\r\n    },\r\n  }),\r\n\r\n  [resetAddress]: (state: State) => update(state, {\r\n    isFeedbackAddressLoading: {\r\n      $set: defaultState.isFeedbackAddressLoading,\r\n    },\r\n    feedbackAddressError: {\r\n      $set: defaultState.feedbackAddressError,\r\n    },\r\n    suggestedAddress: {\r\n      $set: defaultState.suggestedAddress,\r\n    },\r\n  }),\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport feedback from './feedback';\r\nimport feedbackAddress from './address';\r\n\r\nexport default combineReducers({\r\n  feedback,\r\n  feedbackAddress,\r\n});\r\n","/* @flow */\r\nimport { feedbackService, locationService } from '../../services';\r\nimport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n\r\n  getAddressRequest,\r\n  getAddressSuccess,\r\n  getAddressError,\r\n} from './actions';\r\nimport type { Feedback } from '../../types/models';\r\n\r\nexport const createFeedback = (feedback: Feedback) => async (dispatch) => {\r\n  dispatch(createFeedbackRequest());\r\n\r\n  try {\r\n    await feedbackService.createFeedback(feedback);\r\n    dispatch(createFeedbackSuccess());\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(createFeedbackError(error));\r\n\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAddressFromCoordinates = (coordinates: number[]) => async (dispatch) => {\r\n  dispatch(getAddressRequest());\r\n\r\n  try {\r\n    const { data } = await locationService.getAddress(coordinates[0], coordinates[1]);\r\n    dispatch(getAddressSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getAddressError(error));\r\n\r\n    throw error;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  routing: {\r\n    getRouteRequest,\r\n    getRouteSuccess,\r\n    getRouteError,\r\n\r\n    resetRoute,\r\n  },\r\n} = createActions({\r\n  ROUTING: {\r\n    GET_ROUTE_REQUEST: marker => ({ marker }),\r\n    GET_ROUTE_SUCCESS: route => ({ route }),\r\n    GET_ROUTE_ERROR: error => ({ error }),\r\n\r\n    RESET_ROUTE: () => {},\r\n  },\r\n});\r\n\r\nexport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n\r\n  resetRoute,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n  resetRoute,\r\n} from './actions';\r\nimport { actions as markersActions } from '../markers';\r\n\r\ntype State = {\r\n  selectedMarker: any,\r\n  route: any,\r\n  isFetching: boolean,\r\n  error: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  marker: null,\r\n  route: null,\r\n  isFetching: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getRouteRequest]: (state: State, { payload: { marker } }) => update(state, {\r\n    marker: { $set: marker },\r\n    isFetching: { $set: true },\r\n    error: { $set: defaultState.error },\r\n  }),\r\n  [getRouteSuccess]: (state: State, { payload: { route } }) => update(state, {\r\n    isFetching: { $set: false },\r\n    route: { $set: route },\r\n  }),\r\n  [getRouteError]: (state: State, { payload: { error } }) => update(state, {\r\n    isFetching: { $set: false },\r\n    error: { $set: error },\r\n  }),\r\n  [resetRoute]: (state: State) => update(state, { route: { $set: null } }),\r\n  [markersActions.setFilter]: (state: State, { payload: { filter } }) => {\r\n    return !filter\r\n      ? state\r\n      : update(state, {\r\n        error: {\r\n          $set: null,\r\n        },\r\n        route: {\r\n          $set: null,\r\n        },\r\n      });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectRouting = state => state.routing.route;\r\nconst selectMarkerForRouting = state => state.routing.marker;\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const selectRoute = createSelector(\r\n  selectRouting,\r\n  (route) => {\r\n    return route ? route.leg : null;\r\n  },\r\n);\r\n\r\nexport const selectRouteSummary = createSelector(\r\n  [selectRouting, selectMarkerForRouting],\r\n  (route, marker) => (route ? { summary: route.summary, marker } : null),\r\n);\r\n","/* @flow */\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getFormattedRoute = ({ response }) => {\r\n  const { route } = response;\r\n  const { leg, summary } = route[0];\r\n\r\n  return { leg: leg[0], summary };\r\n};\r\n","/* @flow */\r\nimport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n} from './actions';\r\nimport { routingService } from '../../services';\r\nimport { getFormattedRoute } from './helpers';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getRoute = (userLocation, marker) => async (dispatch) => {\r\n  const { location } = marker;\r\n  dispatch(getRouteRequest(marker));\r\n\r\n  try {\r\n    const data = await routingService.getRoute(userLocation, location);\r\n    const route = getFormattedRoute(data.data);\r\n\r\n    dispatch(getRouteSuccess(route));\r\n  } catch (error) {\r\n    dispatch(getRouteError(error));\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport ui from './reducers/ui';\r\nimport markers from './markers';\r\nimport feedback from './feedback';\r\nimport user from './user';\r\nimport routing from './routing';\r\nimport shared from './shared';\r\n\r\ntype State = {\r\n  user: any,\r\n  ui: any,\r\n  markers: any,\r\n  feedback: any,\r\n  routing: any,\r\n  errors: any,\r\n};\r\n\r\nconst reducers: State = {\r\n  user,\r\n  ui,\r\n  markers,\r\n  feedback,\r\n  routing,\r\n  shared,\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","/* @flow */\r\n\r\nimport * as routingActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  routingActions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\n\r\nimport {\r\n  createStore,\r\n  applyMiddleware,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { globalErrorHandler } from './middlewares';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nexport default () => {\r\n  const middleware = applyMiddleware(\r\n    thunk,\r\n    globalErrorHandler,\r\n  );\r\n\r\n  const composeEnhancers = composeWithDevTools({});\r\n  const enhancer = composeEnhancers(\r\n    middleware,\r\n  );\r\n\r\n  return createStore(rootReducer, enhancer);\r\n};\r\n","// @flow\r\n\r\nexport const MAX_SNACK: number = 3;\r\n\r\nexport type NotificationAnchor = {\r\n  vertical: string,\r\n  horizontal: string,\r\n};\r\n\r\nexport const ANCHOR: NotificationAnchor = {\r\n  vertical: 'bottom',\r\n  horizontal: 'right',\r\n};\r\n","// @flow\r\n\r\nimport { createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#f4c844',\r\n    },\r\n    secondary: {\r\n      main: '#e53935',\r\n    },\r\n  },\r\n  typography: { useNextVariants: true },\r\n});\r\n\r\nexport default theme;\r\n","/* @flow */\r\n\r\nexport const markerIcon: number[] = [25, 37];\r\n\r\nexport const userMarkerIcon: number[] = [25, 25];\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { toilet } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: toilet,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Toilet } from '../../types/models';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  toilet: Toilet,\r\n  buildRoute: (any) => void,\r\n};\r\n\r\nconst ToiletMarker = ({ toilet, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={toilet.location}\r\n      onDblclick={() => { buildRoute(toilet)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Туалет</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(toilet)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{toilet.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{toilet.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ToiletMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { wifi } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: wifi,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Wifi } from '../../types/models';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  wifi: Wifi,\r\n  buildRoute: (location: number[]) => void,\r\n};\r\n\r\nconst WifiMarker = ({ wifi, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={wifi.location}\r\n      onDblclick={() => { buildRoute(wifi)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.point}>Название: </span>\r\n          <span className={classes.title}>\r\n            {wifi.title}\r\n          </span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(wifi)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>\r\n            {wifi.address}\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>\r\n            {wifi.description}\r\n          </span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(WifiMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { socket } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: socket,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  socket: any,\r\n  buildRoute: (any) => void,\r\n};\r\n\r\nconst SocketMarker = ({ socket, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={socket.location}\r\n      onDblclick={() => { buildRoute(socket)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Розетка</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(socket)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{socket.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{socket.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SocketMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { water } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: water,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  water: any,\r\n  buildRoute: any,\r\n};\r\n\r\nconst WaterMarker = ({ water, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={water.location}\r\n      onDblclick={() => { buildRoute(water)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Вода</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(water)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{water.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{water.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(WaterMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { userMarker } from '../../styles/images';\r\nimport { userMarkerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: userMarker,\r\n  iconSize: userMarkerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker } from 'react-leaflet';\r\nimport icon from './icon';\r\n\r\ntype Props = {\r\n  location: number[],\r\n};\r\n\r\nconst UserMarker = ({ location }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      zIndexOffset={10000}\r\n      position={location}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserMarker;\r\n","import Button from './button';\r\n\r\nexport default Button;\r\n","/* @flow */\r\nimport React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\nimport { MyLocation as MyLocationIcon } from '@material-ui/icons';\r\n\r\ntype Props = {\r\n  onClick: () => void,\r\n};\r\n\r\nconst UserLocationButton = ({ onClick }: Props) => {\r\n  return (\r\n    <Fab\r\n      color=\"primary\"\r\n      onClick={onClick}\r\n    >\r\n      <MyLocationIcon color=\"inherit\" />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default UserLocationButton;\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nconst styles = (theme: any): Styles => ({\r\n  filter: {\r\n  },\r\n  drop: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n  },\r\n  open: {\r\n    display: 'flex',\r\n  },\r\n  close: {\r\n    display: 'none',\r\n  },\r\n  mainButton: {\r\n  },\r\n  optionButton: {\r\n    marginTop: 15,\r\n  },\r\n  '@media only screen and (min-width: 768px)': {\r\n    filter: {\r\n      top: '2%',\r\n      left: '2%',\r\n    },\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport type { ElementType } from 'react';\r\nimport cc from 'classcat';\r\nimport { Fab, withStyles } from '@material-ui/core';\r\nimport styles from './styles';\r\n\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  filter: string | null,\r\n  onClick: (filter: string | null) => () => void,\r\n  classes: Classes,\r\n  Icon: ElementType,\r\n  isSelected: boolean,\r\n};\r\n\r\nconst Option = ({\r\n  Icon,\r\n  filter,\r\n  onClick,\r\n  classes,\r\n  isSelected,\r\n}: Props) => {\r\n  return (\r\n    <Fab\r\n      className={cc([classes.button, classes.optionButton])}\r\n      color={isSelected ? 'primary' : 'default'}\r\n      onClick={onClick(filter)}\r\n      size=\"small\"\r\n    >\r\n      <Icon />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Option);\r\n","// @flow\r\n\r\ntype MarkerFilterOption = {\r\n  label: string,\r\n  value: number | null,\r\n};\r\n\r\nexport type MarkerFilters = {\r\n  [string]: MarkerFilterOption,\r\n};\r\n\r\nexport const MARKER_FILTERS: MarkerFilters = {\r\n  all: { label: 'all', value: null },\r\n  wifi: { label: 'wifi', value: 1 },\r\n  toilet: { label: 'toilet', value: 2 },\r\n  socket: { label: 'socket', value: 3 },\r\n  water: { label: 'water', value: 4 },\r\n};\r\n","// @flow\r\nimport * as React from 'react';\r\nimport {\r\n  Wc as WcIcon,\r\n  Wifi as WifiIcon,\r\n  Power as PowerIcon,\r\n  Waves as WaterIcon,\r\n  ClearAll as ClearAllIcon,\r\n} from '@material-ui/icons';\r\n\r\nexport const WcOptionIcon = () => <WcIcon color=\"inherit\" />;\r\nexport const SocketOptionIcon = () => <PowerIcon color=\"inherit\" />;\r\nexport const WaterOptionIcon = () => <WaterIcon color=\"inherit\" />;\r\nexport const WifiOptionIcon = () => <WifiIcon color=\"inherit\" />;\r\nexport const ClearAllOptionIcon = () => <ClearAllIcon color=\"inherit\" />;\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Fab } from '@material-ui/core';\r\nimport { FilterList } from '@material-ui/icons';\r\nimport cc from 'classcat';\r\nimport Option from './option';\r\nimport { MARKER_FILTERS } from './filters';\r\nimport {\r\n  ClearAllOptionIcon,\r\n  SocketOptionIcon,\r\n  WcOptionIcon,\r\n  WifiOptionIcon,\r\n  WaterOptionIcon,\r\n} from './icons';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  selectedFilter: string,\r\n  setFilter: (filter: string | null) => void,\r\n};\r\n\r\ntype State = {\r\n  open: boolean,\r\n};\r\n\r\nclass FilterButton extends Component<Props, State> {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  onFilterClick = (filter: string | null) => () => {\r\n    const { setFilter } = this.props;\r\n\r\n    setFilter(filter);\r\n  };\r\n\r\n  toggle = (): void => {\r\n    this.setState((prevState: State) => ({\r\n      open: !prevState.open,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, selectedFilter } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={cc([classes.filter])}>\r\n        <Fab\r\n          className={cc([classes.button, classes.mainButton])}\r\n          color=\"primary\"\r\n          onClick={this.toggle}\r\n        >\r\n          <FilterList color=\"inherit\" />\r\n        </Fab>\r\n        <div className={cc([(open ? classes.open : classes.close), classes.drop])}>\r\n          <Option\r\n            isSelected={selectedFilter === null}\r\n            filter={MARKER_FILTERS.all.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={ClearAllOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.toilet.value}\r\n            filter={MARKER_FILTERS.toilet.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WcOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.wifi.value}\r\n            filter={MARKER_FILTERS.wifi.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WifiOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.socket.value}\r\n            filter={MARKER_FILTERS.socket.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={SocketOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.water.value}\r\n            filter={MARKER_FILTERS.water.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WaterOptionIcon}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FilterButton);\r\n","import Button from './button';\r\nimport { MARKER_FILTERS } from './filters';\r\n\r\nexport default Button;\r\n\r\nexport {\r\n  MARKER_FILTERS,\r\n};\r\n","// @flow\r\n\r\nexport const validateFeedback = (feedback) => {\r\n  const errors = [];\r\n\r\n  if (!feedback.author) {\r\n    errors.push('author');\r\n  } else if (!feedback.author.trim()) {\r\n    errors.push('author');\r\n  }\r\n\r\n  if (!feedback.address) {\r\n    errors.push('address');\r\n  } else if (!feedback.address.trim()) {\r\n    errors.push('address');\r\n  }\r\n\r\n  return { errors, hasErrors: errors.length !== 0 };\r\n};\r\n\r\nexport const getFieldValidationChecker = errors => (field) => {\r\n  return errors.includes(field);\r\n};\r\n\r\nexport const formatAddress = (suggestedAddress: any): string => {\r\n  let address = '';\r\n  address += suggestedAddress.street\r\n    ? `${suggestedAddress.street}, `\r\n    : '';\r\n\r\n  address += suggestedAddress.house\r\n    ? `${suggestedAddress.house}, `\r\n    : '';\r\n\r\n  address += suggestedAddress.city\r\n    ? `${suggestedAddress.city}`\r\n    : '';\r\n\r\n  console.log('format')\r\n  console.log(address)\r\n  console.log(suggestedAddress)\r\n\r\n  return address;\r\n};\r\n","/* @flow */\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport type { Theme } from '@material-ui/core';\r\nimport type { Styles } from '../../types/styles';\r\n\r\nconst sideMargin = 12;\r\nconst sidebarDesctopSize = 340;\r\n\r\nexport default (theme: Theme): Styles => ({\r\n  sidebarRoot: {\r\n    width: '100%',\r\n    overflowX: 'hidden',\r\n  },\r\n  sidebarTitle: {\r\n    padding: 16,\r\n    paddingBottom: 0,\r\n  },\r\n  sidebarTitleContent: {\r\n    fontFamily: \"'Roboto Condensed', Arial, Helvetica, sans-serif\",\r\n    fontWeight: 'bold',\r\n  },\r\n  fieldsContainer: {\r\n    margin: 0,\r\n  },\r\n  formField: {\r\n    margin: sideMargin,\r\n    width: '93%',\r\n  },\r\n  buttonsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    sidebarRoot: {\r\n      width: sidebarDesctopSize,\r\n    },\r\n  },\r\n});\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#4caf50',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: '#d14942',\r\n    },\r\n  },\r\n});\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport {\r\n  withStyles, SwipeableDrawer, Grid,\r\n  Button, TextField, Select, MenuItem,\r\n  FormControl, InputLabel, Typography,\r\n  MuiThemeProvider,\r\n  LinearProgress,\r\n} from '@material-ui/core';\r\nimport { getFieldValidationChecker } from './helpers';\r\nimport styles, { theme } from './styles';\r\nimport type { Classes } from '../../types/styles';\r\nimport type { Feedback } from '../../types/models';\r\n\r\ntype Props = {\r\n  +isOpen: boolean,\r\n  feedback: Feedback,\r\n  freebieTypes: [],\r\n  errors: String[],\r\n  +classes: Classes,\r\n  open: () => void,\r\n  +cancel: () => void,\r\n  +submit: () => void,\r\n  isFeedbackAddressLoading: boolean,\r\n  handleFieldChange: (fields: string) => void,\r\n};\r\n\r\nconst FeedbackSidebar = ({\r\n  feedback, freebieTypes,\r\n  isFeedbackAddressLoading,\r\n  errors,\r\n  open, isOpen,\r\n  cancel, submit, handleFieldChange,\r\n  classes,\r\n}: Props) => {\r\n  const isValidField = getFieldValidationChecker(errors);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <SwipeableDrawer\r\n        open={isOpen}\r\n        onClose={cancel}\r\n        onOpen={open}\r\n        anchor=\"left\"\r\n        classes={{\r\n          paper: classes.sidebarRoot,\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            {isFeedbackAddressLoading\r\n              ? <LinearProgress color=\"primary\" />\r\n              : null\r\n            }\r\n            <div className={classes.sidebarTitle}>\r\n              <Typography\r\n                className={classes.sidebarTitleContent}\r\n                variant=\"headline\"\r\n                gutterBottom\r\n                align=\"center\"\r\n              >\r\n                {'Поделитесь халявой с другими!'}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid className={classes.fieldsContainer} container spacing={24}>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('address')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <TextField\r\n                  error={isValidField('address')}\r\n                  required\r\n                  onChange={handleFieldChange('address')}\r\n                  value={feedback.address || ''}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  placeholder=\"ул. Халявина, 7\"\r\n                  label=\"Место халявы\"\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('type')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <InputLabel\r\n                  required\r\n                  error={isValidField('type')}\r\n                  htmlFor=\"freebieType\"\r\n                >\r\n                  {'Вид халявы'}\r\n                </InputLabel>\r\n                <Select\r\n                  error={isValidField('type')}\r\n                  onChange={handleFieldChange('type')}\r\n                  value={feedback.type}\r\n                  inputProps={{\r\n                    id: 'freebieType',\r\n                    name: 'freebieType',\r\n                  }}\r\n                  fullWidth\r\n                >\r\n                  {freebieTypes.map(type => (\r\n                    <MenuItem key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('author')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <TextField\r\n                  error={isValidField('author')}\r\n                  required\r\n                  onChange={handleFieldChange('author')}\r\n                  value={feedback.author}\r\n                  placeholder=\"Автор\"\r\n                  label=\"Freebee\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth className={classes.formField}>\r\n                <TextField\r\n                  onChange={handleFieldChange('description')}\r\n                  value={feedback.description}\r\n                  multiline\r\n                  placeholder=\"Описание найденной халявы\"\r\n                  label=\"Описание\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container className={classes.buttonsContainer}>\r\n                <Button onClick={cancel} variant=\"contained\" color=\"secondary\">Отменить</Button>\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={submit}>Отправить</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </SwipeableDrawer>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\n\r\nexport default withStyles(styles)(FeedbackSidebar);\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport FeedbackSidebar from './sidebar';\r\nimport { MAP_MODES } from '../../config/map';\r\n\r\nimport { close, open } from '../../redux/actions/ui/feedback-sidebar';\r\nimport { thunks, actions as feedbackActions } from '../../redux/feedback';\r\nimport { selectors as markersSelectors } from '../../redux/markers';\r\nimport { sharedActions } from '../../redux/shared';\r\n\r\nimport { validateFeedback, formatAddress } from './helpers';\r\n\r\nimport type { Feedback } from '../../types/models';\r\n\r\ntype Props = {\r\n  closeSidebar: () => void,\r\n  setReadMapMode: () => void,\r\n  openSidebar: () => void,\r\n  sendFeedback: () => void,\r\n  resetSuggestedAddress: () => void,\r\n  enqueueSnackbar: (message: string, options: any) => void,\r\n  isOpen: boolean,\r\n  location: any,\r\n  suggestedAddress: any,\r\n  freebieTypes: [],\r\n  isFeedbackAddressLoading: boolean,\r\n};\r\n\r\ntype State = {\r\n  address: string,\r\n  type: string[],\r\n  author: string,\r\n  description?: string,\r\n};\r\n\r\nconst defaultState: State = {\r\n  address: null,\r\n  type: [''],\r\n  author: '',\r\n  description: '',\r\n  errors: [],\r\n};\r\n\r\nclass FeedbackSidebarContainer extends Component<Props, State> {\r\n  state: State = defaultState;\r\n\r\n  componentDidUpdate() {\r\n    const { type, address } = this.state;\r\n    const { freebieTypes, suggestedAddress } = this.props;\r\n    if (type === defaultState.type && freebieTypes.length !== 0) {\r\n      this.setState({ type: freebieTypes[0].value });\r\n    }\r\n\r\n    if (address === null && suggestedAddress !== null) {\r\n      this.setState({\r\n        address: formatAddress(suggestedAddress.address),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFieldChange = (name: string) => (e: Event) => {\r\n    this.setState({ [name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (): void => {\r\n    const {\r\n      closeSidebar,\r\n      sendFeedback,\r\n      setReadMapMode,\r\n      location,\r\n    } = this.props;\r\n\r\n    const {\r\n      type,\r\n      address,\r\n      author,\r\n      description,\r\n    } = this.state;\r\n\r\n    const feedback: Feedback = {\r\n      location,\r\n      address,\r\n      type: type.toString(),\r\n      author,\r\n      description,\r\n    };\r\n\r\n    const state = validateFeedback(feedback);\r\n\r\n    if (state.hasErrors) {\r\n      this.setState({\r\n        errors: state.errors,\r\n      });\r\n    } else {\r\n      sendFeedback(feedback)\r\n        .then(() => {\r\n          this.props.enqueueSnackbar('Халява успешно отправлена!', {\r\n            variant: 'success',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.props.enqueueSnackbar('Ошибка при отправке халявы!', {\r\n            variant: 'error',\r\n          });\r\n        });\r\n      setReadMapMode();\r\n      closeSidebar();\r\n      this.setState({ ...defaultState });\r\n    }\r\n  };\r\n\r\n  handleCancel = (): void => {\r\n    const {\r\n      closeSidebar, setReadMapMode, resetSuggestedAddress,\r\n    } = this.props;\r\n\r\n    setReadMapMode();\r\n    resetSuggestedAddress();\r\n    this.setState({ ...defaultState });\r\n    closeSidebar();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isOpen,\r\n      openSidebar,\r\n      freebieTypes,\r\n      isFeedbackAddressLoading,\r\n    } = this.props;\r\n\r\n    const {\r\n      address,\r\n      author,\r\n      type,\r\n      description,\r\n      errors,\r\n    } = this.state;\r\n\r\n    if (freebieTypes.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const feedback: Feedback = {\r\n      address,\r\n      author,\r\n      type,\r\n      description,\r\n    };\r\n\r\n    return (\r\n      <FeedbackSidebar\r\n        feedback={feedback}\r\n        isFeedbackAddressLoading={isFeedbackAddressLoading}\r\n        errors={errors}\r\n        freebieTypes={freebieTypes}\r\n        isOpen={isOpen}\r\n        open={openSidebar}\r\n        submit={this.handleSubmit}\r\n        cancel={this.handleCancel}\r\n        handleFieldChange={this.handleFieldChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst { createFeedback } = thunks;\r\n\r\nconst mapState = state => ({\r\n  isOpen: state.ui.feedbackSidebar.open,\r\n  location: markersSelectors.selectNewMarkerPositionInGeoJSON(state),\r\n  freebieTypes: state.markers.shared.markerTypes,\r\n  ...state.feedback.feedbackAddress,\r\n});\r\n\r\nconst mapDispatch = {\r\n  closeSidebar: close,\r\n  openSidebar: open,\r\n  sendFeedback: createFeedback,\r\n  resetSuggestedAddress: () => feedbackActions.resetAddress(),\r\n  setReadMapMode: () => sharedActions.setMapMode(MAP_MODES.READ),\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(withSnackbar(FeedbackSidebarContainer));\r\n","import FeedbackSidebar from './container';\r\n\r\nexport default FeedbackSidebar;\r\n","/* @flow */\r\n\r\nconst getFlatPosition = (location) => {\r\n  const { latitude, longitude } = location;\r\n\r\n  return [latitude, longitude];\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getPositionsForPolyline = (route: any): Array<number[]> => {\r\n  if (!route) {\r\n    return [];\r\n  }\r\n\r\n  const buildedRoutes: Array<number[]> = route.maneuver.map(\r\n    ({ position }) => getFlatPosition(position),\r\n  );\r\n\r\n  const startPosition = getFlatPosition(route.start.originalPosition);\r\n  const endPosition = getFlatPosition(route.end.originalPosition);\r\n\r\n  return [startPosition, ...buildedRoutes, endPosition];\r\n};\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { newMarker } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: newMarker,\r\n  iconSize: markerIcon,\r\n  className: 'NewMarkerIcon',\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","/* @flow */\r\nimport React, { Component, createRef } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  FeatureGroup,\r\n  Polyline,\r\n  Marker,\r\n} from 'react-leaflet';\r\nimport {\r\n  ToiletMarker, WifiMarker, SocketMarker, WaterMarker, UserMarker,\r\n} from '../../components';\r\n\r\nimport { getPositionsForPolyline } from './helpers';\r\nimport {\r\n  MAP_MODES,\r\n  TILE_LAYER_URL,\r\n  MAP_ATTRIBUTION,\r\n  MAX_ZOOM,\r\n} from '../../config/map';\r\n\r\nimport styles, { ROUTE_COLOR } from './styles';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport type { Classes } from '../../types/styles';\r\nimport type { Wifi, Toilet } from '../../types/models';\r\nimport icon from '../../components/NewMarker/icon';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  wifi?: Wifi[],\r\n  sockets?: [],\r\n  toilets?: Toilet[],\r\n  water?: [],\r\n  userLocation: number[] | null,\r\n  route: any,\r\n  mapMode: string,\r\n  mapViewport: { center: number[], zoom: number },\r\n  buildRoute: (location: number[]) => void,\r\n  setNewMarkerPosition: (position: number[]) => void,\r\n  setMapViewport: (viewport: any) => void,\r\n};\r\n\r\ntype State = {\r\n  viewport: any,\r\n};\r\n\r\nclass FreeOpportunitiesMap extends Component<Props, State> {\r\n  static defaultProps = {\r\n    wifi: [],\r\n    toilets: [],\r\n    sockets: [],\r\n    water: [],\r\n  };\r\n\r\n  refNewMarker = createRef();\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { userLocation } = this.props;\r\n    const map = this.map.leafletElement;\r\n\r\n    if (userLocation !== null\r\n    && prevProps.userLocation !== userLocation\r\n    ) {\r\n      map.panTo(userLocation);\r\n    }\r\n  }\r\n\r\n  setMapRef = (element) => {\r\n    this.map = element;\r\n  };\r\n\r\n  handleViewportChanged = (viewport) => {\r\n    const {\r\n      setMapViewport, setNewMarkerPosition,\r\n      mapMode,\r\n    } = this.props;\r\n\r\n    setMapViewport(viewport);\r\n    if (mapMode === MAP_MODES.CREATE) {\r\n      const marker = this.refNewMarker.current;\r\n      if (marker) {\r\n        setNewMarkerPosition(viewport.center);\r\n        marker.leafletElement.setLatLng(viewport.center);\r\n      }\r\n    }\r\n  };\r\n\r\n  buildRouteToMarker = (location: number[]) => () => {\r\n    const { buildRoute } = this.props;\r\n\r\n    buildRoute(location);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      wifi, toilets, sockets, water,\r\n      userLocation, route, mapMode,\r\n      mapViewport,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        className={classes.map}\r\n        viewport={mapViewport}\r\n        onViewportChanged={this.handleViewportChanged}\r\n        zoomControl={false}\r\n        ref={this.setMapRef}\r\n        maxZoom={MAX_ZOOM}\r\n      >\r\n        <TileLayer\r\n          attribution={MAP_ATTRIBUTION}\r\n          url={TILE_LAYER_URL}\r\n        />\r\n        {\r\n          mapMode === MAP_MODES.CREATE && (\r\n            <FeatureGroup>\r\n              <Marker\r\n                zIndexOffset={1100}\r\n                icon={icon}\r\n                position={mapViewport.center}\r\n                ref={this.refNewMarker}\r\n              />\r\n            </FeatureGroup>\r\n          )\r\n        }\r\n        <FeatureGroup>\r\n          {userLocation && <UserMarker key={userLocation.toString()} location={userLocation} />}\r\n        </FeatureGroup>\r\n        <FeatureGroup>\r\n          {wifi.map(marker => (\r\n            <WifiMarker key={marker.id} buildRoute={this.buildRouteToMarker} wifi={marker} />\r\n          ))}\r\n          {toilets.map(marker => (\r\n            <ToiletMarker key={marker.id} buildRoute={this.buildRouteToMarker} toilet={marker} />\r\n          ))}\r\n          {sockets.map(marker => (\r\n            <SocketMarker key={marker.id} buildRoute={this.buildRouteToMarker} socket={marker} />\r\n          ))}\r\n          {water.map(marker => (\r\n            <WaterMarker key={marker.id} buildRoute={this.buildRouteToMarker} water={marker} />\r\n          ))}\r\n        </FeatureGroup>\r\n        <FeatureGroup>\r\n          <Polyline\r\n            color={ROUTE_COLOR}\r\n            positions={getPositionsForPolyline(route)}\r\n          />\r\n        </FeatureGroup>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FreeOpportunitiesMap);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  map: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n  },\r\n});\r\n\r\nexport const ROUTE_COLOR = '#3f51b5';\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Map from './map';\r\nimport { MARKER_FILTERS } from '../../components/FilterButton';\r\n\r\nimport { actions as markerActions, selectors, thunks } from '../../redux/markers';\r\nimport { sharedActions } from '../../redux/shared';\r\nimport { userActions } from '../../redux/user';\r\nimport {\r\n  thunks as routingThunks,\r\n  selectors as routingSelectors,\r\n} from '../../redux/routing';\r\n\r\nimport type { Wifi, Toilet } from '../../types/models';\r\n\r\ntype Props = {\r\n  wifi?: Wifi[],\r\n  toilets?: Toilet[],\r\n  sockets?: [],\r\n  water?: [],\r\n  mapMode: string,\r\n  route: any,\r\n  getMarkers: () => void,\r\n  getRoute: (number[], any) => void,\r\n  setCurrentLocation: (position: number[] | string) => void,\r\n  setNewMarkerPosition: (position: number[] | string) => void,\r\n  currentUserLocation: number[] | null,\r\n};\r\n\r\nclass MapContainer extends Component<Props> {\r\n  static defaultProps = {\r\n    wifi: [],\r\n    toilets: [],\r\n    sockets: [],\r\n    water: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { getMarkers } = this.props;\r\n\r\n    getMarkers();\r\n    this.getUserLocation();\r\n  }\r\n\r\n  getUserLocation = () => {\r\n    const { setCurrentLocation } = this.props;\r\n    const nativeGeolocation = navigator.geolocation;\r\n    const successCallback = (position) => {\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      setCurrentLocation([latitude, longitude]);\r\n    };\r\n    const errorCallback = (error) => {\r\n      console.error(error);\r\n      setCurrentLocation(error);\r\n    };\r\n\r\n    nativeGeolocation.getCurrentPosition(successCallback, errorCallback);\r\n  };\r\n\r\n  buildRoute = (marker) => {\r\n    const { getRoute, currentUserLocation } = this.props;\r\n\r\n    if (currentUserLocation !== null) {\r\n      getRoute(currentUserLocation, marker);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      wifi, toilets, sockets, water,\r\n      currentUserLocation, route,\r\n      mapMode,\r\n      setNewMarkerPosition,\r\n      mapViewport, setMapViewport,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        wifi={wifi}\r\n        toilets={toilets}\r\n        sockets={sockets}\r\n        water={water}\r\n        route={route}\r\n        userLocation={currentUserLocation}\r\n        mapMode={mapMode}\r\n        buildRoute={this.buildRoute}\r\n        setNewMarkerPosition={setNewMarkerPosition}\r\n        setMapViewport={setMapViewport}\r\n        mapViewport={mapViewport}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  const filter = selectors.selectFilter(state);\r\n  let wifi = [];\r\n  let toilets = [];\r\n  let sockets = [];\r\n  let water = [];\r\n\r\n  if (filter === MARKER_FILTERS.all.value) {\r\n    wifi = selectors.selectWifi(state);\r\n    toilets = selectors.selectToilets(state);\r\n    sockets = selectors.selectSockets(state);\r\n    water = selectors.selectWater(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.wifi.value) {\r\n    wifi = selectors.selectWifi(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.toilet.value) {\r\n    toilets = selectors.selectToilets(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.socket.value) {\r\n    sockets = selectors.selectSockets(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.water.value) {\r\n    water = selectors.selectWater(state);\r\n  }\r\n\r\n  return {\r\n    wifi,\r\n    toilets,\r\n    sockets,\r\n    water,\r\n    filter,\r\n    route: routingSelectors.selectRoute(state),\r\n    mapViewport: state.shared.mapViewport,\r\n    newMarkerPosition: state.markers.shared.newMarkerPosition,\r\n  };\r\n};\r\n\r\nconst { getMarkers } = thunks;\r\nconst { getRoute } = routingThunks;\r\nconst { setCurrentLocation } = userActions;\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMarkers: () => dispatch(getMarkers()),\r\n  getRoute: (point0, point1) => dispatch(getRoute(point0, point1)),\r\n  setCurrentLocation: (position: [] | string) => dispatch(setCurrentLocation(position)),\r\n  setNewMarkerPosition: position => dispatch(markerActions.setNewMarkerPosition(position)),\r\n  setMapViewport: viewport => dispatch(sharedActions.setMapViewport(viewport)),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(MapContainer);\r\n","import Map from './container';\r\n\r\nexport default Map;\r\n","// @flow\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  IconButton,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport {\r\n  DirectionsWalk as DirectionsWalkIcon,\r\n  Place as PlaceIcon,\r\n  Close as CloseIcon,\r\n} from '@material-ui/icons';\r\nimport { getTimeFromSummary, getDistanceFromSummary } from './helpers';\r\n\r\nimport styles from './styles';\r\n\r\nclass RoutePanel extends PureComponent {\r\n  render() {\r\n    const { classes, summary: { summary, marker }, resetRoute } = this.props;\r\n    const time = getTimeFromSummary(summary);\r\n    const distance = getDistanceFromSummary(summary);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {`Адрес: ${marker.address}`}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={resetRoute}\r\n            classes={{ root: classes.closeButtonRoot }}\r\n            className={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem disableGutters>\r\n            <ListItemIcon>\r\n              <PlaceIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {distance}\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem disableGutters>\r\n            <ListItemIcon>\r\n              <DirectionsWalkIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {time}\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoutePanel);\r\n","/* @flow */\r\nexport const getTimeFromSummary = (summary) => {\r\n  const { travelTime } = summary;\r\n\r\n  const minutes = travelTime / 60;\r\n  if (minutes <= 60) {\r\n    return `${Math.ceil(minutes)} минут`;\r\n  }\r\n\r\n  const hours = minutes / 60;\r\n\r\n  return `${Math.ceil(hours)} часов`;\r\n};\r\n\r\nexport const getDistanceFromSummary = (summary) => {\r\n  const { distance } = summary;\r\n\r\n  if (distance < 1000) {\r\n    return `${distance} м`;\r\n  }\r\n\r\n  return `${Math.ceil(distance / 1000)} км`;\r\n};\r\n","import Panel from './panel';\r\n\r\nexport default Panel;\r\n","export default () => ({\r\n  root: {\r\n    height: '100%',\r\n    padding: '1em 1.5em',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  closeButton: {\r\n    color: 'red',\r\n    marginBottom: '0.35em',\r\n  },\r\n  closeButtonRoot: {\r\n    padding: 0,\r\n    height: 25,\r\n  },\r\n});\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { withStyles, Button, LinearProgress } from '@material-ui/core';\r\nimport { UserLocationButton, FilterButton } from '../../components';\r\nimport FeedbackSidebar from '../FeedbackSidebar';\r\nimport Map from '../Map';\r\nimport RoutePanel from '../RouteInformationPanel';\r\nimport { MAP_MODES } from '../../config/map';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  submitFeedbackLocation: () => void,\r\n  setUserLocation: () => void,\r\n  setFilter: () => void,\r\n  resetRoute: () => void,\r\n  isMarkersFetching: boolean,\r\n  setCreationMapMode: () => void,\r\n  mapMode: string,\r\n  routeSummary: any,\r\n  selectedFilter: string | null,\r\n  currentUserLocation: number[] | null,\r\n  classes: Classes,\r\n  route: any,\r\n};\r\n\r\nconst MapPage = ({\r\n  submitFeedbackLocation,\r\n  setCreationMapMode,\r\n  mapMode,\r\n\r\n  setUserLocation,\r\n  currentUserLocation,\r\n\r\n  setFilter,\r\n  selectedFilter,\r\n\r\n  routeSummary,\r\n  resetRoute,\r\n\r\n  isMarkersFetching, classes,\r\n}: Props) => {\r\n  const isReadMode = mapMode === MAP_MODES.READ;\r\n\r\n  return (\r\n    <>\r\n      {isMarkersFetching\r\n        ? <LinearProgress className={classes.progress} />\r\n        : null\r\n      }\r\n      <Map mapMode={mapMode} currentUserLocation={currentUserLocation} />\r\n      <div className={classes.filterButton}>\r\n        <FilterButton selectedFilter={selectedFilter} setFilter={setFilter} />\r\n      </div>\r\n\r\n      <div className={classes.userLocationButton}>\r\n        <UserLocationButton onClick={setUserLocation} />\r\n      </div>\r\n\r\n      {mapMode === MAP_MODES.CREATE && <FeedbackSidebar />}\r\n\r\n      {routeSummary && (\r\n        <div className={classes.routePanel}>\r\n          <RoutePanel summary={routeSummary} resetRoute={resetRoute} />\r\n        </div>\r\n      )}\r\n\r\n      <div className={classes.contactUsWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={isReadMode ? setCreationMapMode : submitFeedbackLocation}\r\n          className={classes.contactUs}\r\n        >\r\n          { isReadMode ? 'Нашли халяву?' : 'Подтвердить' }\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={isReadMode ? setCreationMapMode : submitFeedbackLocation}\r\n        className={classes.contactUsDesktop}\r\n      >\r\n        { isReadMode ? 'Нашли халяву?' : 'Подтвердить' }\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MapPage);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  progress: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: 1005,\r\n  },\r\n  filterButton: {\r\n    position: 'absolute',\r\n    zIndex: 1001,\r\n  },\r\n  routePanel: {\r\n    position: 'absolute',\r\n    height: 'auto',\r\n    zIndex: 1001,\r\n  },\r\n  userLocationButton: {\r\n    position: 'absolute',\r\n    zIndex: 1002,\r\n  },\r\n  contactUsWrapper: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%',\r\n    zIndex: 1000,\r\n  },\r\n  contactUs: {\r\n    width: '100%',\r\n    borderRadius: 0,\r\n    fontFamily: '\\'Roboto Condensed\\', Arial, Helvetica, sans-serif',\r\n    fontWeight: 'bold',\r\n  },\r\n  contactUsDesktop: {\r\n    display: 'none',\r\n  },\r\n  '@media only screen and (min-width: 768px)': {\r\n    contactUs: {\r\n      display: 'none',\r\n    },\r\n    userLocationButton: {\r\n      right: '2%',\r\n      bottom: '4%',\r\n    },\r\n    filterButton: {\r\n      top: '2%',\r\n      right: '2%',\r\n    },\r\n    contactUsDesktop: {\r\n      display: 'inline-flex',\r\n      position: 'absolute',\r\n      zIndex: 1001,\r\n      left: '2%',\r\n      bottom: '4%',\r\n      color: 'black',\r\n      fontFamily: \"'Roboto Condensed', Arial, Helvetica, sans-serif\",\r\n      fontWeight: 'bold',\r\n    },\r\n    routePanel: {\r\n      left: '2%',\r\n      top: '2%',\r\n      width: '15em',\r\n    },\r\n  },\r\n  '@media only screen and (max-width: 768px)': {\r\n    userLocationButton: {\r\n      right: '4%',\r\n      top: '2%',\r\n    },\r\n    filterButton: {\r\n      left: '4%',\r\n      top: '2%',\r\n    },\r\n    routePanel: {\r\n      bottom: '0',\r\n      width: '100%',\r\n    },\r\n  },\r\n});\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport _ from 'lodash';\r\nimport { MAP_MODES } from '../../config/map';\r\nimport MapPage from './page';\r\n\r\nimport { open } from '../../redux/actions/ui/feedback-sidebar';\r\nimport { LOCATION_ACCESS_DENIED_CODE } from '../../redux/middlewares/const';\r\nimport { selectors as routingSelectors, routingActions } from '../../redux/routing';\r\nimport { thunks as feedbackThunks } from '../../redux/feedback';\r\nimport { userActions, selectors as userSelectors } from '../../redux/user';\r\nimport { sharedActions, selectors as sharedSelectors } from '../../redux/shared';\r\nimport {\r\n  actions as markerActions,\r\n  selectors as markersSelectors,\r\n  thunks as markersThunks,\r\n} from '../../redux/markers';\r\n\r\ntype Props = {\r\n  locationError: string,\r\n  setMapMode: (mode: string) => void,\r\n  getMarkerTypes: (mode: string) => void,\r\n  enqueueSnackbar: (message: string) => void,\r\n  setNewMarkerPositionOnMapViewport: () => void,\r\n  lastGlobalError: any,\r\n  openFeedbackSidebar: () => void,\r\n  getAddressFromCoordinates: (coordinates: number[]) => void,\r\n  mapViewport: {\r\n    center: number[],\r\n  },\r\n};\r\n\r\ntype State = {\r\n};\r\n\r\nclass MapPageContainer extends Component<Props, State> {\r\n  componentDidMount() {\r\n    const { getMarkerTypes } = this.props;\r\n\r\n    getMarkerTypes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps): void {\r\n    const { lastGlobalError, enqueueSnackbar } = this.props;\r\n\r\n    const oldErrorId = _.get(prevProps.lastGlobalError, 'errorId', null);\r\n    const newErrorId = _.get(lastGlobalError, 'errorId', null);\r\n\r\n    if (oldErrorId !== newErrorId && newErrorId !== null) {\r\n      const { errorMessage } = lastGlobalError;\r\n      enqueueSnackbar(errorMessage, { variant: 'error' });\r\n    }\r\n  }\r\n\r\n  setCreationMapMode = () => {\r\n    const { setMapMode, setNewMarkerPositionOnMapViewport } = this.props;\r\n\r\n    setNewMarkerPositionOnMapViewport();\r\n    setMapMode(MAP_MODES.CREATE);\r\n  };\r\n\r\n  submitFeedbackLocation = () => {\r\n    const { openFeedbackSidebar, getAddressFromCoordinates, mapViewport } = this.props;\r\n\r\n    getAddressFromCoordinates(mapViewport.center);\r\n    openFeedbackSidebar();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MapPage\r\n        {...this.props}\r\n        setCreationMapMode={this.setCreationMapMode}\r\n        submitFeedbackLocation={this.submitFeedbackLocation}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  isMarkersFetching: markersSelectors.selectIsAllMarkersFetching(state),\r\n  currentUserLocation: userSelectors.selectUserCurrentLocation(state),\r\n  locationError: userSelectors.selectUserCurrentLocationError(state),\r\n  selectedFilter: markersSelectors.selectFilter(state),\r\n  routeSummary: routingSelectors.selectRouteSummary(state),\r\n  lastGlobalError: sharedSelectors.selectLastError(state),\r\n  mapViewport: state.shared.mapViewport,\r\n  mapMode: sharedSelectors.selectMapMode(state),\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  openFeedbackSidebar: () => dispatch(open()),\r\n  setUserCurrentLocation: location => dispatch(userActions.setCurrentLocation(location)),\r\n  setFilter: filter => dispatch(markerActions.setFilter(filter)),\r\n  setNewMarkerPosition: position => dispatch(markerActions.setNewMarkerPosition(position)),\r\n  getMarkerTypes: () => dispatch(markersThunks.getMarkerTypes()),\r\n  resetRoute: () => dispatch(routingActions.resetRoute()),\r\n  setMapMode: mode => dispatch(sharedActions.setMapMode(mode)),\r\n  getAddressFromCoordinates: (coordinates: number[]) => dispatch(\r\n    feedbackThunks.getAddressFromCoordinates(coordinates),\r\n  ),\r\n});\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch) => {\r\n  const { currentUserLocation, mapViewport } = propsFromState;\r\n  const setUserLocation = () => {\r\n    if (currentUserLocation) {\r\n      propsFromDispatch.setUserCurrentLocation(currentUserLocation.slice());\r\n    } else {\r\n      propsFromDispatch.setUserCurrentLocation({\r\n        code: LOCATION_ACCESS_DENIED_CODE,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setNewMarkerPositionOnMapViewport = () => {\r\n    propsFromDispatch.setNewMarkerPosition(mapViewport.center);\r\n  };\r\n\r\n  return {\r\n    ...propsFromState,\r\n    ...propsFromDispatch,\r\n    setUserLocation,\r\n    setNewMarkerPositionOnMapViewport,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch, mergeProps)(withSnackbar(MapPageContainer));\r\n","import MapPage from './container';\r\n\r\nexport default MapPage;\r\n","/* @flow */\r\n\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { createStore } from './redux';\r\nimport { notification } from './config';\r\nimport theme from './styles/theme';\r\nimport MapPage from './views/MapPage';\r\n\r\nconst App = () => (\r\n  <Provider store={createStore()}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <SnackbarProvider\r\n        maxSnack={notification.MAX_SNACK}\r\n        anchorOrigin={notification.ANCHOR}\r\n      >\r\n        <BrowserRouter basename=\"/map\">\r\n          <>\r\n            <Switch>\r\n              <Route path=\"/\" component={MapPage} />\r\n            </Switch>\r\n          </>\r\n        </BrowserRouter>\r\n      </SnackbarProvider>\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","/* @flow */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './styles/reset.css';\r\nimport './styles/global.css';\r\n\r\nconst root: ?Element = document.getElementById('root');\r\n\r\nif (root) {\r\n  // eslint-disable-next-line\r\n  ReactDOM.render(<App />, root);\r\n}\r\n"],"sourceRoot":""}