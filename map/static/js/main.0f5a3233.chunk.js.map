{"version":3,"sources":["images/wifi.svg","images/toilet.svg","images/socket.svg","images/water.svg","images/user.svg","images/empty-landmark.svg","redux/middlewares/const.js","redux/shared/actions.js","config/map.js","redux/shared/reducer.js","redux/shared/selectors.js","redux/shared/index.js","redux/middlewares/globalErrorHandler.js","redux/actions/ui/feedback-sidebar.js","redux/reducers/ui/feedback-sidebar.js","redux/reducers/ui/index.js","redux/markers/toilets/actions.js","redux/markers/toilets/reducer.js","services/api.js","services/feedback.js","services/markers.js","services/routing.js","services/location.js","redux/markers/toilets/thunks.js","redux/markers/toilets/index.js","redux/markers/wifi/actions.js","redux/markers/wifi/reducer.js","redux/markers/wifi/thunks.js","redux/markers/wifi/index.js","redux/markers/sockets/actions.js","redux/markers/sockets/reducer.js","redux/markers/sockets/thunks.js","redux/markers/sockets/index.js","redux/markers/water/actions.js","redux/markers/water/reducer.js","redux/markers/water/thunks.js","redux/markers/water/index.js","redux/markers/actions.js","redux/markers/reducer.js","redux/user/actions.js","redux/user/selectors.js","redux/user/reducer.js","redux/user/index.js","redux/markers/selectors.js","redux/markers/thunks.js","redux/markers/index.js","redux/feedback/actions.js","redux/feedback/reducer/feedback.js","redux/feedback/reducer/address.js","redux/feedback/reducer/index.js","redux/feedback/thunks.js","redux/feedback/index.js","redux/routing/actions.js","redux/routing/reducer.js","redux/routing/selectors.js","redux/routing/helpers.js","redux/routing/thunks.js","redux/rootReducer.js","redux/routing/index.js","redux/store.js","config/notification.js","styles/theme.js","styles/sizes.js","components/ToiletMarker/icon.js","components/ToiletMarker/index.js","components/ToiletMarker/marker.jsx","components/ToiletMarker/styles.js","components/WifiMarker/icon.js","components/WifiMarker/index.js","components/WifiMarker/marker.jsx","components/WifiMarker/styles.js","components/SocketMarker/icon.js","components/SocketMarker/index.js","components/SocketMarker/marker.jsx","components/SocketMarker/styles.js","components/WaterMarker/icon.js","components/WaterMarker/index.js","components/WaterMarker/marker.jsx","components/WaterMarker/styles.js","components/UserMarker/icon.js","components/UserMarker/index.js","components/UserMarker/marker.jsx","components/UserLocationButton/index.js","components/UserLocationButton/button.jsx","components/FilterButton/styles.js","components/FilterButton/option.jsx","components/FilterButton/filters.js","components/FilterButton/icons.jsx","components/FilterButton/button.jsx","components/FilterButton/index.js","components/SearchButton/styles.js","components/SearchButton/button.jsx","components/SearchButton/index.js","views/FeedbackSidebar/helpers.js","views/FeedbackSidebar/styles.js","views/FeedbackSidebar/sidebar.jsx","views/FeedbackSidebar/container.jsx","views/FeedbackSidebar/index.js","views/Map/helpers.js","components/NewMarker/icon.js","views/Map/map.jsx","views/Map/styles.js","views/Map/container.jsx","views/Map/index.js","views/RouteInformationPanel/panel.jsx","views/RouteInformationPanel/helpers.js","views/RouteInformationPanel/index.js","views/RouteInformationPanel/styles.js","views/MapPage/page.jsx","views/MapPage/styles.js","views/MapPage/container.jsx","views/MapPage/index.js","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","GEOLOCATION_ERRORS","_GEOLOCATION_ERRORS","Object","defineProperty","createActions","SHARED","SET_ERROR","errorMessage","errorId","shortId","generate","SET_MAP_MODE","mode","SET_MAP_VIEWPORT","viewport","shared","setError","setMapMode","setMapViewport","MAP_MODES","READ","CREATE","defaultState","errorList","mapMode","mapViewport","zoom","center","reducer","handleActions","_handleActions","state","_ref","_ref$payload","payload","update","$push","_ref2","$set","_ref3","selectLastError","createSelector","list","length","selectMapMode","middleware","store","next","action","error","_","get","message","dispatch","sharedActions","geolocationErrorCode","open","createAction","concat","close","feedbackSidebarActions","feedback_sidebar_handleActions","toString","objectSpread","combineReducers","feedbackSidebar","MARKERS","TOILETS","GET_MARKERS_REQUEST","GET_MARKERS_SUCCESS","toilets","GET_MARKERS_ERROR","markers","getMarkersRequest","getMarkersSuccess","getMarkersError","reducer_handleActions","isFetching","toiletsToUpdate","map","w","location","rest","objectWithoutProperties","newLocation","coordinates","buildBackendApiUrl","root","url","buildApiUrl","process","feedbackApi","wifiApi","toiletsApi","socketsApi","waterApi","markersApi","routingApi","geocodingApi","lat","lng","createFeedback","feedback","type","feedbackData","axios","post","getWifi","getToilets","getSockets","getWater","getMarkerTypes","getRoute","point0","point1","data","getAddress","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","markersService","sent","t0","console","stop","this","_x","apply","arguments","WIFI","wifi","wifi_reducer_handleActions","wifiToUpdate","SOCKETS","sockets","sockets_reducer_handleActions","socketsToUpdate","socket","WATER","water","water_reducer_handleActions","waterToUpdate","SET_FILTER","filter","SET_SEARCH","SET_NEW_MARKER_POSITION","position","GET_TYPES_REQUEST","GET_TYPES_SUCCESS","types","GET_TYPES_ERROR","setFilter","setSearch","setNewMarkerPosition","getTypesRequest","getTypesSuccess","getTypesError","markersActions","selected","newMarkerPosition","markerTypes","isMarkerTypesFetching","markerTypesError","searchString","markers_reducer_handleActions","_ref4","_ref5","user","USER","SET_CURRENT_LOCATION","locationOrError","currentLocation","code","selectUserCurrentLocation","selectUserCurrentLocationError","locationError","setCurrentLocation","actions","rootSelector","selectWifi","selectToilets","selectSockets","selectWater","selectIsAllMarkersFetching","selectFilter","selectNewMarkerPositionInGeoJSON","userSelectors","userPosition","getMarkers","Promise","all","wifiThunks","toiletsThunks","socketsThunks","waterThunks","_callee2","_context2","_x2","FEEDBACK","CREATE_FEEDBACK_REQUEST","CREATE_FEEDBACK_SUCCESS","CREATE_FEEDBACK_ERROR","GET_ADDRESS_REQUEST","GET_ADDRESS_SUCCESS","address","GET_ADDRESS_ERROR","RESET_ADDRESS","createFeedbackRequest","createFeedbackSuccess","createFeedbackError","getAddressRequest","getAddressSuccess","getAddressError","resetAddress","feedback_handleActions","isLoading","suggestedAddress","feedbackAddressError","isFeedbackAddressLoading","address_handleActions","feedbackAddress","feedbackService","getAddressFromCoordinates","locationService","ROUTING","GET_ROUTE_REQUEST","marker","GET_ROUTE_SUCCESS","route","GET_ROUTE_ERROR","RESET_ROUTE","routing","getRouteRequest","getRouteSuccess","getRouteError","resetRoute","routing_reducer_handleActions","selectRouting","selectRoute","leg","selectRouteSummary","summary","getFormattedRoute","_route$","response","userLocation","routingService","reducers","ui","redux_store","applyMiddleware","thunk","globalErrorHandler","enhancer","composeWithDevTools","composeEnhancers","createStore","rootReducer","MAX_SNACK","ANCHOR","vertical","horizontal","theme","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","markerIcon","options","iconUrl","toilet","iconSize","icon","L","Icon","Marker","withStyles","routeButton","paddingTop","paddingBottom","&:hover","backgroundColor","content","width","fontSize","point","fontWeight","title","classes","buildRoute","react","onDblclick","Popup","autoPan","className","index_es","disableRipple","onClick","icons_index_es","description","userMarker","zIndexOffset","Button","react_default","createElement","color","styles","drop","display","flexDirection","alignItems","button","mainButton","optionButton","marginTop","@media only screen and (min-width: 768px)","top","left","isSelected","cc","size","MARKER_FILTERS","label","value","WcOptionIcon","SocketOptionIcon","WaterOptionIcon","WifiOptionIcon","ClearAllOptionIcon","FilterButton","onFilterClick","_this","props","toggle","setState","prevState","_this$props","selectedFilter","FilterButton_option","Component","wrapper","borderRadius","SearchButton","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isInputShown","searchValue","handleClickOutside","event","wrapperRef","contains","target","renderSearchButton","Zoom_default","in","unmountOnExit","onChange","renderInput","Slide_default","direction","ref","setWrapperRef","TextField_default","id","placeholder","variant","bind","assertThisInitialized","document","addEventListener","removeEventListener","node","validateFeedback","errors","author","trim","push","hasErrors","formatAddress","street","house","city","contrastText","sidebarRoot","overflowX","sidebarTitle","padding","sidebarTitleContent","fontFamily","fieldsContainer","margin","formField","buttonsContainer","justifyContent","breakpoints","up","freebieTypes","isOpen","cancel","submit","handleFieldChange","isValidField","field","includes","getFieldValidationChecker","onClose","onOpen","anchor","paper","container","item","xs","gutterBottom","align","spacing","required","fullWidth","InputLabelProps","shrink","htmlFor","inputProps","name","key","multiline","FeedbackSidebarContainer","e","handleSubmit","closeSidebar","sendFeedback","setReadMapMode","_this$state","then","enqueueSnackbar","catch","handleCancel","_this$props2","resetSuggestedAddress","_this$state2","_this$props3","_this$props4","openSidebar","_this$state3","sidebar","thunks","mapDispatch","feedbackActions","FeedbackSidebar","connect","markersSelectors","withSnackbar","getFlatPosition","latitude","longitude","getPositionsForPolyline","buildedRoutes","maneuver","startPosition","start","originalPosition","endPosition","end","toConsumableArray","newMarker","FreeOpportunitiesMap","refNewMarker","createRef","setMapRef","element","handleViewportChanged","current","leafletElement","setLatLng","buildRouteToMarker","prevProps","panTo","points","_this2","Map","onViewportChanged","zoomControl","maxZoom","TileLayer","attribution","FeatureGroup","components_UserMarker","components_WifiMarker","components_ToiletMarker","components_SocketMarker","components_WaterMarker","Polyline","positions","defaultProps","height","MapContainer","getUserLocation","navigator","geolocation","getCurrentPosition","_position$coords","coords","currentUserLocation","Map_map","filterBySearchString","toLowerCase","descriptionIncludes","titleIncludes","addressIncludes","routingThunks","userActions","selectors","routingSelectors","markerActions","RoutePanel","_this$props$summary","time","minutes","travelTime","Math","ceil","hours","getTimeFromSummary","distance","getDistanceFromSummary","header","closeButtonRoot","closeButton","disableGutters","PureComponent","Panel","marginBottom","progress","zIndex","filterButton","routePanel","userLocationButton","searchButton","contactUsWrapper","bottom","contactUs","contactUsDesktop","right","@media only screen and (max-width: 768px)","transform","submitFeedbackLocation","setCreationMapMode","setUserLocation","routeSummary","isMarkersFetching","isReadMode","views_Map","components_SearchButton","components_FilterButton","components_UserLocationButton","views_FeedbackSidebar","RouteInformationPanel","MapPageContainer","setNewMarkerPositionOnMapViewport","openFeedbackSidebar","lastGlobalError","oldErrorId","newErrorId","page","assign","MapPage","sharedSelectors","setUserCurrentLocation","markersThunks","routingActions","feedbackThunks","propsFromState","propsFromDispatch","slice","App","es","build","maxSnack","notification","anchorOrigin","react_router_dom","basename","Fragment","react_router","path","component","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.0f5a3233.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wifi.a5113c91.svg\";","module.exports = __webpack_public_path__ + \"static/media/toilet.26830feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/socket.b9333000.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.b07a9540.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c45c2ef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-landmark.76edbd6f.svg\";","export const NETWORK_ERROR_MESSAGE = 'Network Error';\r\nexport const NETWORK_ERROR_MESSAGE_RU = 'Ошибка подключения к интернету.';\r\n\r\nexport const LOCATION_ACCESS_DENIED_CODE = 1;\r\nexport const LOCATION_ACCESS_DENIED_MESSAGE_RU = 'Для работы приложения необходимо включить геолокацию.';\r\n\r\nexport const LOCATION_UNAVAILABLE_CODE = 2;\r\nexport const LOCATION_UNAVAILABLE_MESSAGE_RU = 'Ошибка при определении месторасположения.';\r\n\r\nexport const LOCATION_TIMEOUT_CODE = 3;\r\nexport const LOCATION_TIMEOUT_MESSAGE_RU = 'Время ожидания вышло.';\r\n\r\nexport const GEOLOCATION_ERRORS = {\r\n  [LOCATION_ACCESS_DENIED_CODE]: LOCATION_ACCESS_DENIED_MESSAGE_RU,\r\n  [LOCATION_UNAVAILABLE_CODE]: LOCATION_UNAVAILABLE_MESSAGE_RU,\r\n  [LOCATION_TIMEOUT_CODE]: LOCATION_TIMEOUT_MESSAGE_RU,\r\n};\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\nimport shortId from 'shortid';\r\n\r\nconst {\r\n  shared: {\r\n    setError,\r\n    setMapMode,\r\n    setMapViewport,\r\n  },\r\n} = createActions({\r\n  SHARED: {\r\n    SET_ERROR: errorMessage => ({ errorId: shortId.generate(), errorMessage }),\r\n    SET_MAP_MODE: mode => ({ mode }),\r\n    SET_MAP_VIEWPORT: viewport => ({ viewport }),\r\n  },\r\n});\r\n\r\nexport {\r\n  setError,\r\n  setMapMode,\r\n  setMapViewport,\r\n};\r\n","/* @flow */\r\nexport const TILE_LAYER_URL: string = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\nexport const MAP_ATTRIBUTION: string = '&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\r\n\r\nexport type MapMode = {\r\n  READ: string,\r\n  CREATE: string,\r\n};\r\n\r\nexport const MAP_MODES: MapMode = {\r\n  READ: 'read',\r\n  CREATE: 'create',\r\n};\r\n\r\nexport const DEFAULT_MAP_CENTER: number[] = [53.9017, 27.5429];\r\n\r\nexport const DEFAULT_MAP_ZOOM: number = 12;\r\nexport const MAX_ZOOM: number = 19;\r\n","// @flow\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport { setError, setMapMode, setMapViewport } from './actions';\r\nimport { DEFAULT_MAP_CENTER, DEFAULT_MAP_ZOOM, MAP_MODES } from '../../config/map';\r\n\r\nconst defaultState = {\r\n  errorList: [],\r\n\r\n  mapMode: MAP_MODES.READ,\r\n\r\n  mapViewport: {\r\n    zoom: DEFAULT_MAP_ZOOM,\r\n    center: DEFAULT_MAP_CENTER,\r\n  },\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setError]: (state, { payload: { errorMessage, errorId } }) => {\r\n    return update(state, {\r\n      errorList: {\r\n        $push: [{\r\n          errorId,\r\n          errorMessage,\r\n        }],\r\n      },\r\n    });\r\n  },\r\n  [setMapMode]: (state, { payload: { mode } }) => {\r\n    return update(state, {\r\n      mapMode: {\r\n        $set: mode,\r\n      },\r\n    });\r\n  },\r\n  [setMapViewport]: (state, { payload: { viewport } }) => {\r\n    return update(state, {\r\n      mapViewport: {\r\n        $set: viewport,\r\n      },\r\n    });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectErrorsList = state => state.shared.errorList;\r\n\r\nexport const selectLastError = createSelector(\r\n  selectErrorsList,\r\n  (list) => {\r\n    return list.length > 0 ? list[list.length - 1] : null;\r\n  },\r\n);\r\n\r\nexport const selectMapMode = state => state.shared.mapMode;\r\n","/* @flow */\r\n\r\nimport * as sharedActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  sharedActions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","// @flow\r\nimport _ from 'lodash';\r\nimport {\r\n  NETWORK_ERROR_MESSAGE, NETWORK_ERROR_MESSAGE_RU,\r\n  GEOLOCATION_ERRORS,\r\n} from './const';\r\nimport { sharedActions } from '../shared';\r\n\r\nconst middleware = store => next => (action) => {\r\n  const hasError = action.error\r\n    || _.get(action, 'payload.error', false);\r\n  if (hasError) {\r\n    const { payload } = action;\r\n    if (payload.message && payload.message === NETWORK_ERROR_MESSAGE) {\r\n      store.dispatch(sharedActions.setError(NETWORK_ERROR_MESSAGE_RU));\r\n    }\r\n    if (payload.geolocationErrorCode) {\r\n      const errorMessage = GEOLOCATION_ERRORS[payload.geolocationErrorCode];\r\n      store.dispatch(sharedActions.setError(errorMessage));\r\n    }\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default middleware;\r\n","/* @flow */\r\n\r\nimport { createAction } from 'redux-actions';\r\n\r\nconst prefix = 'FEEDBACK_SIDEBAR';\r\n\r\nconst open = createAction(`${prefix}/OPEN`);\r\nconst close = createAction(`${prefix}/CLOSE`);\r\n\r\nexport {\r\n  open,\r\n  close,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport { feedbackSidebarActions } from '../../actions/ui';\r\n\r\ntype State = {\r\n  +open: boolean,\r\n};\r\n\r\nconst { open, close } = feedbackSidebarActions;\r\n\r\nconst defaultState: State = {\r\n  open: false,\r\n};\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [open.toString()]: (state: State) => ({\r\n      ...state,\r\n      open: true,\r\n    }),\r\n    [close.toString()]: (state: State) => ({\r\n      ...state,\r\n      open: false,\r\n    }),\r\n  },\r\n  defaultState,\r\n);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport feedbackSidebar from './feedback-sidebar';\r\n\r\nexport default combineReducers({\r\n  feedbackSidebar,\r\n});\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  markers: {\r\n    toilets: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    TOILETS: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: toilets => ({ toilets }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { toilets } }) => {\r\n    const toiletsToUpdate = toilets.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: toiletsToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nconst baseApi: string = process.env.REACT_APP_API || '';\r\n\r\nconst buildApiUrl = (root: string) => (url: string) => `${root}${url}`;\r\nconst buildBackendApiUrl: (url: string) => string = buildApiUrl(baseApi);\r\n\r\nexport const feedbackApi = {\r\n  create: (): string => buildBackendApiUrl('/feedback'),\r\n};\r\n\r\nexport const wifiApi = {\r\n  get: () => buildBackendApiUrl('/wifi'),\r\n};\r\n\r\nexport const toiletsApi = {\r\n  get: () => buildBackendApiUrl('/toilets'),\r\n};\r\n\r\nexport const socketsApi = {\r\n  get: () => buildBackendApiUrl('/sockets'),\r\n};\r\n\r\nexport const waterApi = {\r\n  get: () => buildBackendApiUrl('/water'),\r\n};\r\n\r\nexport const markersApi = {\r\n  getTypes: () => buildBackendApiUrl('/markers/types'),\r\n};\r\n\r\nexport const routingApi = {\r\n  getRoute: () => buildBackendApiUrl('/route'),\r\n};\r\n\r\nexport const geocodingApi = {\r\n  getAddressFromCoordinates: (lat: number, lng: number) => buildBackendApiUrl(\r\n    `/location/geocoding/reverse/${lat}/${lng}`,\r\n  ),\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport { feedbackApi } from './api';\r\nimport type { HttpResponse, LocationGeoJSON } from './types';\r\n\r\nexport type Feedback = {\r\n  title?: string | null,\r\n  location: number[],\r\n  author: string,\r\n  address: string,\r\n  type: number,\r\n  password?: string | null,\r\n  description?: string | null,\r\n};\r\n\r\nexport type FeedbackRequestData = {\r\n  title?: string | null,\r\n  location: number[],\r\n  author: string,\r\n  address: string,\r\n  type: number[],\r\n  password?: string | null,\r\n  description?: string | null,\r\n};\r\n\r\nexport type FeedbackResponseData = {\r\n  id: string,\r\n  title?: string | null,\r\n  location: LocationGeoJSON,\r\n  author: string,\r\n  address: string,\r\n  type: number[],\r\n  password?: string | null,\r\n  description?: string | null,\r\n  creationDate: string,\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const createFeedback = (feedback: Feedback): Promise<HttpResponse<FeedbackResponseData>> => {\r\n  const { type, ...rest } = feedback;\r\n  const feedbackData: FeedbackRequestData = {\r\n    ...rest,\r\n    type: [type],\r\n  };\r\n\r\n  return axios.post(feedbackApi.create(), feedbackData);\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport {\r\n  markersApi,\r\n  wifiApi,\r\n  toiletsApi,\r\n  socketsApi,\r\n  waterApi,\r\n} from './api';\r\n\r\nexport const getWifi = (): Promise<any> => {\r\n  return axios.get(wifiApi.get());\r\n};\r\n\r\nexport const getToilets = (): Promise<any> => {\r\n  return axios.get(toiletsApi.get());\r\n};\r\n\r\nexport const getSockets = (): Promise<any> => {\r\n  return axios.get(socketsApi.get());\r\n};\r\n\r\nexport const getWater = (): Promise<any> => {\r\n  return axios.get(waterApi.get());\r\n};\r\n\r\nexport const getMarkerTypes = (): Promise<any> => {\r\n  return axios.get(markersApi.getTypes());\r\n};\r\n","/* @flow */\r\nimport axios from 'axios';\r\nimport { routingApi } from './api';\r\n\r\ntype GetRouteRequestData = {\r\n  point0: number[],\r\n  point1: number[],\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getRoute = (point0: number[], point1: number[]): Promise<any> => {\r\n  const data: GetRouteRequestData = {\r\n    point0,\r\n    point1,\r\n  };\r\n\r\n  return axios.post(routingApi.getRoute(), data);\r\n};\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { geocodingApi } from './api';\r\nimport type { HttpResponse, LocationGeoJSON } from './types';\r\n\r\ntype SuggestedAddressComponents = {\r\n  city: string,\r\n  district: string | null,\r\n  suburb: string | null,\r\n  street: string | null,\r\n  house: string | null,\r\n  name: string | null,\r\n};\r\n\r\nexport type SuggestedAddress = {\r\n  point: LocationGeoJSON,\r\n  address: SuggestedAddressComponents,\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getAddress = (lat: number, lng: number): Promise<HttpResponse<SuggestedAddress>> => {\r\n  return axios.get(geocodingApi.getAddressFromCoordinates(lat, lng));\r\n};\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getToilets = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getToilets();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError());\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getToilets,\r\n};\r\n","/* @flow */\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    wifi: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    WIFI: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: wifi => ({ wifi }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { wifi } }) => {\r\n    const wifiToUpdate = wifi.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: wifiToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getWifi = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getWifi();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getWifi,\r\n};\r\n","/* @flow */\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    sockets: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    SOCKETS: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: sockets => ({ sockets }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { sockets } }) => {\r\n    const socketsToUpdate = sockets.map((socket) => {\r\n      const { location, ...rest } = socket;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: socketsToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getSockets = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getSockets();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getSockets,\r\n};\r\n","/* @flow */\r\nimport * as socketsActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as socketsThunks from './thunks';\r\n\r\nexport {\r\n  socketsActions,\r\n  reducer,\r\n  socketsThunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\n\r\nconst {\r\n  markers: {\r\n    water: {\r\n      getMarkersRequest,\r\n      getMarkersSuccess,\r\n      getMarkersError,\r\n    },\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    WATER: {\r\n      GET_MARKERS_REQUEST: () => {},\r\n      GET_MARKERS_SUCCESS: water => ({ water }),\r\n      GET_MARKERS_ERROR: error => ({ error }),\r\n    },\r\n  },\r\n});\r\n\r\nexport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\n\r\nexport type State = {\r\n  +markers: Array<{\r\n    +location: number[],\r\n    +title: string,\r\n    +address: string,\r\n    +description?: string,\r\n  }>,\r\n  +error: Object,\r\n  +isFetching: boolean,\r\n};\r\n\r\nconst defaultState: State = {\r\n  markers: [],\r\n  error: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getMarkersRequest]: (state: State) => ({\r\n    ...state,\r\n    isFetching: true,\r\n  }),\r\n  [getMarkersSuccess]: (state: State, { payload: { water } }) => {\r\n    const waterToUpdate = water.map((w) => {\r\n      const { location, ...rest } = w;\r\n      const newLocation = location.coordinates;\r\n\r\n      return {\r\n        ...rest,\r\n        location: newLocation,\r\n      };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      isFetching: false,\r\n      markers: waterToUpdate,\r\n    };\r\n  },\r\n  [getMarkersError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isFetching: false,\r\n    error,\r\n  }),\r\n\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import {\r\n  getMarkersRequest,\r\n  getMarkersSuccess,\r\n  getMarkersError,\r\n} from './actions';\r\nimport { markersService } from '../../../services';\r\n\r\nconst getWater = () => async (dispatch) => {\r\n  dispatch(getMarkersRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getWater();\r\n    dispatch(getMarkersSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getMarkersError(error));\r\n  }\r\n};\r\n\r\nexport {\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  getWater,\r\n};\r\n","/* @flow */\r\nimport * as waterActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as waterThunks from './thunks';\r\n\r\nexport {\r\n  waterActions,\r\n  reducer,\r\n  waterThunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\nimport { actions as toiletsActions } from './toilets';\r\nimport { actions as wifiActions } from './wifi';\r\nimport { socketsActions } from './sockets';\r\nimport { waterActions } from './water';\r\n\r\nconst {\r\n  markers: {\r\n    setFilter,\r\n    setSearch,\r\n    setNewMarkerPosition,\r\n\r\n    getTypesRequest,\r\n    getTypesSuccess,\r\n    getTypesError,\r\n  },\r\n} = createActions({\r\n  MARKERS: {\r\n    SET_FILTER: (filter: string | null): {} => ({ filter }),\r\n    SET_SEARCH: (filter: string | null): {} => ({ filter }),\r\n    SET_NEW_MARKER_POSITION: (position: any) => {\r\n      return { location: position };\r\n    },\r\n\r\n    GET_TYPES_REQUEST: () => {},\r\n    GET_TYPES_SUCCESS: types => ({ types }),\r\n    GET_TYPES_ERROR: error => ({ error }),\r\n  },\r\n});\r\n\r\nexport {\r\n  setFilter,\r\n  setSearch,\r\n  setNewMarkerPosition,\r\n\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n\r\n  toiletsActions,\r\n  wifiActions,\r\n  socketsActions,\r\n  waterActions,\r\n};\r\n","/* @flow */\r\nimport { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport * as markersActions from './actions';\r\nimport toilets from './toilets';\r\nimport wifi from './wifi';\r\nimport sockets from './sockets';\r\nimport water from './water';\r\n\r\nexport type State = {\r\n  +selected: string | null,\r\n  newMarkerPosition: number[] | null,\r\n\r\n  markerTypes: [],\r\n  isMarkerTypesFetching: boolean,\r\n  markerTypesError: any,\r\n};\r\n\r\nconst {\r\n  setFilter,\r\n  setSearch,\r\n  setNewMarkerPosition,\r\n\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n} = markersActions;\r\n\r\nconst defaultState: State = {\r\n  selected: null,\r\n  newMarkerPosition: null,\r\n\r\n  markerTypes: [],\r\n  isMarkerTypesFetching: false,\r\n  markerTypesError: null,\r\n  searchString: '',\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setFilter]: (state: State, { payload: { filter } }) => ({\r\n    ...state,\r\n    selected: filter,\r\n  }),\r\n  [setSearch]: (state: State, { payload: { filter } }) => ({\r\n    ...state,\r\n    searchString: filter,\r\n  }),\r\n  [setNewMarkerPosition]: (state: State, { payload: { location } }) => ({\r\n    ...state,\r\n    newMarkerPosition: location,\r\n  }),\r\n\r\n  [getTypesRequest]: (state: State) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: true,\r\n    markerTypesError: defaultState.markerTypesError,\r\n  }),\r\n  [getTypesSuccess]: (state: State, { payload: { types } }) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: false,\r\n    markerTypes: types,\r\n  }),\r\n  [getTypesError]: (state: State, { payload: { error } }) => ({\r\n    ...state,\r\n    isMarkerTypesFetching: false,\r\n    markerTypesError: error,\r\n  }),\r\n}, defaultState);\r\n\r\n\r\nexport default combineReducers({\r\n  shared: reducer,\r\n  toilets,\r\n  wifi,\r\n  sockets,\r\n  water,\r\n});\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\ntype Actions = {\r\n  user: {\r\n    setCurrentLocation: (locationOrError: [] | {}) => void,\r\n  },\r\n};\r\n\r\nconst { user }: Actions = createActions({\r\n  USER: {\r\n    SET_CURRENT_LOCATION: (locationOrError: [] | {}) => {\r\n      if (!locationOrError.length) {\r\n        return {\r\n          error: true,\r\n          geolocationErrorCode: locationOrError.code,\r\n          currentLocation: null,\r\n        };\r\n      }\r\n      return { currentLocation: locationOrError };\r\n    },\r\n  },\r\n});\r\n\r\nexport default user;\r\n","/* @flow */\r\nexport const selectUserCurrentLocation = (state: any) => state.user.currentLocation;\r\n\r\nexport const selectUserCurrentLocationError = (state: any) => state.user.locationError;\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport actions from './actions';\r\n\r\nconst {\r\n  setCurrentLocation,\r\n} = actions;\r\n\r\ntype State = {\r\n  currentLocation: [] | null,\r\n  locationError: string | null,\r\n}\r\n\r\nconst defaultState: State = {\r\n  currentLocation: null,\r\n  locationError: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [setCurrentLocation.toString()]: (state: State, { payload: { currentLocation } }) => {\r\n    return update(state, {\r\n      currentLocation: {\r\n        $set: currentLocation,\r\n      },\r\n    });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import userActions from './actions';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\nimport reducer from './reducer';\r\n\r\nexport {\r\n  userActions,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\nimport { selectors as userSelectors } from '../user';\r\nimport type { Wifi } from '../../types/models';\r\nimport type { State } from './reducer';\r\n\r\ntype Selector = (state: {}) => any;\r\n\r\nconst rootSelector: Selector = (state): State => state.markers;\r\n\r\nexport const selectWifi: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State): Wifi[] => markers.wifi.markers,\r\n);\r\n\r\nexport const selectToilets: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.toilets.markers,\r\n);\r\n\r\nexport const selectSockets: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.sockets.markers,\r\n);\r\n\r\nexport const selectWater: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.water.markers,\r\n);\r\n\r\nexport const selectIsAllMarkersFetching: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State): boolean => {\r\n    return (\r\n      markers.wifi.isFetching\r\n    || markers.toilets.isFetching\r\n    || markers.sockets.isFetching\r\n    || markers.water.isFetching\r\n    );\r\n  },\r\n);\r\n\r\nexport const selectFilter: Selector = createSelector(\r\n  rootSelector,\r\n  (markers: State) => markers.shared.selected,\r\n);\r\n\r\nconst selectNewMarkerPosition = state => state.markers.shared.newMarkerPosition;\r\n\r\nexport const selectNewMarkerPositionInGeoJSON = createSelector(\r\n  [selectNewMarkerPosition, userSelectors.selectUserCurrentLocation],\r\n  (position, userPosition) => {\r\n    return !position ? userPosition : position;\r\n  },\r\n);\r\n","import {\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n} from './actions';\r\nimport { thunks as toiletsThunks } from './toilets';\r\nimport { thunks as wifiThunks } from './wifi';\r\nimport { socketsThunks } from './sockets';\r\nimport { waterThunks } from './water';\r\nimport { markersService } from '../../services';\r\n\r\nexport const getMarkers = () => async (dispatch) => {\r\n  await Promise.all([\r\n    dispatch(wifiThunks.getWifi()),\r\n    dispatch(toiletsThunks.getToilets()),\r\n    dispatch(socketsThunks.getSockets()),\r\n    dispatch(waterThunks.getWater()),\r\n  ]);\r\n};\r\n\r\nexport const getMarkerTypes = () => async (dispatch) => {\r\n  dispatch(getTypesRequest());\r\n\r\n  try {\r\n    const { data } = await markersService.getMarkerTypes();\r\n    dispatch(getTypesSuccess(data));\r\n  } catch (e) {\r\n    console.error(e);\r\n    dispatch(getTypesError(e));\r\n  }\r\n};\r\n\r\nexport {\r\n  wifiThunks,\r\n  toiletsThunks,\r\n  socketsThunks,\r\n  waterThunks,\r\n};\r\n","/* @flow */\r\n\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  feedback: {\r\n    createFeedbackRequest,\r\n    createFeedbackSuccess,\r\n    createFeedbackError,\r\n\r\n    getAddressRequest,\r\n    getAddressSuccess,\r\n    getAddressError,\r\n\r\n    resetAddress,\r\n  },\r\n} = createActions({\r\n  FEEDBACK: {\r\n    CREATE_FEEDBACK_REQUEST: (): void => {},\r\n    CREATE_FEEDBACK_SUCCESS: (): void => {},\r\n    CREATE_FEEDBACK_ERROR: (error: any): { error: any } => ({ error }),\r\n\r\n    GET_ADDRESS_REQUEST: (): void => {},\r\n    GET_ADDRESS_SUCCESS: address => ({ address }),\r\n    GET_ADDRESS_ERROR: (error: any) => ({ error }),\r\n\r\n    RESET_ADDRESS: () => {},\r\n  },\r\n});\r\n\r\nexport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n\r\n  getAddressRequest,\r\n  getAddressSuccess,\r\n  getAddressError,\r\n\r\n  resetAddress,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n} from '../actions';\r\n\r\ntype State = {\r\n  isLoading: boolean,\r\n  error?: {},\r\n  feedback: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  feedback: null,\r\n  error: {},\r\n  isLoading: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [createFeedbackRequest]: (state: State) => update(state, {\r\n    isLoading: {\r\n      $set: true,\r\n    },\r\n  }),\r\n  [createFeedbackSuccess]: (state: State) => update(state, {\r\n    isLoading: {\r\n      $set: false,\r\n    },\r\n  }),\r\n  [createFeedbackError]: (state: State, { payload: { error } }) => update(state, {\r\n    isLoading: {\r\n      $set: false,\r\n    },\r\n    error: {\r\n      $set: error,\r\n    },\r\n  }),\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  getAddressRequest,\r\n  getAddressSuccess,\r\n  getAddressError,\r\n\r\n  resetAddress,\r\n} from '../actions';\r\n\r\ntype State = {\r\n  isFeedbackAddressLoading: boolean,\r\n  feedbackAddressError?: any,\r\n  suggestedAddress: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  suggestedAddress: null,\r\n  feedbackAddressError: null,\r\n  isFeedbackAddressLoading: false,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getAddressRequest]: (state: State) => update(state, {\r\n    isFeedbackAddressLoading: {\r\n      $set: true,\r\n    },\r\n    feedbackAddressError: {\r\n      $set: defaultState.feedbackAddressError,\r\n    },\r\n  }),\r\n  [getAddressSuccess]: (state: State, { payload: { address } }) => update(state, {\r\n    suggestedAddress: {\r\n      $set: address,\r\n    },\r\n    isFeedbackAddressLoading: {\r\n      $set: false,\r\n    },\r\n  }),\r\n  [getAddressError]: (state: State, { payload: { error } }) => update(state, {\r\n    isFeedbackAddressLoading: {\r\n      $set: false,\r\n    },\r\n    feedbackAddressError: {\r\n      $set: error,\r\n    },\r\n  }),\r\n\r\n  [resetAddress]: (state: State) => update(state, {\r\n    isFeedbackAddressLoading: {\r\n      $set: defaultState.isFeedbackAddressLoading,\r\n    },\r\n    feedbackAddressError: {\r\n      $set: defaultState.feedbackAddressError,\r\n    },\r\n    suggestedAddress: {\r\n      $set: defaultState.suggestedAddress,\r\n    },\r\n  }),\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport feedback from './feedback';\r\nimport feedbackAddress from './address';\r\n\r\nexport default combineReducers({\r\n  feedback,\r\n  feedbackAddress,\r\n});\r\n","/* @flow */\r\nimport { feedbackService, locationService } from '../../services';\r\nimport {\r\n  createFeedbackRequest,\r\n  createFeedbackSuccess,\r\n  createFeedbackError,\r\n\r\n  getAddressRequest,\r\n  getAddressSuccess,\r\n  getAddressError,\r\n} from './actions';\r\nimport type { Feedback } from '../../types/models';\r\n\r\nexport const createFeedback = (feedback: Feedback) => async (dispatch) => {\r\n  dispatch(createFeedbackRequest());\r\n\r\n  try {\r\n    await feedbackService.createFeedback(feedback);\r\n    dispatch(createFeedbackSuccess());\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(createFeedbackError(error));\r\n\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAddressFromCoordinates = (coordinates: number[]) => async (dispatch) => {\r\n  dispatch(getAddressRequest());\r\n\r\n  try {\r\n    const { data } = await locationService.getAddress(coordinates[0], coordinates[1]);\r\n    dispatch(getAddressSuccess(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(getAddressError(error));\r\n\r\n    throw error;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  actions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  routing: {\r\n    getRouteRequest,\r\n    getRouteSuccess,\r\n    getRouteError,\r\n\r\n    resetRoute,\r\n  },\r\n} = createActions({\r\n  ROUTING: {\r\n    GET_ROUTE_REQUEST: marker => ({ marker }),\r\n    GET_ROUTE_SUCCESS: route => ({ route }),\r\n    GET_ROUTE_ERROR: error => ({ error }),\r\n\r\n    RESET_ROUTE: () => {},\r\n  },\r\n});\r\n\r\nexport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n\r\n  resetRoute,\r\n};\r\n","/* @flow */\r\nimport { handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\nimport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n  resetRoute,\r\n} from './actions';\r\nimport { actions as markersActions } from '../markers';\r\n\r\ntype State = {\r\n  selectedMarker: any,\r\n  route: any,\r\n  isFetching: boolean,\r\n  error: any,\r\n};\r\n\r\nconst defaultState: State = {\r\n  marker: null,\r\n  route: null,\r\n  isFetching: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = handleActions({\r\n  [getRouteRequest]: (state: State, { payload: { marker } }) => update(state, {\r\n    marker: { $set: marker },\r\n    isFetching: { $set: true },\r\n    error: { $set: defaultState.error },\r\n  }),\r\n  [getRouteSuccess]: (state: State, { payload: { route } }) => update(state, {\r\n    isFetching: { $set: false },\r\n    route: { $set: route },\r\n  }),\r\n  [getRouteError]: (state: State, { payload: { error } }) => update(state, {\r\n    isFetching: { $set: false },\r\n    error: { $set: error },\r\n  }),\r\n  [resetRoute]: (state: State) => update(state, { route: { $set: null } }),\r\n  [markersActions.setFilter]: (state: State, { payload: { filter } }) => {\r\n    return !filter\r\n      ? state\r\n      : update(state, {\r\n        error: {\r\n          $set: null,\r\n        },\r\n        route: {\r\n          $set: null,\r\n        },\r\n      });\r\n  },\r\n}, defaultState);\r\n\r\nexport default reducer;\r\n","/* @flow */\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectRouting = state => state.routing.route;\r\nconst selectMarkerForRouting = state => state.routing.marker;\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const selectRoute = createSelector(\r\n  selectRouting,\r\n  (route) => {\r\n    return route ? route.leg : null;\r\n  },\r\n);\r\n\r\nexport const selectRouteSummary = createSelector(\r\n  [selectRouting, selectMarkerForRouting],\r\n  (route, marker) => (route ? { summary: route.summary, marker } : null),\r\n);\r\n","/* @flow */\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getFormattedRoute = ({ response }) => {\r\n  const { route } = response;\r\n  const { leg, summary } = route[0];\r\n\r\n  return { leg: leg[0], summary };\r\n};\r\n","/* @flow */\r\nimport {\r\n  getRouteRequest,\r\n  getRouteSuccess,\r\n  getRouteError,\r\n} from './actions';\r\nimport { routingService } from '../../services';\r\nimport { getFormattedRoute } from './helpers';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getRoute = (userLocation, marker) => async (dispatch) => {\r\n  const { location } = marker;\r\n  dispatch(getRouteRequest(marker));\r\n\r\n  try {\r\n    const data = await routingService.getRoute(userLocation, location);\r\n    const route = getFormattedRoute(data.data);\r\n\r\n    dispatch(getRouteSuccess(route));\r\n  } catch (error) {\r\n    dispatch(getRouteError(error));\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport ui from './reducers/ui';\r\nimport markers from './markers';\r\nimport feedback from './feedback';\r\nimport user from './user';\r\nimport routing from './routing';\r\nimport shared from './shared';\r\n\r\ntype State = {\r\n  user: any,\r\n  ui: any,\r\n  markers: any,\r\n  feedback: any,\r\n  routing: any,\r\n  errors: any,\r\n};\r\n\r\nconst reducers: State = {\r\n  user,\r\n  ui,\r\n  markers,\r\n  feedback,\r\n  routing,\r\n  shared,\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","/* @flow */\r\n\r\nimport * as routingActions from './actions';\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as thunks from './thunks';\r\n\r\nexport {\r\n  routingActions,\r\n  reducer,\r\n  selectors,\r\n  thunks,\r\n};\r\n\r\nexport default reducer;\r\n","/* @flow */\r\n\r\nimport {\r\n  createStore,\r\n  applyMiddleware,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { globalErrorHandler } from './middlewares';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nexport default () => {\r\n  const middleware = applyMiddleware(\r\n    thunk,\r\n    globalErrorHandler,\r\n  );\r\n\r\n  const composeEnhancers = composeWithDevTools({});\r\n  const enhancer = composeEnhancers(\r\n    middleware,\r\n  );\r\n\r\n  return createStore(rootReducer, enhancer);\r\n};\r\n","// @flow\r\n\r\nexport const MAX_SNACK: number = 3;\r\n\r\nexport type NotificationAnchor = {\r\n  vertical: string,\r\n  horizontal: string,\r\n};\r\n\r\nexport const ANCHOR: NotificationAnchor = {\r\n  vertical: 'bottom',\r\n  horizontal: 'right',\r\n};\r\n","// @flow\r\n\r\nimport { createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#f4c844',\r\n    },\r\n    secondary: {\r\n      main: '#e53935',\r\n    },\r\n  },\r\n  typography: { useNextVariants: true },\r\n});\r\n\r\nexport default theme;\r\n","/* @flow */\r\n\r\nexport const markerIcon: number[] = [25, 37];\r\n\r\nexport const userMarkerIcon: number[] = [25, 25];\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { toilet } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: toilet,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Toilet } from '../../types/models';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  toilet: Toilet,\r\n  buildRoute: (any) => void,\r\n};\r\n\r\nconst ToiletMarker = ({ toilet, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={toilet.location}\r\n      onDblclick={() => { buildRoute(toilet)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Туалет</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(toilet)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{toilet.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{toilet.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ToiletMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { wifi } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: wifi,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Wifi } from '../../types/models';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  wifi: Wifi,\r\n  buildRoute: (location: number[]) => void,\r\n};\r\n\r\nconst WifiMarker = ({ wifi, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={wifi.location}\r\n      onDblclick={() => { buildRoute(wifi)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.point}>Название: </span>\r\n          <span className={classes.title}>\r\n            {wifi.title}\r\n          </span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(wifi)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>\r\n            {wifi.address}\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>\r\n            {wifi.description}\r\n          </span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(WifiMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { socket } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: socket,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  socket: any,\r\n  buildRoute: (any) => void,\r\n};\r\n\r\nconst SocketMarker = ({ socket, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={socket.location}\r\n      onDblclick={() => { buildRoute(socket)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Розетка</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(socket)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{socket.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{socket.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SocketMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { water } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: water,\r\n  iconSize: markerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport { withStyles, IconButton } from '@material-ui/core';\r\nimport { Directions as RouteIcon } from '@material-ui/icons';\r\nimport icon from './icon';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  water: any,\r\n  buildRoute: any,\r\n};\r\n\r\nconst WaterMarker = ({ water, classes, buildRoute }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      position={water.location}\r\n      onDblclick={() => { buildRoute(water)(); }}\r\n    >\r\n      <Popup autoPan={false}>\r\n        <div className={classes.content}>\r\n          <span className={classes.title}>Вода</span>\r\n          <IconButton\r\n            disableRipple\r\n            className={classes.routeButton}\r\n            onClick={buildRoute(water)}\r\n          >\r\n            <RouteIcon />\r\n          </IconButton>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Адрес: </span>\r\n          <span>{water.address}</span>\r\n          <br />\r\n          <br />\r\n          <span className={classes.point}>Описание: </span>\r\n          <span>{water.description || 'Отсутствует'}</span>\r\n        </div>\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(WaterMarker);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  routeButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    width: 250,\r\n    fontSize: 13,\r\n  },\r\n  point: {\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { userMarker } from '../../styles/images';\r\nimport { userMarkerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: userMarker,\r\n  iconSize: userMarkerIcon,\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","import Marker from './marker';\r\n\r\nexport default Marker;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { Marker } from 'react-leaflet';\r\nimport icon from './icon';\r\n\r\ntype Props = {\r\n  location: number[],\r\n};\r\n\r\nconst UserMarker = ({ location }: Props) => {\r\n  return (\r\n    <Marker\r\n      icon={icon}\r\n      zIndexOffset={10000}\r\n      position={location}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserMarker;\r\n","import Button from './button';\r\n\r\nexport default Button;\r\n","/* @flow */\r\nimport React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\nimport { MyLocation as MyLocationIcon } from '@material-ui/icons';\r\n\r\ntype Props = {\r\n  onClick: () => void,\r\n};\r\n\r\nconst UserLocationButton = ({ onClick }: Props) => {\r\n  return (\r\n    <Fab\r\n      color=\"primary\"\r\n      onClick={onClick}\r\n    >\r\n      <MyLocationIcon color=\"inherit\" />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default UserLocationButton;\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nconst styles = (theme: any): Styles => ({\r\n  filter: {\r\n  },\r\n  drop: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n  },\r\n  open: {\r\n    display: 'flex',\r\n  },\r\n  close: {\r\n    display: 'none',\r\n  },\r\n  mainButton: {\r\n  },\r\n  optionButton: {\r\n    marginTop: 15,\r\n  },\r\n  '@media only screen and (min-width: 768px)': {\r\n    filter: {\r\n      top: '2%',\r\n      left: '2%',\r\n    },\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport type { ElementType } from 'react';\r\nimport cc from 'classcat';\r\nimport { Fab, withStyles } from '@material-ui/core';\r\nimport styles from './styles';\r\n\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  filter: string | null,\r\n  onClick: (filter: string | null) => () => void,\r\n  classes: Classes,\r\n  Icon: ElementType,\r\n  isSelected: boolean,\r\n};\r\n\r\nconst Option = ({\r\n  Icon,\r\n  filter,\r\n  onClick,\r\n  classes,\r\n  isSelected,\r\n}: Props) => {\r\n  return (\r\n    <Fab\r\n      className={cc([classes.button, classes.optionButton])}\r\n      color={isSelected ? 'primary' : 'default'}\r\n      onClick={onClick(filter)}\r\n      size=\"small\"\r\n    >\r\n      <Icon />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Option);\r\n","// @flow\r\n\r\ntype MarkerFilterOption = {\r\n  label: string,\r\n  value: number | null,\r\n};\r\n\r\nexport type MarkerFilters = {\r\n  [string]: MarkerFilterOption,\r\n};\r\n\r\nexport const MARKER_FILTERS: MarkerFilters = {\r\n  all: { label: 'all', value: null },\r\n  wifi: { label: 'wifi', value: 1 },\r\n  toilet: { label: 'toilet', value: 2 },\r\n  socket: { label: 'socket', value: 3 },\r\n  water: { label: 'water', value: 4 },\r\n};\r\n","// @flow\r\nimport * as React from 'react';\r\nimport {\r\n  Wc as WcIcon,\r\n  Wifi as WifiIcon,\r\n  Power as PowerIcon,\r\n  Waves as WaterIcon,\r\n  ClearAll as ClearAllIcon,\r\n} from '@material-ui/icons';\r\n\r\nexport const WcOptionIcon = () => <WcIcon color=\"inherit\" />;\r\nexport const SocketOptionIcon = () => <PowerIcon color=\"inherit\" />;\r\nexport const WaterOptionIcon = () => <WaterIcon color=\"inherit\" />;\r\nexport const WifiOptionIcon = () => <WifiIcon color=\"inherit\" />;\r\nexport const ClearAllOptionIcon = () => <ClearAllIcon color=\"inherit\" />;\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Fab } from '@material-ui/core';\r\nimport { FilterList } from '@material-ui/icons';\r\nimport cc from 'classcat';\r\nimport Option from './option';\r\nimport { MARKER_FILTERS } from './filters';\r\nimport {\r\n  ClearAllOptionIcon,\r\n  SocketOptionIcon,\r\n  WcOptionIcon,\r\n  WifiOptionIcon,\r\n  WaterOptionIcon,\r\n} from './icons';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  selectedFilter: string,\r\n  setFilter: (filter: string | null) => void,\r\n};\r\n\r\ntype State = {\r\n  open: boolean,\r\n};\r\n\r\nclass FilterButton extends Component<Props, State> {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  onFilterClick = (filter: string | null) => () => {\r\n    const { setFilter } = this.props;\r\n\r\n    setFilter(filter);\r\n  };\r\n\r\n  toggle = (): void => {\r\n    this.setState((prevState: State) => ({\r\n      open: !prevState.open,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, selectedFilter } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={cc([classes.filter])}>\r\n        <Fab\r\n          className={cc([classes.button, classes.mainButton])}\r\n          color=\"primary\"\r\n          onClick={this.toggle}\r\n        >\r\n          <FilterList color=\"inherit\" />\r\n        </Fab>\r\n        <div className={cc([(open ? classes.open : classes.close), classes.drop])}>\r\n          <Option\r\n            isSelected={selectedFilter === null}\r\n            filter={MARKER_FILTERS.all.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={ClearAllOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.toilet.value}\r\n            filter={MARKER_FILTERS.toilet.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WcOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.wifi.value}\r\n            filter={MARKER_FILTERS.wifi.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WifiOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.socket.value}\r\n            filter={MARKER_FILTERS.socket.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={SocketOptionIcon}\r\n          />\r\n          <Option\r\n            isSelected={selectedFilter === MARKER_FILTERS.water.value}\r\n            filter={MARKER_FILTERS.water.value}\r\n            onClick={this.onFilterClick}\r\n            Icon={WaterOptionIcon}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FilterButton);\r\n","import Button from './button';\r\nimport { MARKER_FILTERS } from './filters';\r\n\r\nexport default Button;\r\n\r\nexport {\r\n  MARKER_FILTERS,\r\n};\r\n","import type { Styles } from '../../types/styles';\r\n\r\nconst styles = (theme: any): Styles => ({\r\n  wrapper: {\r\n    backgroundColor: '#ffffffdd',\r\n    borderRadius: '4px',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Fab } from '@material-ui/core';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\n\r\nimport styles from './styles';\r\n\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  onChange: () => void,\r\n};\r\n\r\ntype State = {\r\n  isInputShown: boolean,\r\n  searchValue: string\r\n};\r\n\r\nclass SearchButton extends Component<Props, State> {\r\n  state = {\r\n    isInputShown: false,\r\n    searchValue: '',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  onClick = () => {\r\n    this.setState({ isInputShown: true });\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    const { searchValue } = this.state;\r\n\r\n    if (!searchValue && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.setState({ isInputShown: false });\r\n    }\r\n  }\r\n\r\n  renderSearchButton = () => {\r\n    const { isInputShown } = this.state;\r\n\r\n    return (\r\n      <Zoom\r\n        in={!isInputShown}\r\n        unmountOnExit\r\n      >\r\n        <Fab\r\n          color=\"primary\"\r\n          onClick={this.onClick}\r\n        >\r\n          <SearchIcon color=\"inherit\" />\r\n        </Fab>\r\n      </Zoom>\r\n    );\r\n  }\r\n\r\n  onChange = (event) => {\r\n    const { value } = event.target;\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({ searchValue: value });\r\n    onChange(value);\r\n  }\r\n\r\n  renderInput = () => {\r\n    const { classes } = this.props;\r\n    const { isInputShown } = this.state;\r\n\r\n    return (\r\n\r\n      <Slide\r\n        direction=\"down\"\r\n        in={isInputShown}\r\n        unmountOnExit\r\n      >\r\n        <div ref={this.setWrapperRef} className={classes.wrapper}>\r\n          <TextField\r\n            id=\"outlined-search\"\r\n            placeholder=\"Поиск точки...\"\r\n            type=\"search\"\r\n            onChange={this.onChange}\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n      </Slide>\r\n\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isInputShown } = this.state;\r\n\r\n\r\n    return (\r\n      isInputShown ? this.renderInput() : this.renderSearchButton()\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SearchButton);\r\n","import Button from './button';\r\n\r\nexport default Button;\r\n","// @flow\r\n\r\nexport const validateFeedback = (feedback) => {\r\n  const errors = [];\r\n\r\n  if (!feedback.author) {\r\n    errors.push('author');\r\n  } else if (!feedback.author.trim()) {\r\n    errors.push('author');\r\n  }\r\n\r\n  if (!feedback.address) {\r\n    errors.push('address');\r\n  } else if (!feedback.address.trim()) {\r\n    errors.push('address');\r\n  }\r\n\r\n  return { errors, hasErrors: errors.length !== 0 };\r\n};\r\n\r\nexport const getFieldValidationChecker = errors => (field) => {\r\n  return errors.includes(field);\r\n};\r\n\r\nexport const formatAddress = (suggestedAddress: any): string => {\r\n  let address = '';\r\n  address += suggestedAddress.street\r\n    ? `${suggestedAddress.street}, `\r\n    : '';\r\n\r\n  address += suggestedAddress.house\r\n    ? `${suggestedAddress.house}, `\r\n    : '';\r\n\r\n  address += suggestedAddress.city\r\n    ? `${suggestedAddress.city}`\r\n    : '';\r\n\r\n  return address;\r\n};\r\n","/* @flow */\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport type { Theme } from '@material-ui/core';\r\nimport type { Styles } from '../../types/styles';\r\n\r\nconst sideMargin = 12;\r\nconst sidebarDesctopSize = 340;\r\n\r\nexport default (theme: Theme): Styles => ({\r\n  sidebarRoot: {\r\n    width: '100%',\r\n    overflowX: 'hidden',\r\n  },\r\n  sidebarTitle: {\r\n    padding: 16,\r\n    paddingBottom: 0,\r\n  },\r\n  sidebarTitleContent: {\r\n    fontFamily: \"'Roboto Condensed', Arial, Helvetica, sans-serif\",\r\n    fontWeight: 'bold',\r\n  },\r\n  fieldsContainer: {\r\n    margin: 0,\r\n  },\r\n  formField: {\r\n    margin: sideMargin,\r\n    width: '93%',\r\n  },\r\n  buttonsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    sidebarRoot: {\r\n      width: sidebarDesctopSize,\r\n    },\r\n  },\r\n});\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#4caf50',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: '#d14942',\r\n    },\r\n  },\r\n});\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport {\r\n  withStyles, SwipeableDrawer, Grid,\r\n  Button, TextField, Select, MenuItem,\r\n  FormControl, InputLabel, Typography,\r\n  MuiThemeProvider,\r\n  LinearProgress,\r\n} from '@material-ui/core';\r\nimport { getFieldValidationChecker } from './helpers';\r\nimport styles, { theme } from './styles';\r\nimport type { Classes } from '../../types/styles';\r\nimport type { Feedback } from '../../types/models';\r\n\r\ntype Props = {\r\n  +isOpen: boolean,\r\n  feedback: Feedback,\r\n  freebieTypes: [],\r\n  errors: String[],\r\n  +classes: Classes,\r\n  open: () => void,\r\n  +cancel: () => void,\r\n  +submit: () => void,\r\n  isFeedbackAddressLoading: boolean,\r\n  handleFieldChange: (fields: string) => void,\r\n};\r\n\r\nconst FeedbackSidebar = ({\r\n  feedback, freebieTypes,\r\n  isFeedbackAddressLoading,\r\n  errors,\r\n  open, isOpen,\r\n  cancel, submit, handleFieldChange,\r\n  classes,\r\n}: Props) => {\r\n  const isValidField = getFieldValidationChecker(errors);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <SwipeableDrawer\r\n        open={isOpen}\r\n        onClose={cancel}\r\n        onOpen={open}\r\n        anchor=\"left\"\r\n        classes={{\r\n          paper: classes.sidebarRoot,\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            {isFeedbackAddressLoading\r\n              ? <LinearProgress color=\"primary\" />\r\n              : null\r\n            }\r\n            <div className={classes.sidebarTitle}>\r\n              <Typography\r\n                className={classes.sidebarTitleContent}\r\n                variant=\"headline\"\r\n                gutterBottom\r\n                align=\"center\"\r\n              >\r\n                {'Поделитесь халявой с другими!'}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid className={classes.fieldsContainer} container spacing={24}>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('address')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <TextField\r\n                  error={isValidField('address')}\r\n                  required\r\n                  onChange={handleFieldChange('address')}\r\n                  value={feedback.address || ''}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  placeholder=\"ул. Халявина, 7\"\r\n                  label=\"Место халявы\"\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('type')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <InputLabel\r\n                  required\r\n                  error={isValidField('type')}\r\n                  htmlFor=\"freebieType\"\r\n                >\r\n                  {'Вид халявы'}\r\n                </InputLabel>\r\n                <Select\r\n                  error={isValidField('type')}\r\n                  onChange={handleFieldChange('type')}\r\n                  value={feedback.type}\r\n                  inputProps={{\r\n                    id: 'freebieType',\r\n                    name: 'freebieType',\r\n                  }}\r\n                  fullWidth\r\n                >\r\n                  {freebieTypes.map(type => (\r\n                    <MenuItem key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                error={isValidField('author')}\r\n                required\r\n                fullWidth\r\n                className={classes.formField}\r\n              >\r\n                <TextField\r\n                  error={isValidField('author')}\r\n                  required\r\n                  onChange={handleFieldChange('author')}\r\n                  value={feedback.author}\r\n                  placeholder=\"Автор\"\r\n                  label=\"Freebee\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth className={classes.formField}>\r\n                <TextField\r\n                  onChange={handleFieldChange('description')}\r\n                  value={feedback.description}\r\n                  multiline\r\n                  placeholder=\"Описание найденной халявы\"\r\n                  label=\"Описание\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container className={classes.buttonsContainer}>\r\n                <Button onClick={cancel} variant=\"contained\" color=\"secondary\">Отменить</Button>\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={submit}>Отправить</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </SwipeableDrawer>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\n\r\nexport default withStyles(styles)(FeedbackSidebar);\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport FeedbackSidebar from './sidebar';\r\nimport { MAP_MODES } from '../../config/map';\r\n\r\nimport { close, open } from '../../redux/actions/ui/feedback-sidebar';\r\nimport { thunks, actions as feedbackActions } from '../../redux/feedback';\r\nimport { selectors as markersSelectors } from '../../redux/markers';\r\nimport { sharedActions } from '../../redux/shared';\r\n\r\nimport { validateFeedback, formatAddress } from './helpers';\r\n\r\nimport type { Feedback } from '../../types/models';\r\n\r\ntype Props = {\r\n  closeSidebar: () => void,\r\n  setReadMapMode: () => void,\r\n  openSidebar: () => void,\r\n  sendFeedback: () => void,\r\n  resetSuggestedAddress: () => void,\r\n  enqueueSnackbar: (message: string, options: any) => void,\r\n  isOpen: boolean,\r\n  location: any,\r\n  suggestedAddress: any,\r\n  freebieTypes: [],\r\n  isFeedbackAddressLoading: boolean,\r\n};\r\n\r\ntype State = {\r\n  address: string,\r\n  type: string[],\r\n  author: string,\r\n  description?: string,\r\n};\r\n\r\nconst defaultState: State = {\r\n  address: null,\r\n  type: [''],\r\n  author: '',\r\n  description: '',\r\n  errors: [],\r\n};\r\n\r\nclass FeedbackSidebarContainer extends Component<Props, State> {\r\n  state: State = defaultState;\r\n\r\n  componentDidUpdate() {\r\n    const { type, address } = this.state;\r\n    const { freebieTypes, suggestedAddress } = this.props;\r\n    if (type === defaultState.type && freebieTypes.length !== 0) {\r\n      this.setState({ type: freebieTypes[0].value });\r\n    }\r\n\r\n    if (address === null && suggestedAddress !== null) {\r\n      this.setState({\r\n        address: formatAddress(suggestedAddress.address),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFieldChange = (name: string) => (e: Event) => {\r\n    this.setState({ [name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (): void => {\r\n    const {\r\n      closeSidebar,\r\n      sendFeedback,\r\n      setReadMapMode,\r\n      location,\r\n    } = this.props;\r\n\r\n    const {\r\n      type,\r\n      address,\r\n      author,\r\n      description,\r\n    } = this.state;\r\n\r\n    const feedback: Feedback = {\r\n      location,\r\n      address,\r\n      type: type.toString(),\r\n      author,\r\n      description,\r\n    };\r\n\r\n    const state = validateFeedback(feedback);\r\n\r\n    if (state.hasErrors) {\r\n      this.setState({\r\n        errors: state.errors,\r\n      });\r\n    } else {\r\n      sendFeedback(feedback)\r\n        .then(() => {\r\n          this.props.enqueueSnackbar('Халява успешно отправлена!', {\r\n            variant: 'success',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.props.enqueueSnackbar('Ошибка при отправке халявы!', {\r\n            variant: 'error',\r\n          });\r\n        });\r\n      setReadMapMode();\r\n      closeSidebar();\r\n      this.setState({ ...defaultState });\r\n    }\r\n  };\r\n\r\n  handleCancel = (): void => {\r\n    const {\r\n      closeSidebar, setReadMapMode, resetSuggestedAddress,\r\n    } = this.props;\r\n\r\n    setReadMapMode();\r\n    resetSuggestedAddress();\r\n    this.setState({ ...defaultState });\r\n    closeSidebar();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isOpen,\r\n      openSidebar,\r\n      freebieTypes,\r\n      isFeedbackAddressLoading,\r\n    } = this.props;\r\n\r\n    const {\r\n      address,\r\n      author,\r\n      type,\r\n      description,\r\n      errors,\r\n    } = this.state;\r\n\r\n    if (freebieTypes.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const feedback: Feedback = {\r\n      address,\r\n      author,\r\n      type,\r\n      description,\r\n    };\r\n\r\n    return (\r\n      <FeedbackSidebar\r\n        feedback={feedback}\r\n        isFeedbackAddressLoading={isFeedbackAddressLoading}\r\n        errors={errors}\r\n        freebieTypes={freebieTypes}\r\n        isOpen={isOpen}\r\n        open={openSidebar}\r\n        submit={this.handleSubmit}\r\n        cancel={this.handleCancel}\r\n        handleFieldChange={this.handleFieldChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst { createFeedback } = thunks;\r\n\r\nconst mapState = state => ({\r\n  isOpen: state.ui.feedbackSidebar.open,\r\n  location: markersSelectors.selectNewMarkerPositionInGeoJSON(state),\r\n  freebieTypes: state.markers.shared.markerTypes,\r\n  ...state.feedback.feedbackAddress,\r\n});\r\n\r\nconst mapDispatch = {\r\n  closeSidebar: close,\r\n  openSidebar: open,\r\n  sendFeedback: createFeedback,\r\n  resetSuggestedAddress: () => feedbackActions.resetAddress(),\r\n  setReadMapMode: () => sharedActions.setMapMode(MAP_MODES.READ),\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(withSnackbar(FeedbackSidebarContainer));\r\n","import FeedbackSidebar from './container';\r\n\r\nexport default FeedbackSidebar;\r\n","/* @flow */\r\n\r\nconst getFlatPosition = (location) => {\r\n  const { latitude, longitude } = location;\r\n\r\n  return [latitude, longitude];\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getPositionsForPolyline = (route: any): Array<number[]> => {\r\n  if (!route) {\r\n    return [];\r\n  }\r\n\r\n  const buildedRoutes: Array<number[]> = route.maneuver.map(\r\n    ({ position }) => getFlatPosition(position),\r\n  );\r\n\r\n  const startPosition = getFlatPosition(route.start.originalPosition);\r\n  const endPosition = getFlatPosition(route.end.originalPosition);\r\n\r\n  return [startPosition, ...buildedRoutes, endPosition];\r\n};\r\n","/* @flow */\r\nimport L from 'leaflet';\r\nimport type { Icon } from 'leaflet';\r\nimport { newMarker } from '../../styles/images';\r\nimport { markerIcon } from '../../styles/sizes';\r\nimport type { IconOptions } from '../../types/markers';\r\n\r\nconst options: IconOptions = {\r\n  iconUrl: newMarker,\r\n  iconSize: markerIcon,\r\n  className: 'NewMarkerIcon',\r\n};\r\n\r\nconst icon: Icon = new L.Icon(options);\r\n\r\nexport default icon;\r\n","/* @flow */\r\nimport React, { Component, createRef } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  FeatureGroup,\r\n  Polyline,\r\n  Marker,\r\n} from 'react-leaflet';\r\nimport {\r\n  ToiletMarker, WifiMarker, SocketMarker, WaterMarker, UserMarker,\r\n} from '../../components';\r\n\r\nimport { getPositionsForPolyline } from './helpers';\r\nimport {\r\n  MAP_MODES,\r\n  TILE_LAYER_URL,\r\n  MAP_ATTRIBUTION,\r\n  MAX_ZOOM,\r\n} from '../../config/map';\r\n\r\nimport styles, { ROUTE_COLOR } from './styles';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport type { Classes } from '../../types/styles';\r\nimport type { Wifi, Toilet } from '../../types/models';\r\nimport icon from '../../components/NewMarker/icon';\r\n\r\ntype Props = {\r\n  classes: Classes,\r\n  wifi?: Wifi[],\r\n  sockets?: [],\r\n  toilets?: Toilet[],\r\n  water?: [],\r\n  userLocation: number[] | null,\r\n  route: any,\r\n  mapMode: string,\r\n  mapViewport: { center: number[], zoom: number },\r\n  buildRoute: (location: number[]) => void,\r\n  setNewMarkerPosition: (position: number[]) => void,\r\n  setMapViewport: (viewport: any) => void,\r\n};\r\n\r\ntype State = {\r\n  viewport: any,\r\n};\r\n\r\nclass FreeOpportunitiesMap extends Component<Props, State> {\r\n  static defaultProps = {\r\n    wifi: [],\r\n    toilets: [],\r\n    sockets: [],\r\n    water: [],\r\n  };\r\n\r\n  refNewMarker = createRef();\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      userLocation, wifi, toilets, sockets, water,\r\n    } = this.props;\r\n    const map = this.map.leafletElement;\r\n\r\n    if (userLocation !== null\r\n    && prevProps.userLocation !== userLocation\r\n    ) {\r\n      map.panTo(userLocation);\r\n    }\r\n\r\n\r\n    if (prevProps.wifi.length > wifi.length\r\n      || prevProps.toilets.length > toilets.length\r\n      || prevProps.sockets.length > sockets.length\r\n      || prevProps.water.length > water.length) {\r\n      const points = [\r\n        ...wifi,\r\n        ...toilets,\r\n        ...sockets,\r\n        ...water,\r\n      ];\r\n\r\n      if (points.length === 1) {\r\n        map.panTo(points[0].location);\r\n      }\r\n    }\r\n  }\r\n\r\n  setMapRef = (element) => {\r\n    this.map = element;\r\n  };\r\n\r\n  handleViewportChanged = (viewport) => {\r\n    const {\r\n      setMapViewport, setNewMarkerPosition,\r\n      mapMode,\r\n    } = this.props;\r\n\r\n    setMapViewport(viewport);\r\n    if (mapMode === MAP_MODES.CREATE) {\r\n      const marker = this.refNewMarker.current;\r\n      if (marker) {\r\n        setNewMarkerPosition(viewport.center);\r\n        marker.leafletElement.setLatLng(viewport.center);\r\n      }\r\n    }\r\n  };\r\n\r\n  buildRouteToMarker = (location: number[]) => () => {\r\n    const { buildRoute } = this.props;\r\n\r\n    buildRoute(location);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      wifi, toilets, sockets, water,\r\n      userLocation, route, mapMode,\r\n      mapViewport,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        className={classes.map}\r\n        viewport={mapViewport}\r\n        onViewportChanged={this.handleViewportChanged}\r\n        zoomControl={false}\r\n        ref={this.setMapRef}\r\n        maxZoom={MAX_ZOOM}\r\n      >\r\n        <TileLayer\r\n          attribution={MAP_ATTRIBUTION}\r\n          url={TILE_LAYER_URL}\r\n        />\r\n        {\r\n          mapMode === MAP_MODES.CREATE && (\r\n            <FeatureGroup>\r\n              <Marker\r\n                zIndexOffset={1100}\r\n                icon={icon}\r\n                position={mapViewport.center}\r\n                ref={this.refNewMarker}\r\n              />\r\n            </FeatureGroup>\r\n          )\r\n        }\r\n        <FeatureGroup>\r\n          {userLocation && <UserMarker key={userLocation.toString()} location={userLocation} />}\r\n        </FeatureGroup>\r\n        <FeatureGroup>\r\n          {wifi.map(marker => (\r\n            <WifiMarker key={marker.id} buildRoute={this.buildRouteToMarker} wifi={marker} />\r\n          ))}\r\n          {toilets.map(marker => (\r\n            <ToiletMarker key={marker.id} buildRoute={this.buildRouteToMarker} toilet={marker} />\r\n          ))}\r\n          {sockets.map(marker => (\r\n            <SocketMarker key={marker.id} buildRoute={this.buildRouteToMarker} socket={marker} />\r\n          ))}\r\n          {water.map(marker => (\r\n            <WaterMarker key={marker.id} buildRoute={this.buildRouteToMarker} water={marker} />\r\n          ))}\r\n        </FeatureGroup>\r\n        <FeatureGroup>\r\n          <Polyline\r\n            color={ROUTE_COLOR}\r\n            positions={getPositionsForPolyline(route)}\r\n          />\r\n        </FeatureGroup>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FreeOpportunitiesMap);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  map: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n  },\r\n});\r\n\r\nexport const ROUTE_COLOR = '#3f51b5';\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Map from './map';\r\nimport { MARKER_FILTERS } from '../../components/FilterButton';\r\n\r\nimport { actions as markerActions, selectors, thunks } from '../../redux/markers';\r\nimport { sharedActions } from '../../redux/shared';\r\nimport { userActions } from '../../redux/user';\r\nimport {\r\n  thunks as routingThunks,\r\n  selectors as routingSelectors,\r\n} from '../../redux/routing';\r\n\r\nimport type { Wifi, Toilet } from '../../types/models';\r\n\r\ntype Props = {\r\n  wifi?: Wifi[],\r\n  toilets?: Toilet[],\r\n  sockets?: [],\r\n  water?: [],\r\n  mapMode: string,\r\n  route: any,\r\n  getMarkers: () => void,\r\n  getRoute: (number[], any) => void,\r\n  setCurrentLocation: (position: number[] | string) => void,\r\n  setNewMarkerPosition: (position: number[] | string) => void,\r\n  currentUserLocation: number[] | null,\r\n};\r\n\r\nclass MapContainer extends Component<Props> {\r\n  static defaultProps = {\r\n    wifi: [],\r\n    toilets: [],\r\n    sockets: [],\r\n    water: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { getMarkers } = this.props;\r\n\r\n    getMarkers();\r\n    this.getUserLocation();\r\n  }\r\n\r\n  getUserLocation = () => {\r\n    const { setCurrentLocation } = this.props;\r\n    const nativeGeolocation = navigator.geolocation;\r\n    const successCallback = (position) => {\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      setCurrentLocation([latitude, longitude]);\r\n    };\r\n    const errorCallback = (error) => {\r\n      console.error(error);\r\n      setCurrentLocation(error);\r\n    };\r\n\r\n    nativeGeolocation.getCurrentPosition(successCallback, errorCallback);\r\n  };\r\n\r\n  buildRoute = (marker) => {\r\n    const { getRoute, currentUserLocation } = this.props;\r\n\r\n    if (currentUserLocation !== null) {\r\n      getRoute(currentUserLocation, marker);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      wifi, toilets, sockets, water,\r\n      currentUserLocation, route,\r\n      mapMode,\r\n      setNewMarkerPosition,\r\n      mapViewport, setMapViewport,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        wifi={wifi}\r\n        toilets={toilets}\r\n        sockets={sockets}\r\n        water={water}\r\n        route={route}\r\n        userLocation={currentUserLocation}\r\n        mapMode={mapMode}\r\n        buildRoute={this.buildRoute}\r\n        setNewMarkerPosition={setNewMarkerPosition}\r\n        setMapViewport={setMapViewport}\r\n        mapViewport={mapViewport}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst filterBySearchString = (point, searchString) => {\r\n  const value = searchString.toLowerCase().trim();\r\n  const descriptionIncludes = point.description && point.description.toLowerCase().includes(value);\r\n  const titleIncludes = point.title && point.title.toLowerCase().includes(value);\r\n  const addressIncludes = point.address && point.address.toLowerCase().includes(value);\r\n\r\n  return descriptionIncludes || titleIncludes || addressIncludes;\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const filter = selectors.selectFilter(state);\r\n  const { searchString } = state.markers.shared;\r\n\r\n  let wifi = [];\r\n  let toilets = [];\r\n  let sockets = [];\r\n  let water = [];\r\n\r\n  if (filter === MARKER_FILTERS.all.value) {\r\n    wifi = selectors.selectWifi(state);\r\n    toilets = selectors.selectToilets(state);\r\n    sockets = selectors.selectSockets(state);\r\n    water = selectors.selectWater(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.wifi.value) {\r\n    wifi = selectors.selectWifi(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.toilet.value) {\r\n    toilets = selectors.selectToilets(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.socket.value) {\r\n    sockets = selectors.selectSockets(state);\r\n  }\r\n\r\n  if (filter === MARKER_FILTERS.water.value) {\r\n    water = selectors.selectWater(state);\r\n  }\r\n\r\n  if (searchString) {\r\n    wifi = wifi.filter(point => filterBySearchString(point, searchString));\r\n    toilets = toilets.filter(point => filterBySearchString(point, searchString));\r\n    sockets = sockets.filter(point => filterBySearchString(point, searchString));\r\n    water = water.filter(point => filterBySearchString(point, searchString));\r\n  }\r\n\r\n  return {\r\n    wifi,\r\n    toilets,\r\n    sockets,\r\n    water,\r\n    filter,\r\n    route: routingSelectors.selectRoute(state),\r\n    mapViewport: state.shared.mapViewport,\r\n    newMarkerPosition: state.markers.shared.newMarkerPosition,\r\n  };\r\n};\r\n\r\nconst { getMarkers } = thunks;\r\nconst { getRoute } = routingThunks;\r\nconst { setCurrentLocation } = userActions;\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMarkers: () => dispatch(getMarkers()),\r\n  getRoute: (point0, point1) => dispatch(getRoute(point0, point1)),\r\n  setCurrentLocation: (position: [] | string) => dispatch(setCurrentLocation(position)),\r\n  setNewMarkerPosition: position => dispatch(markerActions.setNewMarkerPosition(position)),\r\n  setMapViewport: viewport => dispatch(sharedActions.setMapViewport(viewport)),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(MapContainer);\r\n","import Map from './container';\r\n\r\nexport default Map;\r\n","// @flow\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  IconButton,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport {\r\n  DirectionsWalk as DirectionsWalkIcon,\r\n  Place as PlaceIcon,\r\n  Close as CloseIcon,\r\n} from '@material-ui/icons';\r\nimport { getTimeFromSummary, getDistanceFromSummary } from './helpers';\r\n\r\nimport styles from './styles';\r\n\r\nclass RoutePanel extends PureComponent {\r\n  render() {\r\n    const { classes, summary: { summary, marker }, resetRoute } = this.props;\r\n    const time = getTimeFromSummary(summary);\r\n    const distance = getDistanceFromSummary(summary);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {`Адрес: ${marker.address}`}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={resetRoute}\r\n            classes={{ root: classes.closeButtonRoot }}\r\n            className={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem disableGutters>\r\n            <ListItemIcon>\r\n              <PlaceIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {distance}\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem disableGutters>\r\n            <ListItemIcon>\r\n              <DirectionsWalkIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {time}\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoutePanel);\r\n","/* @flow */\r\nexport const getTimeFromSummary = (summary) => {\r\n  const { travelTime } = summary;\r\n\r\n  const minutes = travelTime / 60;\r\n  if (minutes <= 60) {\r\n    return `${Math.ceil(minutes)} минут`;\r\n  }\r\n\r\n  const hours = minutes / 60;\r\n\r\n  return `${Math.ceil(hours)} часов`;\r\n};\r\n\r\nexport const getDistanceFromSummary = (summary) => {\r\n  const { distance } = summary;\r\n\r\n  if (distance < 1000) {\r\n    return `${distance} м`;\r\n  }\r\n\r\n  return `${Math.ceil(distance / 1000)} км`;\r\n};\r\n","import Panel from './panel';\r\n\r\nexport default Panel;\r\n","export default () => ({\r\n  root: {\r\n    height: '100%',\r\n    padding: '1em 1.5em',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  closeButton: {\r\n    color: 'red',\r\n    marginBottom: '0.35em',\r\n  },\r\n  closeButtonRoot: {\r\n    padding: 0,\r\n    height: 25,\r\n  },\r\n});\r\n","/* @flow */\r\nimport * as React from 'react';\r\nimport { withStyles, Button, LinearProgress } from '@material-ui/core';\r\nimport {\r\n  UserLocationButton,\r\n  FilterButton,\r\n  SearchButton,\r\n} from '../../components';\r\nimport FeedbackSidebar from '../FeedbackSidebar';\r\nimport Map from '../Map';\r\nimport RoutePanel from '../RouteInformationPanel';\r\nimport { MAP_MODES } from '../../config/map';\r\nimport styles from './styles';\r\nimport type { Classes } from '../../types/styles';\r\n\r\ntype Props = {\r\n  submitFeedbackLocation: () => void,\r\n  setUserLocation: () => void,\r\n  setFilter: () => void,\r\n  setSearch: () => void,\r\n  resetRoute: () => void,\r\n  isMarkersFetching: boolean,\r\n  setCreationMapMode: () => void,\r\n  mapMode: string,\r\n  routeSummary: any,\r\n  selectedFilter: string | null,\r\n  currentUserLocation: number[] | null,\r\n  classes: Classes,\r\n  route: any,\r\n};\r\n\r\nconst MapPage = ({\r\n  submitFeedbackLocation,\r\n  setCreationMapMode,\r\n  mapMode,\r\n\r\n  setUserLocation,\r\n  currentUserLocation,\r\n\r\n  setFilter,\r\n  setSearch,\r\n  selectedFilter,\r\n\r\n  routeSummary,\r\n  resetRoute,\r\n\r\n  isMarkersFetching, classes,\r\n}: Props) => {\r\n  const isReadMode = mapMode === MAP_MODES.READ;\r\n\r\n  return (\r\n    <>\r\n      {isMarkersFetching\r\n        ? <LinearProgress className={classes.progress} />\r\n        : null\r\n      }\r\n      <Map mapMode={mapMode} currentUserLocation={currentUserLocation} />\r\n      <div className={classes.searchButton}>\r\n        <SearchButton onChange={setSearch} />\r\n      </div>\r\n\r\n      <div className={classes.filterButton}>\r\n        <FilterButton selectedFilter={selectedFilter} setFilter={setFilter} />\r\n      </div>\r\n\r\n      <div className={classes.userLocationButton}>\r\n        <UserLocationButton onClick={setUserLocation} />\r\n      </div>\r\n\r\n      {mapMode === MAP_MODES.CREATE && <FeedbackSidebar />}\r\n\r\n      {routeSummary && (\r\n        <div className={classes.routePanel}>\r\n          <RoutePanel summary={routeSummary} resetRoute={resetRoute} />\r\n        </div>\r\n      )}\r\n\r\n      <div className={classes.contactUsWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={isReadMode ? setCreationMapMode : submitFeedbackLocation}\r\n          className={classes.contactUs}\r\n        >\r\n          { isReadMode ? 'Нашли халяву?' : 'Подтвердить' }\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={isReadMode ? setCreationMapMode : submitFeedbackLocation}\r\n        className={classes.contactUsDesktop}\r\n      >\r\n        { isReadMode ? 'Нашли халяву?' : 'Подтвердить' }\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MapPage);\r\n","/* @flow */\r\nimport type { Styles } from '../../types/styles';\r\n\r\nexport default (): Styles => ({\r\n  progress: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: 1005,\r\n  },\r\n  filterButton: {\r\n    position: 'absolute',\r\n    zIndex: 1001,\r\n  },\r\n  routePanel: {\r\n    position: 'absolute',\r\n    height: 'auto',\r\n    zIndex: 1001,\r\n  },\r\n  userLocationButton: {\r\n    position: 'absolute',\r\n    zIndex: 1002,\r\n  },\r\n  searchButton: {\r\n    position: 'absolute',\r\n    zIndex: 1003,\r\n  },\r\n  contactUsWrapper: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%',\r\n    zIndex: 1000,\r\n  },\r\n  contactUs: {\r\n    width: '100%',\r\n    borderRadius: 0,\r\n    fontFamily: '\\'Roboto Condensed\\', Arial, Helvetica, sans-serif',\r\n    fontWeight: 'bold',\r\n  },\r\n  contactUsDesktop: {\r\n    display: 'none',\r\n  },\r\n  '@media only screen and (min-width: 768px)': {\r\n    contactUs: {\r\n      display: 'none',\r\n    },\r\n    userLocationButton: {\r\n      right: '2%',\r\n      bottom: '4%',\r\n    },\r\n    filterButton: {\r\n      top: '2%',\r\n      right: '2%',\r\n    },\r\n    searchButton: {\r\n      top: '2%',\r\n      left: '2%',\r\n    },\r\n    contactUsDesktop: {\r\n      display: 'inline-flex',\r\n      position: 'absolute',\r\n      zIndex: 1001,\r\n      left: '2%',\r\n      bottom: '4%',\r\n      color: 'black',\r\n      fontFamily: \"'Roboto Condensed', Arial, Helvetica, sans-serif\",\r\n      fontWeight: 'bold',\r\n    },\r\n    routePanel: {\r\n      left: '2%',\r\n      top: '2%',\r\n      width: '15em',\r\n    },\r\n  },\r\n  '@media only screen and (max-width: 768px)': {\r\n    userLocationButton: {\r\n      right: '4%',\r\n      top: '2%',\r\n    },\r\n    filterButton: {\r\n      left: '4%',\r\n      top: '2%',\r\n    },\r\n    searchButton: {\r\n      top: '2%',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n    },\r\n    routePanel: {\r\n      bottom: '0',\r\n      width: '100%',\r\n    },\r\n  },\r\n});\r\n","/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport _ from 'lodash';\r\nimport { MAP_MODES } from '../../config/map';\r\nimport MapPage from './page';\r\n\r\nimport { open } from '../../redux/actions/ui/feedback-sidebar';\r\nimport { LOCATION_ACCESS_DENIED_CODE } from '../../redux/middlewares/const';\r\nimport { selectors as routingSelectors, routingActions } from '../../redux/routing';\r\nimport { thunks as feedbackThunks } from '../../redux/feedback';\r\nimport { userActions, selectors as userSelectors } from '../../redux/user';\r\nimport { sharedActions, selectors as sharedSelectors } from '../../redux/shared';\r\nimport {\r\n  actions as markerActions,\r\n  selectors as markersSelectors,\r\n  thunks as markersThunks,\r\n} from '../../redux/markers';\r\n\r\ntype Props = {\r\n  locationError: string,\r\n  setMapMode: (mode: string) => void,\r\n  getMarkerTypes: (mode: string) => void,\r\n  enqueueSnackbar: (message: string) => void,\r\n  setNewMarkerPositionOnMapViewport: () => void,\r\n  lastGlobalError: any,\r\n  openFeedbackSidebar: () => void,\r\n  getAddressFromCoordinates: (coordinates: number[]) => void,\r\n  mapViewport: {\r\n    center: number[],\r\n  },\r\n};\r\n\r\ntype State = {\r\n};\r\n\r\nclass MapPageContainer extends Component<Props, State> {\r\n  componentDidMount() {\r\n    const { getMarkerTypes } = this.props;\r\n\r\n    getMarkerTypes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps): void {\r\n    const { lastGlobalError, enqueueSnackbar } = this.props;\r\n\r\n    const oldErrorId = _.get(prevProps.lastGlobalError, 'errorId', null);\r\n    const newErrorId = _.get(lastGlobalError, 'errorId', null);\r\n\r\n    if (oldErrorId !== newErrorId && newErrorId !== null) {\r\n      const { errorMessage } = lastGlobalError;\r\n      enqueueSnackbar(errorMessage, { variant: 'error' });\r\n    }\r\n  }\r\n\r\n  setCreationMapMode = () => {\r\n    const { setMapMode, setNewMarkerPositionOnMapViewport } = this.props;\r\n\r\n    setNewMarkerPositionOnMapViewport();\r\n    setMapMode(MAP_MODES.CREATE);\r\n  };\r\n\r\n  submitFeedbackLocation = () => {\r\n    const { openFeedbackSidebar, getAddressFromCoordinates, mapViewport } = this.props;\r\n\r\n    getAddressFromCoordinates(mapViewport.center);\r\n    openFeedbackSidebar();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MapPage\r\n        {...this.props}\r\n        setCreationMapMode={this.setCreationMapMode}\r\n        submitFeedbackLocation={this.submitFeedbackLocation}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  isMarkersFetching: markersSelectors.selectIsAllMarkersFetching(state),\r\n  currentUserLocation: userSelectors.selectUserCurrentLocation(state),\r\n  locationError: userSelectors.selectUserCurrentLocationError(state),\r\n  selectedFilter: markersSelectors.selectFilter(state),\r\n  routeSummary: routingSelectors.selectRouteSummary(state),\r\n  lastGlobalError: sharedSelectors.selectLastError(state),\r\n  mapViewport: state.shared.mapViewport,\r\n  mapMode: sharedSelectors.selectMapMode(state),\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  openFeedbackSidebar: () => dispatch(open()),\r\n  setUserCurrentLocation: location => dispatch(userActions.setCurrentLocation(location)),\r\n  setFilter: filter => dispatch(markerActions.setFilter(filter)),\r\n  setSearch: filter => dispatch(markerActions.setSearch(filter)),\r\n  setNewMarkerPosition: position => dispatch(markerActions.setNewMarkerPosition(position)),\r\n  getMarkerTypes: () => dispatch(markersThunks.getMarkerTypes()),\r\n  resetRoute: () => dispatch(routingActions.resetRoute()),\r\n  setMapMode: mode => dispatch(sharedActions.setMapMode(mode)),\r\n  getAddressFromCoordinates: (coordinates: number[]) => dispatch(\r\n    feedbackThunks.getAddressFromCoordinates(coordinates),\r\n  ),\r\n});\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch) => {\r\n  const { currentUserLocation, mapViewport } = propsFromState;\r\n  const setUserLocation = () => {\r\n    if (currentUserLocation) {\r\n      propsFromDispatch.setUserCurrentLocation(currentUserLocation.slice());\r\n    } else {\r\n      propsFromDispatch.setUserCurrentLocation({\r\n        code: LOCATION_ACCESS_DENIED_CODE,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setNewMarkerPositionOnMapViewport = () => {\r\n    propsFromDispatch.setNewMarkerPosition(mapViewport.center);\r\n  };\r\n\r\n  return {\r\n    ...propsFromState,\r\n    ...propsFromDispatch,\r\n    setUserLocation,\r\n    setNewMarkerPositionOnMapViewport,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch, mergeProps)(withSnackbar(MapPageContainer));\r\n","import MapPage from './container';\r\n\r\nexport default MapPage;\r\n","/* @flow */\r\n\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { createStore } from './redux';\r\nimport { notification } from './config';\r\nimport theme from './styles/theme';\r\nimport MapPage from './views/MapPage';\r\n\r\nconst App = () => (\r\n  <Provider store={createStore()}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <SnackbarProvider\r\n        maxSnack={notification.MAX_SNACK}\r\n        anchorOrigin={notification.ANCHOR}\r\n      >\r\n        <BrowserRouter basename=\"/map\">\r\n          <>\r\n            <Switch>\r\n              <Route path=\"/\" component={MapPage} />\r\n            </Switch>\r\n          </>\r\n        </BrowserRouter>\r\n      </SnackbarProvider>\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","/* @flow */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './styles/reset.css';\r\nimport './styles/global.css';\r\n\r\nconst root: ?Element = document.getElementById('root');\r\n\r\nif (root) {\r\n  // eslint-disable-next-line\r\n  ReactDOM.render(<App />, root);\r\n}\r\n"],"sourceRoot":""}